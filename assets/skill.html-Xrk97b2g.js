import{_ as t}from"./layout-Bi4s7nek.js";import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as i,c as n,e as l}from"./app-D593cD6u.js";const r="/assets/simple-TwM_HucS.jpg",o="/assets/same-CL-mXKw8.jpg",p="/assets/clear-C2yB4F-w.jpg",s="/assets/with-space-CSzOPwZD.jpg",c="/assets/center-adjust-C2nZN-2Q.jpg",d={};function m(g,e){return i(),n("div",null,e[0]||(e[0]=[l('<p>图标是 UI 设计中最基础也是很重要的部分，辅助人们更好的理解功能内容。随着扁平化设计风格的普及，图标的风格越来越简约，看似简单的图形，实际要准确的表达含义，也是需要注意一些方法的。下面是是图标设计的实用技巧。</p><h2 id="简单" tabindex="-1"><a class="header-anchor" href="#简单"><span>简单</span></a></h2><p>一个图标一个非写实的表现。不需要担心图标不够真实，消除不必要的细节，用基本的形状只保留最基础的部分，让这个图标更容易被理解。</p><figure><img src="'+r+'" alt="简单" tabindex="0" loading="lazy"><figcaption>简单</figcaption></figure><p>有时候图标会因为有更多细节而传达了更复杂的意思，这反而是样式问题!</p><h2 id="一致性" tabindex="-1"><a class="header-anchor" href="#一致性"><span>一致性</span></a></h2><p>在整个图标系统中，您的图标要保持同一种样式来确保图标完美协调。比如同样的形状，填充，描边粗细，尺寸等。要制定好可以被复用的栅格，规范和样式。</p><figure><img src="'+o+'" alt="一致性" tabindex="0" loading="lazy"><figcaption>一致性</figcaption></figure><p>如果可以的话，尽可能重新设计这些图标，而不要混入其他不同风格的图标来使用。</p><h2 id="清晰" tabindex="-1"><a class="header-anchor" href="#清晰"><span>清晰</span></a></h2><p>设计「完美像素」的图标，特别是在图标非常小的时候。这样图标的描边就可以保持锐利，不会有模糊。注意半像素的情况出现，尽量避免小数点参数。</p><figure><img src="'+p+'" alt="清晰" tabindex="0" loading="lazy"><figcaption>清晰</figcaption></figure><p>这也可以帮您保持图标的辨识度，在您等比缩放他们的时候保持清晰。</p><h2 id="空间" tabindex="-1"><a class="header-anchor" href="#空间"><span>空间</span></a></h2><p>确保您的图标的所有形状有足够的空间。笔画和空间过于狭小会使图标更难被理解。</p><figure><img src="'+s+'" alt="空间" tabindex="0" loading="lazy"><figcaption>空间</figcaption></figure><p>最少给 2px 的负空间</p><h2 id="视觉调整" tabindex="-1"><a class="header-anchor" href="#视觉调整"><span>视觉调整</span></a></h2><p>确保您的图标看起来是正确的，适当的调整元素的对齐来达到视觉上的平衡。</p><figure><img src="'+c+'" alt="视觉调整" tabindex="0" loading="lazy"><figcaption>视觉调整</figcaption></figure><p>不要只关注参数，如果有需要就用上您的眼睛来衡量，轻微移动这些元素。</p><h2 id="布局规格" tabindex="-1"><a class="header-anchor" href="#布局规格"><span>布局规格</span></a></h2><p>所有图标保持同样的尺寸，在图标周围定义一个可调整的内边距范围，尽量让元素设计在这个范围内。不要挤满所有元素。</p><figure><img src="'+t+'" alt="布局规格" tabindex="0" loading="lazy"><figcaption>布局规格</figcaption></figure><p>当图标需要额外控件时可以超出这个内边距范围。</p>',25)]))}const _=a(d,[["render",m],["__file","skill.html.vue"]]),y=JSON.parse('{"path":"/design/icon/skill.html","title":"图标设计技巧","lang":"zh-CN","frontmatter":{"title":"图标设计技巧","icon":"creative","date":"2020-09-14T00:00:00.000Z","category":"设计","tag":["Icon"],"description":"图标是 UI 设计中最基础也是很重要的部分，辅助人们更好的理解功能内容。随着扁平化设计风格的普及，图标的风格越来越简约，看似简单的图形，实际要准确的表达含义，也是需要注意一些方法的。下面是是图标设计的实用技巧。 简单 一个图标一个非写实的表现。不需要担心图标不够真实，消除不必要的细节，用基本的形状只保留最基础的部分，让这个图标更容易被理解。 简单简单 ...","head":[["meta",{"property":"og:url","content":"https://blog.tlcsdm.com/design/icon/skill.html"}],["meta",{"property":"og:site_name","content":"梦里不知身是客"}],["meta",{"property":"og:title","content":"图标设计技巧"}],["meta",{"property":"og:description","content":"图标是 UI 设计中最基础也是很重要的部分，辅助人们更好的理解功能内容。随着扁平化设计风格的普及，图标的风格越来越简约，看似简单的图形，实际要准确的表达含义，也是需要注意一些方法的。下面是是图标设计的实用技巧。 简单 一个图标一个非写实的表现。不需要担心图标不够真实，消除不必要的细节，用基本的形状只保留最基础的部分，让这个图标更容易被理解。 简单简单 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-03T05:28:44.000Z"}],["meta",{"property":"article:author","content":"unknowIfGuestInDream"}],["meta",{"property":"article:tag","content":"Icon"}],["meta",{"property":"article:published_time","content":"2020-09-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-03T05:28:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"图标设计技巧\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-09-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-03T05:28:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"unknowIfGuestInDream\\",\\"url\\":\\"https://tlcsdm.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://blog.tlcsdm.com/atom.xml","title":"梦里不知身是客 Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://blog.tlcsdm.com/feed.json","title":"梦里不知身是客 JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://blog.tlcsdm.com/rss.xml","title":"梦里不知身是客 RSS Feed"}]]},"headers":[{"level":2,"title":"简单","slug":"简单","link":"#简单","children":[]},{"level":2,"title":"一致性","slug":"一致性","link":"#一致性","children":[]},{"level":2,"title":"清晰","slug":"清晰","link":"#清晰","children":[]},{"level":2,"title":"空间","slug":"空间","link":"#空间","children":[]},{"level":2,"title":"视觉调整","slug":"视觉调整","link":"#视觉调整","children":[]},{"level":2,"title":"布局规格","slug":"布局规格","link":"#布局规格","children":[]}],"git":{"createdTime":1706938124000,"updatedTime":1706938124000,"contributors":[{"name":"梦里不知身是客","email":"tang97155@gmail.com","commits":1}]},"readingTime":{"minutes":2.01,"words":602},"filePathRelative":"design/icon/skill.md","localizedDate":"2020年9月14日","excerpt":"","autoDesc":true}');export{_ as comp,y as data};
