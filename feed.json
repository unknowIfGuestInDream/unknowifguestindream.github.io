{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "梦里不知身是客",
  "home_page_url": "https://blog.tlcsdm.com/",
  "feed_url": "https://blog.tlcsdm.com/feed.json",
  "description": "梦里不知身是客的博客",
  "favicon": "https://blog.tlcsdm.com/favicon.ico",
  "items": [
    {
      "title": "APP 组件设计规范",
      "url": "https://blog.tlcsdm.com/design/APP.html",
      "id": "https://blog.tlcsdm.com/design/APP.html",
      "summary": "本文对应用程序设计中常见的组件及其作用进行了介绍。",
      "content_html": "<p>本文对应用程序设计中常见的组件及其作用进行了介绍。</p>\n<!-- more -->\n<h2>页面总体布局</h2>\n<ul>\n<li>\n<h3>navigationbar</h3>\n<p>简称 Navbar 也就是导航栏。</p>\n<p>主要负责承接页面的导航操作。</p>\n<p>在内部界面上，一般左侧展示返回操作，居中显示页面标题，右侧展示更多操作。</p>\n<p>在主页上，主要承载 tabpage 对应的功能展示与触发。</p>\n<p>在 navbar 上，设计要突出质感，应该以简约为主。</p>\n<p>使用不鲜明的颜色，可以使用 APP 或网页对的主体色。</p>\n<p>可附以纯色 icon。</p>\n<p>不能太吸睛导致用户对页面内容注意的分散。</p>\n<p>有条件的情况下应该设计其切换动效。</p>\n<p>\n\n</p>\n</li>\n</ul>\n<p>好文推荐: <a href=\"https://www.jianshu.com/p/6037e4f79f4d\" target=\"_blank\" rel=\"noopener noreferrer\">iOS 导航栏动效设计思路</a></p>\n<ul>\n<li>\n<h3>Tabbar</h3>\n<p>APP 打开后底部的操作栏叫 tabbar，一般设置 2-5 个模块，每个模块应该设计 logo 与文字，对应的界面叫 tabpage。</p>\n<p>在 logo 上应以简约为主，应当设计设置点击与激活效果。</p>\n<p>tabpage 的设置要慎重，分类展示 APP 最关键的几个分项设置，并在每个界面内展示具体内容。</p>\n<p>\n</p>\n</li>\n</ul>\n<h3>Page</h3>\n<p>App 每个页面的背景色，除了纯文章之外不应采用纯白色，设计可以向 APP 主题色靠拢。</p>\n<p>应当针对不同设备造成的不同长宽比、分辨率设置不同的页面排版样式，并制作不同的 UI 布局。</p>\n<p>\n\n\n</p>\n<ul>\n<li>\n<h3>Sider</h3>\n<p>侧边栏，可以设置侧边固定按钮点击弹出或者从左向右滑动弹出式。</p>\n<p>一般用于承载不需要展示的一些设置项、介绍项、个人信息项。</p>\n<p>\n</p>\n</li>\n</ul>\n<h2>UI 元素</h2>\n<ul>\n<li>\n<h3>Grid</h3>\n<p>九宫格结构，实际使用的时候 3×3、4×2 都有广泛使用。</p>\n<p>Gird 结构主要用于罗列展示各项功能，或者是各项板块。</p>\n<p>各元素应该以上部的圆形或异形图标于下部的说明文字为主。</p>\n<p>在移动设备上一般不显示边框、不设计点击动效，而在 PC 与 HD 恰好相反。</p>\n<p>\n</p>\n</li>\n<li>\n<h3>Menu</h3>\n<p>菜单有多种表现方式，比如 float menu、pop-up menu、modal menu、dropdown 等。</p>\n</li>\n<li>\n<h3><a class=\"header-anchor\" href=\"#其他元素可以参考ant-design\"><span>其他元素可以参考</span></a><a href=\"https://vue.ant.design/docs/vue/introduce-cn/\" target=\"_blank\" rel=\"noopener noreferrer\">Ant-design</a></h3>\n</li>\n</ul>\n<h2>杂项</h2>\n<h3>Mask 设计</h3>\n<p>灰色的半透明遮罩叫 mask</p>\n<p>当透明度很高，感受很小的时候一般设计成可穿透，也就是说点击相当于直接点击蒙层下部区域。</p>\n<p>透明度中等的一般式可触摸做取消热区的，也就是点击会取消。</p>\n<p>不可穿透的 mask，也就是说点击没有反应，一般要给非常高的不透明度，用户只能点叉号取消。(一般用于弹出推广)</p>\n<h3>设计趋势</h3>\n<p>目前以 iOS 特有的苹果风，Windows 上的 Aero 效果(毛玻璃效果)与安卓的 Material Design 设计为主。</p>\n<h4>图标</h4>\n<p>常用实心矢量图标</p>\n<h4>移动端</h4>\n<p>分割线和边框目前采用已经比较少。</p>\n<h4>PC</h4>\n<p>增强鼠标移动与网页的交互带来沉浸式的体验。</p>\n<h4>突出质感</h4>\n<p>因为不同机型现实效果不一样，普遍采用圆角、阴影、以及毛玻璃效果，还有避免用纯色背景转而用略蓝略灰的色调突出质感。</p>\n<h4>增强反馈感</h4>\n<p>每次点击时和点击之后出发的效果都能在屏幕上让用户感知自己的操作(即我刚刚点了按钮，按钮生效产生了某种操作)</p>\n",
      "date_published": "2019-11-24T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "UI 设计",
      "url": "https://blog.tlcsdm.com/design/",
      "id": "https://blog.tlcsdm.com/design/",
      "summary": "本文列出了一些 UI 设计相关的资源。",
      "content_html": "<p>本文列出了一些 UI 设计相关的资源。</p>\n<!-- more -->\n<h2>相关教程</h2>\n<ul>\n<li>\n<p><a href=\"/design/icon/\" target=\"_blank\">图标设计教程</a></p>\n</li>\n<li>\n<p><a href=\"/design/navigation/\" target=\"_blank\">导航设计教程</a></p>\n</li>\n</ul>\n<h2>配色</h2>\n<ul>\n<li>\n<p><a href=\"http://www.ruanyifeng.com/blog/2019/03/coloring-scheme.html\" target=\"_blank\" rel=\"noopener noreferrer\">阮一峰 - 配色方案</a></p>\n</li>\n<li>\n<p><a href=\"https://webgradients.com/\" target=\"_blank\" rel=\"noopener noreferrer\">网页背景渐变色</a></p>\n</li>\n</ul>\n<h2>设计</h2>\n<ul>\n<li>\n<p><a href=\"https://developer.apple.com/design/tips/\" target=\"_blank\" rel=\"noopener noreferrer\">Apple 设计原则</a></p>\n</li>\n<li>\n<p><a href=\"https://developer.apple.com/design/\" target=\"_blank\" rel=\"noopener noreferrer\">Apple 设计</a></p>\n</li>\n<li>\n<p><a href=\"/design/APP.html\" target=\"_blank\">App 组件设计规范</a></p>\n</li>\n</ul>\n<h2>网站组件</h2>\n<ul>\n<li>\n<p><a href=\"https://ant.design/index-cn\" target=\"_blank\" rel=\"noopener noreferrer\">Ant Design</a></p>\n</li>\n<li>\n<p><a href=\"https://weui.io/\" target=\"_blank\" rel=\"noopener noreferrer\">WeUI</a></p>\n</li>\n</ul>\n<h2>小程序组件库</h2>\n<ul>\n<li>\n<p><a href=\"https://youzan.github.io/vant-weapp/\" target=\"_blank\" rel=\"noopener noreferrer\">Vant</a></p>\n</li>\n<li>\n<p><a href=\"https://www.color-ui.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Color UI</a></p>\n</li>\n</ul>\n",
      "date_published": "2019-11-24T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "机械硬盘",
      "url": "https://blog.tlcsdm.com/hardware/HDD.html",
      "id": "https://blog.tlcsdm.com/hardware/HDD.html",
      "summary": "现代计算机大部分文件存储功能都是由机械硬盘这种设备提供的。(现在的 SSD 和闪存从概念和逻辑上都部分继承自机械硬盘，所以使用机械硬盘来进行理解也是没有问题的) 机械硬盘能实现信息存储的功能基于: 磁性存储介质能够被磁化，且磁化后会长久保留被磁化的状态，这种被磁化状态能够被读取出来，同时这种磁化状态还能够不断被修改，磁化正好有两个方向，所以可以表示 0...",
      "content_html": "<p>现代计算机大部分文件存储功能都是由机械硬盘这种设备提供的。(现在的 SSD 和闪存从概念和逻辑上都部分继承自机械硬盘，所以使用机械硬盘来进行理解也是没有问题的)</p>\n<p>机械硬盘能实现信息存储的功能基于: 磁性存储介质能够被磁化，且磁化后会长久保留被磁化的状态，这种被磁化状态能够被读取出来，同时这种磁化状态还能够不断被修改，磁化正好有两个方向，所以可以表示 0 和 1。\n于是硬盘就是把这种磁性存储介质做成一个个盘片，每一个盘片上都分布着数量巨大的磁性存储单位，使用磁性读写头对盘片进行写入和读取(从原理上类似黑胶唱片的播放)。</p>\n<p>一个硬盘中的磁性存储单位数以亿计(1T 硬盘就有约 80 亿个)，所以需要一套规则来规划信息如何存取(比如一本存储信息的书我们还会分为页，每一页从上到下从左到右读取，同时还有章节目录)\n于是就有了这些物理、逻辑概念:</p>\n<ol>\n<li>\n<p>一个硬盘有多张盘片叠成，不同盘片有编号</p>\n</li>\n<li>\n<p>每张盘片上的存储颗粒成环形一圈圈地排布，每一圈称为磁道，有编号</p>\n</li>\n<li>\n<p>每条磁道上都有一圈存储颗粒，每 512 * 8(512 字节，0.5KB)个存储颗粒作为一个扇区，扇区是硬盘上存储的最小物理单位</p>\n</li>\n<li>\n<p>N 个扇区可以组成簇，N 取决于不同的文件系统或是文件系统的配置，簇是此文件系统中的最小存储单位</p>\n</li>\n<li>\n<p>所有盘面上的同一磁道构成一个圆柱，称为柱面，柱面是系统分区的最小单位</p>\n</li>\n</ol>\n<p>磁头读写文件的时候，首先是分区读写的，由 inode 编号(区内唯一的编号)找到对应的磁道和扇区，然后一个柱面一个柱面地进行读写。机械硬盘的读写控制系统是一个令人叹为观止的精密工程(一个盘面上有几亿个存储单位，每个磁道宽度不到几十纳米，磁盘每分钟上万转)，同时关于读写的逻辑也是有诸多细节(比如扇区的编号并不是连续的)，非常有意思，可以自行搜索文章拓展阅读。</p>\n",
      "date_published": "2020-06-05T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "硬件"
      ]
    },
    {
      "title": "硬件相关",
      "url": "https://blog.tlcsdm.com/hardware/",
      "id": "https://blog.tlcsdm.com/hardware/",
      "summary": "这里是一些常见的硬件相关的问题总结，供访客查阅。",
      "content_html": "<p>这里是一些常见的硬件相关的问题总结，供访客查阅。</p>\n<!-- more -->\n",
      "date_published": "2022-01-07T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "CPU 的架构",
      "url": "https://blog.tlcsdm.com/hardware/structure.html",
      "id": "https://blog.tlcsdm.com/hardware/structure.html",
      "summary": "CPU 内部已经含有一些微指令，我们所使用的软件都要经过 CPU 内部的微指令集来达成才行。那这些指令集的设计主要又被分为两种设计理念，这就是目前世界上常见到的两种主要 CPU 架构，分别是: 精简指令集(RISC)与复杂指令集(CISC) 系统。 精简指令集 精简指令集，(Reduced Instruction Set Computer, RISC)...",
      "content_html": "<p>CPU 内部已经含有一些微指令，我们所使用的软件都要经过 CPU 内部的微指令集来达成才行。那这些指令集的设计主要又被分为两种设计理念，这就是目前世界上常见到的两种主要 CPU 架构，分别是: 精简指令集(RISC)与复杂指令集(CISC) 系统。</p>\n<h2>精简指令集</h2>\n<p>精简指令集，(Reduced Instruction Set Computer, RISC) 的设计中，微指令集较为精简。每个指令的执行时间都很短，完成的动作也很单纯，指令的执行性能较佳；但是若要做复杂的事情，就要由多个指令来完成。常见的 RISC 微指令集 CPU 主要例如甲骨文(Oracle) 公司的 SPARC 系列、IBM 公司的 Power Architecture (包括 PowerPC) 系列、与 ARM 公司(ARM Holdings) 的 ARM CPU 系列等。</p>\n<p>在应用方面，SPARC CPU 的电脑常用于学术领域的大型工作站中，包括银行金融体系的主要伺服器也都有这类的电脑架构；至于 PowerPC 架构的应用上，例如索尼(Sony)公司出产的 Play Station 3(PS3)就是使用 PowerPC 架构的 Cell 处理器；那 ARM 的 ARM 呢? 您常使用的各厂牌手机、PDA、导航系统、网络设备(交换器、路由器等)等，几乎都是使用 ARM 架构的 CPU。目前世界上使用范围最广的 CPU 可能就是 ARM 这种架构。</p>\n<h2>复杂指令集</h2>\n<p>复杂指令集，(Complex Instruction Set Computer, CISC)。与 RISC 不同的，CISC 在微指令集的每个小指令可以执行一些较低阶的硬体操作，指令数目多而且复杂，每条指令的长度并不相同。因为指令执行较为复杂所以每条指令花费的时间较长，但每条个别指令可以处理的工作较为丰富。常见的 CISC 微指令集 CPU 主要有 AMD、Intel、VIA 等的 x86 架构的 CPU。</p>\n<p>由于 AMD、Intel、VIA 所开发出来的 x86 架构 CPU 被大量使用于个人电脑(Personal computer)用途上面，因此，个人电脑常被称为 x86 架构的电脑! 那为何称为 x86 架构呢? 这是因为最早的那颗 Intel 发展出来的 CPU 代号称为 8086，后来依此架构又开发出 80286, 80386...，因此这种架构的 CPU 就被称为 x86 架构了。</p>\n<p>在 2003 年以前由 Intel 所开发的 x86 架构 CPU 由 8 位数升级到 16、32 位数，后来 AMD 依此架构修改新一代的 CPU 为 64 位数， 为了区别两者的差异，因此 64 位数的个人电脑 CPU 又被统称为 x86_64 的架构。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>所谓的位数指的是 CPU 一次资料读取的最大量! 64 位数 CPU 代表 CPU 一次可以读写 64bits 这么多的资料，32 位数 CPU 则是 CPU 一次只能读取 32 位数的意思。因为 CPU 读取资料量有限制，因此能够从记忆体中读写的资料也就有所限制。所以，一般 32 位数的 CPU 所能读写的最大资料量是 4GB。</p>\n</div>\n<p>那么不同的 x86 架构的 CPU 有什么差异呢? 除了 CPU 的整体结构(如第二层快取、每次运行可执行的指令数等)之外， 主要是在于微指令集的不同。新的 x86 的 CPU 大多含有很先进的微指令集， 这些微指令集可以加速多媒体程序的运行，也能够加强虚拟化的性能，而且某些微指令集更能够增加能源效率，降低 CPU 耗电量。</p>\n",
      "date_published": "2020-06-05T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "硬件"
      ]
    },
    {
      "title": "Linux",
      "url": "https://blog.tlcsdm.com/linux/",
      "id": "https://blog.tlcsdm.com/linux/",
      "summary": "Linux 教程 ubuntu CentOS WSL",
      "content_html": "<h2>Linux 教程</h2>\n<ul>\n<li>\n<p><a href=\"/linux/intro/\" target=\"_blank\">Linux 介绍</a></p>\n<ul>\n<li>\n<p><a href=\"/linux/intro/intro.html\" target=\"_blank\">Linux 介绍</a></p>\n</li>\n<li>\n<p><a href=\"/linux/intro/history.html\" target=\"_blank\">Linux 历史</a></p>\n</li>\n<li>\n<p><a href=\"/linux/intro/language.html\" target=\"_blank\">Linux 编写语言</a></p>\n</li>\n<li>\n<p><a href=\"/linux/intro/advantage.html\" target=\"_blank\">Linux 优势</a></p>\n</li>\n<li>\n<p><a href=\"/linux/intro/desktop.html\" target=\"_blank\">Linux 桌面环境</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/linux/file/\" target=\"_blank\">Linux 文件</a></p>\n<ul>\n<li>\n<p><a href=\"/linux/file/file.html\" target=\"_blank\">Linux 文件</a></p>\n</li>\n<li>\n<p><a href=\"/linux/file/dir.html\" target=\"_blank\">Linux 目录</a></p>\n</li>\n<li>\n<p><a href=\"/linux/file/mount.html\" target=\"_blank\">挂载</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/linux/command/\" target=\"_blank\">Linux 命令</a></p>\n<ul>\n<li>\n<p><a href=\"/linux/command/command.html\" target=\"_blank\">命令格式简介</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/dir.html\" target=\"_blank\">目录相关</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/file.html\" target=\"_blank\">文件相关</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/other.html\" target=\"_blank\">其他命令</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/add.html\" target=\"_blank\">命令的自动补全</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/excu.html\" target=\"_blank\">命令的执行</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/path.html\" target=\"_blank\">环境变量</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/ln.html\" target=\"_blank\">创建链接</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h2>ubuntu</h2>\n<ul>\n<li><a href=\"/linux/ubuntu/\" target=\"_blank\">点击前往</a></li>\n</ul>\n<h2>CentOS</h2>\n<ul>\n<li><a href=\"/linux/centos.html\" target=\"_blank\">点击前往</a></li>\n</ul>\n<h2>WSL</h2>\n<ul>\n<li><a href=\"/linux/WSL.html\" target=\"_blank\">点击前往</a></li>\n</ul>\n",
      "date_published": "2019-11-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "WSL",
      "url": "https://blog.tlcsdm.com/linux/WSL.html",
      "id": "https://blog.tlcsdm.com/linux/WSL.html",
      "summary": "WSL 可以直接在 Windows 系统上安装并运行 Linux。目前最新的版本是 WSL2。",
      "content_html": "<p>WSL 可以直接在 Windows 系统上安装并运行 Linux。目前最新的版本是 WSL2。</p>\n<!-- more -->\n<h2>Ubuntu</h2>\n<p>Windows 上的功能有很大缺失。已知不能用 Snap。</p>\n<h2>WSL 文件位置</h2>\n<div class=\"language-md line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">C:\\Users\\%USERNAME%\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>重启 WSL</h2>\n<p>使用</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">net</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> stop</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> LxssManager</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>和</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">net</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> start</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> LxssManager</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>",
      "date_published": "2019-11-23T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "CentOS 教程",
      "url": "https://blog.tlcsdm.com/linux/centos.html",
      "id": "https://blog.tlcsdm.com/linux/centos.html",
      "summary": "管理工具 yum (Centos 7) dnf (Centos 8) yarn 测试是否安装成功:",
      "content_html": "<h2>管理工具</h2>\n<ul>\n<li>yum (Centos 7)</li>\n<li>dnf (Centos 8)</li>\n</ul>\n<h2>yarn</h2>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">curl</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --silent</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --location</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> https://dl.yarnpkg.com/rpm/yarn.repo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> tee</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /etc/yum.repos.d/yarn.repo</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> yum</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> yarn</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">## OR ##</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dnf</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> yarn</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>测试是否安装成功:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">yarn</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --version</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>",
      "date_published": "2019-11-23T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "ssh",
      "url": "https://blog.tlcsdm.com/linux/ssh.html",
      "id": "https://blog.tlcsdm.com/linux/ssh.html",
      "summary": "使用密码登录 执行以下命令，连接 Linux 云服务器。 username 即为前提条件中获得的默认帐号。 hostname or IP address 为您的 Linux 实例公网 IP 或自定义域名。 输入已获取的密码，按 Enter，即可完成登录。 使用密钥登录 执行以下命令，赋予私钥文件仅本人可读权限。 执行以下命令，进行远程登录。 usern...",
      "content_html": "<h2>使用密码登录</h2>\n<ol>\n<li>\n<p>执行以下命令，连接 Linux 云服务器。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ssh</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">usernam</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">e&gt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">@</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">hostname</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> or</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> IP</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> addres</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">s&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><ul>\n<li>username 即为前提条件中获得的默认帐号。</li>\n<li>hostname or IP address 为您的 Linux 实例公网 IP 或自定义域名。</li>\n</ul>\n</li>\n<li>\n<p>输入已获取的密码，按 Enter，即可完成登录。</p>\n</li>\n</ol>\n<h2>使用密钥登录</h2>\n<ol>\n<li>\n<p>执行以下命令，赋予私钥文件仅本人可读权限。</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 400</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">下载的与云服务器关联的私钥的绝对路</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">径&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>执行以下命令，进行远程登录。</p>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" data-title=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ssh</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">下载的与云服务器关联的私钥的绝对路</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">径&gt; &lt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">usernam</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">e&gt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">@</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">hostname</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> or</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> IP</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> addres</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">s&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><ul>\n<li>username 即为前提条件中获得的默认帐号。</li>\n<li>hostname or IP address 为您的 Linux 实例公网 IP 或自定义域名。</li>\n</ul>\n<p>例如，执行 <code>ssh -i \"id_rsa\" ubuntu@123.206.113.227</code> 命令，远程登录 Linux 云服务器。</p>\n</li>\n</ol>\n<h2>断开链接</h2>\n<p><code>Ctrl + D</code> 或 输入 <code>logout</code>.</p>\n",
      "date_published": "2019-11-23T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "基础"
      ]
    },
    {
      "title": "微分方程",
      "url": "https://blog.tlcsdm.com/math/differential-equation.html",
      "id": "https://blog.tlcsdm.com/math/differential-equation.html",
      "summary": "概念 微分方程表示未知函数，未知函数的导数与自变量之间的关系的方程。 阶: 未知函数的最高阶的导数叫阶数 一般形式: 如果最高阶导数可以被解出，则有 解: 找到令方程变为恒等式的函数 通解: 解中含有任意常数，且常数的个数与阶数相同 初值条件: 给出特定 下， 的值，此时求出的解为该条件下的特解。 可分离变量: 形如 的形式 如果 , 连续，且有 ，则...",
      "content_html": "<h2>概念</h2>\n<ul>\n<li>\n<p>微分方程表示未知函数，未知函数的导数与自变量之间的关系的方程。</p>\n</li>\n<li>\n<p>阶: 未知函数的最高阶的导数叫阶数</p>\n</li>\n<li>\n<p>一般形式: </p>\n<p>如果最高阶导数可以被解出，则有 </p>\n</li>\n<li>\n<p>解: 找到令方程变为恒等式的函数</p>\n</li>\n<li>\n<p>通解: 解中含有任意常数，且常数的个数与阶数相同</p>\n</li>\n<li>\n<p>初值条件: 给出特定  下，  的值，此时求出的解为该条件下的特解。</p>\n</li>\n<li>\n<p>可分离变量: 形如  的形式</p>\n<p>如果 ,  连续，且有 ，则可以积分出 </p>\n<p>令 ，则  即为通解。</p>\n</li>\n<li>\n<p>齐次方程: 可化为</p>\n</li>\n</ul>\n",
      "date_published": "2021-04-19T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Mr.Hope 的随笔",
      "url": "https://blog.tlcsdm.com/note/",
      "id": "https://blog.tlcsdm.com/note/",
      "summary": "这里是 Mr.Hope 的一些随笔，后续被整理进博客中。 四季 介绍 这是我在高一写的散文诗集，最初发表在空间日志上。 后续也写了一些诗补充了进去，其中以 “秋之思” 篇幅最多 近日将其作为少年回忆，整理在博客中。 其他方式 也可查看 空间相册 笑谈人生 介绍 这是我在高一写的人生感悟，最初发表在空间日志上。 近日将其作为少年回忆，整理在博客中。 轻言...",
      "content_html": "<p>这里是 Mr.Hope 的一些随笔，后续被整理进博客中。</p>\n<h2>四季</h2>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">介绍</p>\n<p>这是我在高一写的散文诗集，最初发表在空间日志上。</p>\n<p>后续也写了一些诗补充了进去，其中以 “秋之思” 篇幅最多</p>\n<p>近日将其作为少年回忆，整理在博客中。</p>\n</div>\n<ul>\n<li>\n<p><a href=\"/note/fall/catalog.html\" target=\"_blank\">秋之思</a></p>\n</li>\n<li>\n<p><a href=\"/note/winter/note.html\" target=\"_blank\">冬之语</a></p>\n</li>\n<li>\n<p><a href=\"/note/spring/1.html\" target=\"_blank\">春之诗</a></p>\n</li>\n<li>\n<p><a href=\"/note/summer/1.html\" target=\"_blank\">夏之歌</a></p>\n</li>\n</ul>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">其他方式</p>\n<p>也可查看 <a href=\"https://user.qzone.qq.com/1178522294\" target=\"_blank\" rel=\"noopener noreferrer\">空间相册</a></p>\n</div>\n<h2>笑谈人生</h2>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">介绍</p>\n<p>这是我在高一写的人生感悟，最初发表在空间日志上。</p>\n<p>近日将其作为少年回忆，整理在博客中。</p>\n</div>\n<ul>\n<li><a href=\"/note/life/\" target=\"_blank\">点击前往</a></li>\n</ul>\n<h2>轻言细语</h2>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">介绍</p>\n<p>这是我在高一写的一些小的散文诗，最初发表在空间日志上。</p>\n<p>近日将其作为少年回忆，整理在博客中。</p>\n</div>\n<ul>\n<li><a href=\"/note/poem/\" target=\"_blank\">点击前往</a></li>\n</ul>\n<h2>Node.js 相关</h2>\n<ul>\n<li><a href=\"/note/node-js/current-path.html\" target=\"_blank\">current-path 相关</a></li>\n</ul>\n",
      "date_published": "2022-01-07T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "随笔"
      ]
    },
    {
      "title": "物理笔记",
      "url": "https://blog.tlcsdm.com/physics/",
      "id": "https://blog.tlcsdm.com/physics/",
      "summary": "目录",
      "content_html": "<h2>目录</h2>\n<ul>\n<li>\n<p><a href=\"/physics/electromagnetism/\" target=\"_blank\">电磁学</a></p>\n</li>\n<li>\n<p><a href=\"/physics/optism/\" target=\"_blank\">光学</a></p>\n</li>\n<li>\n<p><a href=\"/physics/tsp/\" target=\"_blank\">热力学与统计物理</a></p>\n</li>\n<li>\n<p><a href=\"/physics/quatum/\" target=\"_blank\">量子力学</a></p>\n</li>\n</ul>\n",
      "date_published": "2022-01-07T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "物理"
      ]
    },
    {
      "title": "",
      "url": "https://blog.tlcsdm.com/code/windows/developers.html",
      "id": "https://blog.tlcsdm.com/code/windows/developers.html",
      "summary": "title: Windows 开发 icon: windows category: 基础 tag: 开发 Windows 本文主要介绍 Windows 11 系统下，与开发相关的功能。 WSL WSL 是 Windows Subsystem for Linux 的缩写，即 Windows 的 Linux 子系统。Windows 11 支持 WSL2，同...",
      "content_html": "",
      "date_published": "2024-02-03T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "环境变量",
      "url": "https://blog.tlcsdm.com/code/windows/env-variable.html",
      "id": "https://blog.tlcsdm.com/code/windows/env-variable.html",
      "summary": "以 Windows 10 系统为例，直接在左下角搜索栏中输入“系统变量” 搜索搜索 在弹出的框中点击环境变量 系统变量系统变量 如果你需要添加环境变量，直接添加即可。 如果你只是希望添加到 Path，在弹出的新窗口中找到 path，选中并点击编辑 系统变量系统变量 点击添加输入想要添加到 path 的路径或者执行文件名即可 系统变量系统变量",
      "content_html": "<p>以 Windows 10 系统为例，直接在左下角搜索栏中输入“系统变量”</p>\n<figure><figcaption>搜索</figcaption></figure>\n<p>在弹出的框中点击环境变量</p>\n<figure><figcaption>系统变量</figcaption></figure>\n<p>如果你需要添加环境变量，直接添加即可。</p>\n<p>如果你只是希望添加到 Path，在弹出的新窗口中找到 path，选中并点击编辑</p>\n<figure><figcaption>系统变量</figcaption></figure>\n<p>点击添加输入想要添加到 path 的路径或者执行文件名即可</p>\n<figure><figcaption>系统变量</figcaption></figure>\n",
      "date_published": "2019-09-08T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "基础"
      ]
    },
    {
      "title": "",
      "url": "https://blog.tlcsdm.com/code/windows/version.html",
      "id": "https://blog.tlcsdm.com/code/windows/version.html",
      "summary": "title: Windows 版本 icon: windows category: 基础 tag: Windows 简介 Microsoft Windows 操作系统是美国微软公司研发的一套操作系统，它问世于 1985 年，起初仅仅是 Microsoft-DOS 模拟环境，后续的系统版本由于微软不断的更新升级，不但易用，也当前应用最广泛的操作系统。 W...",
      "content_html": "",
      "date_published": "2024-02-03T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "设计文章",
      "url": "https://blog.tlcsdm.com/design/articles/",
      "id": "https://blog.tlcsdm.com/design/articles/",
      "summary": "文章列表",
      "content_html": "<h2>文章列表</h2>\n<ul>\n<li>\n<p><a href=\"/design/articles/gestalt-principle.html\" target=\"_blank\">格式塔原则</a></p>\n</li>\n<li>\n<p><a href=\"/design/articles/left-or-right.html\" target=\"_blank\">布局中的左和右</a></p>\n</li>\n<li>\n<p><a href=\"/design/articles/infomation-flow.html\" target=\"_blank\">信息流介绍</a></p>\n</li>\n</ul>\n",
      "date_published": "2020-09-26T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "格式塔原则",
      "url": "https://blog.tlcsdm.com/design/articles/gestalt-principle.html",
      "id": "https://blog.tlcsdm.com/design/articles/gestalt-principle.html",
      "summary": "好的设计师理解心理学在视觉感知中的强大作用。当别人的目光与您的设计创作相遇时，会发生什么? 他们对您分享的信息有什么反应? 格式塔原理概述 前言 举一个场景化的栗子，大家平时逛街的时候能记住哪些广告呢? 我们虽然每天看到那么多的信息，但是真正记住的却不多。还有当我们看到复杂的事物的时候，心里会涌现不舒服的奇怪感受，有时候这种感受没有办法用语言来描述。那...",
      "content_html": "<p>好的设计师理解心理学在视觉感知中的强大作用。当别人的目光与您的设计创作相遇时，会发生什么? 他们对您分享的信息有什么反应?</p>\n<h2>格式塔原理概述</h2>\n<h3>前言</h3>\n<p>举一个场景化的栗子，大家平时逛街的时候能记住哪些广告呢? 我们虽然每天看到那么多的信息，但是真正记住的却不多。还有当我们看到复杂的事物的时候，心里会涌现不舒服的奇怪感受，有时候这种感受没有办法用语言来描述。那么为什么会有这些感受呢?</p>\n<figure><figcaption>图片1</figcaption></figure>\n<p>其实道理很简单，我们做的东西是给人用的。人是动物不是一台机器，人的认知和记忆能力是有限的。视觉设计和心理是相互联系的，并且可以相互影响。格式塔原则可以帮助我们理解和控制这些联系。</p>\n<p>今天就给大家科普下格式塔原则到底是什么? 在设计中如何运用? 是如何影响到我们的生活学习的? 本文会结合大量案例分析讲解，无论您是平面设计师，UI 设计师，插画师，设计小白还是路人，一篇文章让格式塔帮您做出更好的设计!</p>\n<h3>什么是格式塔原理</h3>\n<p>格式塔学习理论可谓是现代认知主义学习理论的先驱，自 1912 年由韦特海墨(Ｍ，Wetheimer)提出后，在德国得到迅速发展。</p>\n<figure><figcaption>格式塔原理发展历史</figcaption></figure>\n<p>1910，这位心理学家乘坐火车度假旅行。当火车经过一个铁路道口的时候，他发现道口闪烁的灯竟然像马戏团表演时剧院帐篷上环绕的灯光，令他产生了光在运动的错觉。(而我们坐火车永远就只会遇到熊孩子和熊孩子)然后他赶紧下火车买了一个西洋镜，来测试自己的想法。</p>\n<p>他将一张图片放在西洋镜内部并通过狭缝观看时，一系列静止图像看起来像是动图。接着他用简单的抽象线条制作不同的画条，通过改变这些元素来研究导致错觉的原因。似动(Apparent Movement)实验成为格式塔心理学的起点。</p>\n<h3>解决什么问题</h3>\n<p>他们认为思维是整体的、有意义的知觉，而不是联结起来的表象的简单集合；主张学习是在于构成一种完形，是改变一个完形为另一完形。我们的视觉系统自动对视觉输入构建结构，并在神经系统层面上感知形状、图形和物体，而不是只看到互不相连的边、线和区域。所谓格式塔，是德语 Gestalt 的译音，意即「完形」或「形状」；他们认为学习的过程不是试尝错误的过程，而是顿悟的过程，即结合当前整个情境对问题的突然解决。再通俗一点就是人是怎样认知和记忆所看到的事物。</p>\n<h2>格式塔实验研究</h2>\n<p>主要包括以下三方面的实验研究:</p>\n<h3>1. 似动现象</h3>\n<p>似动现象是形成格式塔心理学的基础。是指两个相距不远、相继出现的视觉刺激物，呈现的时间间隔如果在 1/10 秒到 1/30 秒之间，那么我们看到的不是两个物体，而是一个物体在移动。</p>\n<p>例如，我们看到灯光从一处向另一处移动，事实上是这只灯熄了，那只灯同时亮了。这种现象正是不能把整体分解成部分的证据。这种现象的组成部分是一些独立的灯在一开一关，但组成一个整体后，给人造成这些灯在动的假象。</p>\n<p>后来，格式塔心理学把重点放在整体系统上，在这个系统中，各个部分是以一种能动的方式相互联系在一起的，也就是说，仅根据各分离的部分，无法推断出这个整体。所以人们把它称为「格式塔或完形心理学」。</p>\n<figure><figcaption>似动现象</figcaption></figure>\n<ul>\n<li>\n<p>A: 这张螺旋图是静态还是动态的? 盯着漩涡看一会，您就会感觉到它在转动。</p>\n</li>\n<li>\n<p>B: 您数数看有几个黑点? 当您的眼睛离开那个白点时，就出现白的负象，即黑。当您重新把视点 集中在原来的白点上时，它又变成白色的了。因此，当您的眼睛不断地 在移动的时候，那些黑白点 (正负像) 也就在不断地变化。</p>\n</li>\n<li>\n<p>C: 您看是水平线还是不规则的斜线? 事实上所有的横线都是水平的，不信您拿尺子比一下。</p>\n</li>\n</ul>\n<h3>2. 整体与部分</h3>\n<p>看起来格式塔心理学是把重点放在整体上，但这并不意味着他们不承认分离性。事实上，格式塔也可以是指一个分离的整体。</p>\n<p>研究认为，一个人的知觉场始终被分成图形与背景两部分。「图形」是一个格式塔，是突出的实体，是我们知觉到的事物；「背景」则是尚未分化的、衬托图形的东西。知觉帮助我们把图形从背景中分离出来。图形与背景的对比越大，图形的轮廓越明显，则图形越容易被发觉。</p>\n<figure><figcaption>整体与部分</figcaption></figure>\n<ul>\n<li>\n<p>A: 这幅美食节广告中，酒瓶是被战略性地放置，以创造一个叉子的错觉。黑色酒瓶是图形，白色叉子是背景；在另一种情况下，黑色酒瓶是背景，白色叉子是图形。</p>\n</li>\n<li>\n<p>B: 一黑一白两只天鹅，白天鹅和黑天鹅可以互充图形与背景的关系。</p>\n</li>\n<li>\n<p>C: 这幅海报中，小女孩和气球是被战略性的放置，以创造一个字母「R」的错觉。这两个角色同样可以在图形和背景中互换。</p>\n</li>\n</ul>\n<figure><figcaption>整体与部分</figcaption></figure>\n<h3>3. 顿悟实验</h3>\n<p>W·科勒在一次实验中用绳子把一只香蕉悬挂在笼子的顶棚上。笼子里只有惟一的一只木箱可以使用。6 只黑猩猩看到香蕉时跳跃起来竭力想抓住香蕉，但是徒劳。有一只名叫苏尔坦的黑猩猩马上停止了这些白费力气的努力，开始从各个方向打量箱子。忽然它停在箱子前面，抓起它并径直朝目标走去。它把木箱迅速放到地上，爬上箱子，从木箱上面使劲跳起，终于抓住了香蕉。</p>\n<p>W·科勒还对这组黑猩猩使用其他工具进行了观察，如利用木棍去获取放在笼子外面的水果。这些黑猩猩甚至能够将两根短棍连接起来做成一根长棍。同样，它们还能把两三个箱子叠放在一起，再爬到放在最上面的箱子顶上，借助一根木棍去获取香蕉。</p>\n<p>苛勒通过对黑猩猩进行的许多实验，提出了顿悟理论。他认为问题的解决不是由于尝试错误，而是由于顿悟。所谓顿悟，就是内在地把握情境的关系性，并依此改变整个情境。</p>\n<p>或许正如一些批评家所指出的那样，顿悟不是一种独立的学习过程或学习形式，而是学习达到一定程度的表现或者结果。一定的经验积累，是产生顿悟的前提。</p>\n<h2>影响记忆的三个因素</h2>\n<p>沃尔夫实验时要求实验体观看样本图形并记住它们，然后在不同的时间里根据记忆把它们画出来。结果发现实验体在不同的间隔时间画出来的图像都有不同。有时再现的图画比原来的图画更简单更有规则，有时原来图画中显著的细节在再现时被更加突出了。还有的比原来的图像更像某些别的我们都很熟悉的图案了。沃尔夫把这三种记忆规律称之为格式塔三大记忆律: 「水平化」、「尖锐化」、「常态化」。</p>\n<figure><figcaption>这两个品牌logo哪个才是正确的? </figcaption></figure>\n<h3>水平化 leveling</h3>\n<p>水平化是指在记忆中我们趋向于减少知觉图形小的不规则部分使其对称；或趋向于减少知觉图形中的具体细节。</p>\n<h3>尖锐化 sharpening</h3>\n<p>尖锐化是在记忆中与水平化过程伴随而行的。尖锐化是指在记忆中，人们往往强调知觉图形的某些特征而忽视其它具体细节的过程。在有些心理学家看来，人类记忆的特征之一，就是客体中最明显的特征在再现过程中往往被夸大了。</p>\n<h3>常态化 normalizing</h3>\n<p>常态化是指人们在记忆中，往往根据自己已有的记忆痕迹对知觉图形加以修改，即一般会趋向于按照自己认为它似乎应该是什么样子来加以修改的。</p>\n<h2>格式塔原理在设计中的应用</h2>\n<p>格式塔的七个基本原则:</p>\n<ul>\n<li>接近性原则</li>\n<li>相似性原则</li>\n<li>连续性原则</li>\n<li>闭合性原则</li>\n<li>主体/背景原则</li>\n<li>简单对称性原则</li>\n<li>共同命运原则</li>\n</ul>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">格式塔原理的核心</p>\n<p>整体决定部分的性质并且部分依从与整体。</p>\n</div>\n<h3>接近性原则 law of proximity</h3>\n<p>人们对知觉场中客体的知觉，是根据它们各部分彼此接近或邻近的程度而组合在一起的。两个元素越是接近，组合在一起的可能性就越大。说明它们之间关系更强。但是接近也是有对比的，在复杂的设计中，我们要一边考虑它们之间内部的逻辑关系一边来排版。</p>\n<figure><figcaption>接近性原则</figcaption></figure>\n<blockquote>\n<p>同样都是 12 个圆形，您会把左图的 12 个圆形当成一个整体；右边那幅图，上面 4 个圆和下面 8 个圆距离较远，所以您会把上面 4 个圆当成一个整体，下面 8 个圆当成另外一个整体。</p>\n</blockquote>\n<p>需要注意的是，接近性比重较大，把上图的圆形改变形状，甚至添加颜色，人们也会把相近的一组当成一个整体:</p>\n<figure><figcaption>接近性原则</figcaption></figure>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">案例</p>\n<figure><figcaption>App Store</figcaption></figure>\n<p>板块之间的大间距把页面信息分割成各种不同栏目，距离更近的信息暗示了他们有内在的逻辑关系</p>\n<figure><figcaption>站酷</figcaption></figure>\n<p>设计师模块，每个设计师信息组之间有足够大的留白，即使去掉分割线，用户也会清晰分清每一组的边界</p>\n</div>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>在界面设计中常用的设计方法就是划分固定的位置区域，比如导航栏，内容区，操作栏。还有就是通过距离远近来进行信息归类，同类信息接近，不同信息远离。</p>\n</div>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>属性相同、场景相似的信息应该放到一起，降低阅读成本，提高用户感知效率;不相关的信息尽量区分开，不要放到一起模糊不清引起不必要的误解。</p>\n</div>\n<h3>相似性原则 law of similarity</h3>\n<p>人们在感知时，会对那些相似的项目，只要不被接近因素干扰，会倾向于把它们联合在一起。换言之，相似的部分在知觉中会形成若干组。</p>\n<p>例如，我们在小组辩论中，往往几个人争着发言，但我们仍然能从嘈杂的声音中听出某个人的讲话，这是因为这个人讲话的音质始终有相似性的缘故。如果他讲话的音质经常在变化，那就很难从噪音声中分辨出他的话来。</p>\n<p>人们会把那些明显具有共同特性(如形状、大小、共同运动、方向、颜色等)的事物当成一个整体。与不具有相似视觉特征的元素相比，具有相似视觉特征的元素被认为更加相关。</p>\n<figure><figcaption>相似性原则</figcaption></figure>\n<p>举个例子相似性原则在实际产品中的应用:</p>\n<figure><figcaption>bilibili</figcaption></figure>\n<blockquote>\n<p>上图全部频道页面，我们在浏览时，会从心理上默认，把频道头像、介绍和订阅按钮自动归为一类。类似外形的单元会被我们人脑默认为同一属类</p>\n</blockquote>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>看起来跟亲密性非常类似，但是他们确实不同的两个概念。亲密性强调位置，相似性则强调内容。通常把有明显特征的事物(形状、颜色、大小)组合在一起。多用于表单和导航。</p>\n</div>\n<h3>连续性原则 law of continuity</h3>\n<p>在知觉过程中人们往往倾向于使知觉对象的直线继续成为直线，使曲线继续成为曲线，也就是视觉的惯性。利用连续律我们可以让用户操作界面时不经过思考就点击一个固定的位置。</p>\n<p>我们倾向于完整地连接一个图形，而不是观察残缺的线条或形状。这种知觉上的结束，称之为闭合。如果局部形象过于陌生或者简略，则不会产生整体闭合联想。</p>\n<p>人的视觉有追随一个方向的延续，以便把元素联接在一起，使它们看来是连续向着特定的方向。</p>\n<figure><figcaption>连续性原则</figcaption></figure>\n<p>△ 左图我们不会认为是两个残缺的圆，而是两个相交的圆；中间的 IBM 商标我们之所以能看出来是 IBM，就是因为我们在视觉上看到的不是离散的线条，而是连续的图形；右图我们会看到是向两个方向连续的曲线。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">案例</p>\n<figure><figcaption>股市</figcaption></figure>\n<p>每天的股市数据构成走势图，视觉上会跟随曲线方向知道由左向右去看走势</p>\n</div>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>视觉倾向于感知连续的形式而不是分散的碎片通过找到非常微小的共性，将多个不同的信息结成一个整体，是界面设计和 logo 设计常用的原则之一</p>\n</div>\n<h3>闭合性原则 law of closure</h3>\n<p>人们在观察熟悉的视觉形象时，会把不完整的局部形象当作一个整体的形象来感知，这种知觉上的结束，称之为闭合。如果局部形象过于陌生或者简略，则不会产生整体闭合联想。</p>\n<p>闭合是一种完成某种图形(完形)的行动。就算没有外形的约束，我们也会自动把图形脑补完全。比如半个形状或者有缺口的形状我们不会认为是一条线或各种零碎的图形，而是一个完整的形状。闭合是指一种完形的认知规律。</p>\n<figure><figcaption>闭合性原则</figcaption></figure>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">案例</p>\n<figure><figcaption>Apple Music</figcaption></figure>\n<p>我们常见的页面横滑组件就运用了闭合律原则，通常在界面右侧露出一半(或少部分)内容，来提示用户右边还隐藏着更多内容</p>\n</div>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>人们的视觉系统会自动将不相干的图形元素封闭起来感知为完整的个体为不实单独的碎片</p>\n<p>表现手法有:正负形、封闭边界、不完全闭合</p>\n</div>\n<h3>主体/背景原则</h3>\n<p>主体指的是在界面当中占据我们主要注意力的所有元素，其余的元素在此时均成为背景。当主体与背景重叠时，人的视觉更加倾向于将小的物体视为主体，大的物体视为背景，所以我们可以通过大小与图的关系，将我们希望传递的不同层次的内容进行展示。</p>\n<p>当小图形重叠大图形之上，我们的视觉会倾向于将小图形归为主体，大色块为背景，这就是格式塔中的主体与背景原则。</p>\n<figure><figcaption>主体/背景原则</figcaption></figure>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">案例</p>\n<figure><figcaption>豆瓣 FM</figcaption></figure>\n<p>在白色背景上有非常突出的主体: 歌曲封面、歌名、进度条、播放/暂停、收藏等，歌曲播放时，进度条有非常明显的进度变化，切换歌曲时，封面的前后错层，这些都与背景有非常鲜明的对比</p>\n</div>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>在界面设计中，主体背景是弹窗常常运用到的表现手法利用空间感给用户带来视觉引导，让用户快速感知重要的信息内容，和可忽略的信息内容</p>\n</div>\n<h3>简单对称性原则 Simple principle</h3>\n<p>在观察事物过程中，我们第一印象更倾向于简单而且对称的图形，这就是格式塔的简化对称性原则。</p>\n<p>具有对称、规则、平滑的简单图形特征的各部分趋于组成整体。对称的元素往往被认为是归属在一起的，而不管它们之间的距离，都给我们一种牢固和有序的感觉。</p>\n<figure><figcaption>简单对称性原则</figcaption></figure>\n<p>人的眼睛喜欢在复杂的形状中找到简单而有序的对象，当我们在一个设计中看到复杂的物体时，眼睛更愿意将它们转换为单一统一形状，并尝试从这些形状中移除无关的细节来简化这些物体。</p>\n<p>对称的构图是令人满意的，但它们也会变得有点沉闷。在对称的设计中加入不对称的元素可以在给人留下印象的同时吸引注意力。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">案例</p>\n<figure><figcaption>Pinterest</figcaption></figure>\n<p>左右布局的瀑布流就是格式塔的简化对称性的体现，用户在浏览的的过程中有效减轻了阅读压力。特别适合这种以图片流为主的产品，能大大提高浏览效率。</p>\n</div>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>对称元素简单、和谐，但往往容易单调，一般来说加入不对称的样式会更容易让人印象深刻，在平面设计中对称的使用趣味性更加广泛</p>\n</div>\n<h3>共同命运原则 Common destiny</h3>\n<p>无论元素之间的距离有多远，或者它们看起来有多不同，如果它们一起运动或变化，它们都被认为是相关的。这里的共同命运针对的是运动的物体。与接近性原理和相似性原理相像，都与我们的视觉系统会有着给对象进行分组来感知事物的倾向相关，但是一起运动的物体会被感知为属于同一组或是彼此相关这样的一种视觉现象，这就是格式塔中的共同命运原则。</p>\n<figure><figcaption>共同命运原则</figcaption></figure>\n<p>向同一方向移动的元素，我们在处理的过程当中，会默认把它们归为一类。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">案例</p>\n<figure><figcaption>ios 桌面</figcaption></figure>\n<p>iPhone 删除应用时候，所有图标都一起晃动起来(意思瑟瑟发抖，不要删我不要删我! )，左上角都有一个删除的按钮，要么删除，要么保留，这就是共同命运原则。</p>\n</div>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>共同命运强调的是方向，当元素的运动、方向具有共同运动形式或者某种规律使，我们会将其视为为彼此相关的一个群组或整体</p>\n</div>\n<h3>更多</h3>\n<p>事实上，以上 7 条原则只是格式塔心理学中的一小部分而已，比如还有:</p>\n<h4>成员特性律</h4>\n<p>一个整体中的个别部分并不具有固定的特性，个别部分的特性是从它与其他部分的关系中显现出来的。</p>\n<figure><figcaption>成员特性律</figcaption></figure>\n<p>如果我们有很多同样的按钮，如何让某个更重要的按钮突出但是仍然让用户感知还是按钮呢? 那就要用到成员特性律了。成员特性律赋予了集体中某一个元素特殊的一些刺激元素从而突出它。</p>\n<p>独特的外形暗示了它与别的元素有不同的功能</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">案例</p>\n<figure><figcaption>淘宝</figcaption></figure>\n<p>商品详情页有两个重要的操作按钮: 加入购物车、立即购买。为了促使用户尽快购买，给「立即购买」更重的红色以突出它的独特性</p>\n</div>\n<h2>格式塔学习理论的基本观点</h2>\n<h3>认知重组</h3>\n<p>格式塔心理学认为，通过学习，会在头脑中留下记忆痕迹，这些痕迹不是孤立的要素，而是一个有组织的整体，即完形。因此，学习主要不是加进新痕迹或减去旧痕迹的问题，而是要使一种完形改变成另一种完形。一个人学习的过程，通常是从一种混沌的模糊状态，转变成一种有意义的、有结构的状态，这就是知觉重组的过程。</p>\n<h3>顿悟学习</h3>\n<p>顿悟学习可以避免多余的试误，同时又有助于迁移。格式塔心理学家认为，通过对问题情境的内在性质有所顿悟的方式来解决问题，就可以避免与这一问题情境不相干的大量随机的、盲目的行动，而且有利于把学习所得迁移到新的问题情境中去。顿悟学习的核心是要把握事物的本质，而不是无关紧要的细节。</p>\n<h3>遗忘曲线</h3>\n<p>真正的学习是不会遗忘的。通过顿悟习得的内容，一旦掌握后，永远也不会遗忘。顿悟将成为我们知识技能中永久的部分。用现代认知信息加工心理学的术语来说，顿悟的内容是进入了长时记忆将永远保留在学习者的头脑中。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>有人在一项实验中，把 149162536496481 写在一张卡片上，要一组被试看 15 秒钟，然后试图回忆它。这是一项相当困难的任务。在一般情况下，除了记住其中少数几个数字外，没有人能全部记住。但在给另一组被试看这张卡片之前，告诉他们在试图记住它以前，先想一下这些数字为什么这样排列，是否有规律可循。结果不少被试都觉察到，这些数原是用 1 到 9 的平方排列起来的。这样一来，回忆这些数字就毫无困难，哪怕是在几周或几个月之后也能轻易做到。</p>\n</div>\n<h3>学习奖励</h3>\n<p>格式塔心理学家认为，真正的学习常常会伴随着一种兴奋感。例如，一些人对智力拼图、字迷填空玩得津津有味。也因此有人抨击滥用各种外部奖励，诸如使用糖果、好分数、五角星或金钱之类的东西来驱动学习。对于教育工作者来说，不加区分地使用奖励物，可能会使学生分心，不把心思用在学习上，而只关心能得到什么奖励上，从而不可能达到对问题情境有顿悟的理解。</p>\n<h3>顿悟说对错误说的批判</h3>\n<p>还记得第二部分对猩猩的实验吗，实验表明猩猩在行动之前，已经领会到了自己的动作为什么进行，怎样去进行以及最终的结果为何，在苛勒看来，猩猩对问题的解决并非是一种盲目尝试错误的过程，而是处于对问题产生了顿悟。</p>\n<p>在格式塔心理学家看来，学习是一种智慧行为，是一种顿悟过程，需要有理解、领会与思维等认识活动的参与，并且它是一种突现、速变、飞跃的过程。顿悟学习特点可归纳如下: 问题解决前尚有一个困惑或沉静的时期，表现得迟疑不决，有长时间停顿；从问题解决前到问题解决之间的过渡不是一种渐变的过程，而是一种突发性的质变过程；在问题解决阶段，行为操作是一个顺利的不间断的过程，形成一个连续的完整体，很少有错误的行为；由顿悟获得的问题解决方法能在记忆中保持较长的时间；由顿悟而掌握的学习原则有利于适应新的情境，解决新的问题。</p>\n<h3>创造性思维</h3>\n<p>韦特默认为要想创造性地解决问题必须让整体支配部分。即使在必要的关注问题的细节时，也决不能忽视问题的整体。必须把细节放在问题的整体中，把它们与整体结构联系起来加以考虑。这是一种自上而下、由整体到部分的思维。他认为要使人们顺利地解决问题，必须把问题的整个情境呈现出来，使之能对问题有个完全概观，决不能像桑代克那样，有意地把解决问题的方法和途径藏起来，迫使被试不得不去盲目试误。学习贵在打破旧有知识和模式的束缚，争取在对问题领域的基础上产生顿悟，掌据解决问题的原则，做到触类旁通、举一反三，促进智力水平的提高。</p>\n<h2>格式塔学习理论的分支</h2>\n<h3>勒温的基本观点</h3>\n<p>传统的格式塔心理学在探讨学习的问题时，认为学习者「渴望达到某些目的」是理所当然的，因而他们关注的是通过知觉重组达到目的的途径；而勒温则把注意力集中在「渴望」和「目的」本身上，并把它们与个性联系起来研究。勒温由此而形成的理论体系，主要不是一种学习理论，而是一种描述系统。</p>\n<h3>勒温论学习</h3>\n<p>勒温的基本观点是社会心理学方面的，尤其是关于个体的动机。从某种角度来看，这弥补了格式塔学习理论的不足。勒温认为，用场论来研究学习的问题，需要注意以下几个方面:</p>\n<p>要使用构成法(Constructive method)，而不是用分类法或分析法。这就是说，要用心理学中最基本的几个构成来探讨学习的问题。这些基本构成就是生活空间，心理环境、诱发力和约束力等。</p>\n<p>要对行为作动态分析，要了解作为行为之基础的各种力(forces)。他把行为变化看作是各种心理力量的结果。</p>\n<p>要从心理的角度来分析学习者当时的生活空间和心理世界，而不能像行为主义者那样用客观的物理主义者的术语来界定刺激。</p>\n<p>要从整体情境分析入手，而不能只是从刺激情境中抽取一两个孤立的要素。因为不从整体上考虑问题，是不可能作出正确判断的。</p>\n<p>行为是行为发生时场的函数。勒温认为行为取决于有机体以往的经验和强化史，这是形而上学的。因为过去的事情现在并不存在，所以不可能直接影响现在的行为。虽说过去的心理场是现在的心理场的来源，但影响现在行为的，毕竟是现在的心理场。</p>\n<p>在研究学习时，至少必须区别这样四种变化: 第一，作为认知结构(即知识)变化的学习；第二，作为动机变化的学习；第三，作为群体属性和意识形态变化的学习；第四，作为身体肌肉随意控制发生变化的学习。在勒温看来，学习理论要探讨的，主要是学习者认知结构和动机的变化。</p>\n<h3>评论</h3>\n<p>勒温在格式塔心理学的框架结构内引进「场」、「生活空间」、「拓扑学」和「向量」等概念，另辟蹊径，从而丰富和发展了传统的格塔理论。尽管他研究的重心放在社会心理学方面，但他对行为、问题和动机等方面探讨，在当时是很有新意的。</p>\n<h2>格式塔原理的贡献与局限性</h2>\n<h3>1. 贡献</h3>\n<h4>对元素主义的反击具有进步意义</h4>\n<p>格式塔学派用大量的事实证明了冯特元素主义理论的漏洞百出，并大胆地冲破了元素主义的束缚，积极而有成效地进行了大量的探索，并取得了一系列引人注目的成果，这对促进心理学事业的繁荣和发展是大有脾益的。</p>\n<h4>格式塔学派引发了知觉心理学的革新</h4>\n<p>由于格式塔学派在知觉领域做了大量有目共睹的研究，使得经验论、联想论、官能主义的传统方法逐渐让位于先验论、整体论和突创论。知觉心理学也由感觉心理学的附庸变成一个独立的分支，并在短时期内就取得了一系列突破。</p>\n<h4>格式塔学派的学习理论独具特色</h4>\n<p>格式塔学派的顿悟说及对迁移、创造性思维的研究，冲击了联结主义和行为主义的框框，不论在理论创建还是在教育实践中都具有独到的价值和意义。顿悟说也成为西方学习理论中最重要的理论之一。</p>\n<h4>对人本主义心理学影响较大</h4>\n<p>人本主义心理学的创建人马斯洛(就是提出人生 7 个层次的需求理论的那位)曾在他老师的惠特海默指导下，研究整体论，从而积累下了研究人的经验；同时期的对人的心理事件或整体研究。主张存在分析的心理学，这些都表明了格式塔学派的潜在影响。</p>\n<h4>对现代认知心理学的产生起了推动作用</h4>\n<p>格式塔学派研究的那些认知过程及心理过程成了现代认知心理学的基本观点，正如罗伯特逊指出，认知心理学实际上是一种新格式塔现象。</p>\n<h3>2. 局限性</h3>\n<p>过分强调顿悟，而全面否定尝试错误，犯了以偏概全的偏激性错误。</p>\n<p>顿悟似乎是一个神秘的概念，它的心理活动机制没有揭示清楚。还不能说是一个完善的理论解释。</p>\n<p>顿悟说还缺乏对其他与学习有关问题的研究。而且研究的主要是动物的经验学习，还不能很好地解释人类的所有直接经验学习，如技能的习得等。</p>\n<p>其理论观点和术语含糊不清。格式塔学派不加分析地采用了一些物理学的概念和数理术语，观点模棱两可，概念不确切，给人的感觉是理论主张过于晦涩深奥，神秘莫测。</p>\n<p>对其他学派的批评过于苛刻，他们只批评其他学派的缺陷，却没有提出更好的改进措施，且自身的理论建设和主张又并不明确和高明多少。原来每个行业都有一条鄙视链的存在啊。</p>\n<p>格式塔学派的实验不够严谨，过分依赖现象学的方法，缺乏信度和效度，就水平而言，并不比他们所批评的其他学派好多少。</p>\n<h2>总结</h2>\n<p>我们把原理归类、总结的目的有两个: 一个是自我检查，我们在构思设计的过程中往往会多于专注视觉效果的创作而忽略最基本的原理，比如在设计之前进行完整的设计构思；设计过程中检查自己的设计作品，避免低级错误导致反复改稿，比如信息不对齐，布局杂乱等；再就是设计完成之后对需求方有理有据的陈述。第二个是在深入理解的前提下做设计时能够举一反三。</p>\n<p>用户界面设计并不全是关于漂亮的像素和完美的图形。它主要是关于沟通、性能和便利性。格式塔原则总是帮助我们实现这些目标，为用户创造愉快的体验，为企业创造巨大的成功。</p>\n<p>通过例子可以发现，这 7 项法则并不是独立存在的，它们之间具有高度的关联性，是相辅相成的关系，我们需要跟进不同的需求类型和用户场景，运用这些基本法则打出组合拳，使您的设计方案更有依据。在做产品或者设计的时候一定要考虑人的认知与记忆的因素，这是与生俱来的天性，人们的审美对简单与和谐具有基本的要求。我们只有更好的利用视觉空间设计作品，减少设计的复杂性，尽量保持格式塔原则的完整，用户才能更好更容易地理解使用我们的产品。</p>\n<blockquote>\n<p>参考文献:</p>\n<ul>\n<li>《格式塔心理学理论》MBA 智库</li>\n<li>《格式塔心理学原理》库尔特.考夫卡</li>\n<li>《视觉设计中的格式塔艺术心理学》</li>\n<li>《格式塔心理学 5 项法则的学习与思考》Tencent CDC</li>\n<li>《设计中的格式塔原则》Souche Blog</li>\n<li>维基百科及其他</li>\n</ul>\n</blockquote>\n",
      "date_published": "2020-09-26T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "印迹"
        }
      ],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "信息流介绍",
      "url": "https://blog.tlcsdm.com/design/articles/infomation-flow.html",
      "id": "https://blog.tlcsdm.com/design/articles/infomation-flow.html",
      "summary": "今日头条的出现颠覆了传统新闻产品(如网易、新浪和搜狐新闻)。 传统新闻依靠着编辑人员的推荐，将新闻触达给用户，而今日头条则依靠着新闻算法，抛弃传统人工分发的思路，使分发效率数以万计的提升，其迅速崛起，成为头部新闻资讯产品。 今日头条作为新闻信息流的头部产品，里面的设计细节和设计逻辑值得我们思考和分析。 信息流样式 什么是信息流? 信息流由两部分组成，信...",
      "content_html": "<p>今日头条的出现颠覆了传统新闻产品(如网易、新浪和搜狐新闻)。</p>\n<p>传统新闻依靠着编辑人员的推荐，将新闻触达给用户，而今日头条则依靠着新闻算法，抛弃传统人工分发的思路，使分发效率数以万计的提升，其迅速崛起，成为头部新闻资讯产品。</p>\n<p>今日头条作为新闻信息流的头部产品，里面的设计细节和设计逻辑值得我们思考和分析。</p>\n<h2>信息流样式</h2>\n<p>什么是信息流? 信息流由两部分组成，信息流=信息+流。</p>\n<p>信息指的是内容，这些内容可以是新闻、视频、图片等，所呈现的样式多为列表或卡片。</p>\n<p>流指的是瀑布流，可以无限滑动浏览。</p>\n<p>所以信息流就是可以无限滑动浏览内容信息。</p>\n<p>信息流的样式的好坏，会直接影响到信息的展现效率和点击率，从而影响到用户获取信息的效率和整体阅读时长。</p>\n<p>下图为今日头条首页推荐频道的信息流:</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>将信息流样式进行简单分类，使用最多的四种样式为纯文、左文右图、短内容、大图视频。如下图所示:</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>纯文样式用于新闻中没有图片的情况，当文章中没有图片时，这时候采用改样式。列表含有: 标题、来源、评论数、发布时间。</p>\n<p>对于含有图片时候，采用左文右图样式。目前新闻对于含有图片的列表样式，一般有 3 种分别为: 左文右图、左图右文和三图。</p>\n<p>左图右文的样式，强化图片，弱化标题。对于新闻资讯来说，图片无法准确的表达其新闻资讯的内容，所以这种样式目前没什么产品使用。</p>\n<p>目前市面上绝大部分产品都采用左文右图，例如今日头条、网易新闻、腾讯新闻、新浪新闻等。只有是搜狐新闻采用左图右文。</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>三图则通过图片吸引用户点击查看，更加通过图片引导用户点击，好处是可以提升点击率，但是整个信息流显得乱，影响用户阅读。</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>和网易相比，头条信息流阅读起来更加舒服，视觉压力减少，这是基于今日头条三图样式占比很少，如下图所示，网易新闻信息流插入三图样式导致整个信息流杂乱。</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>对比下网易新闻和今日头条信息流样式，如下图所示:</p>\n<p>纯文，今日头条的标题颜色更深，网易的相对而言淡一些。头条的列表高度比网易的高，这意味着，头条的屏幕展示条数比网易新闻的少，但是整体的空间感和留白呼吸感更舒服。同时今日头条含有发布时间，使得用户观看新闻资讯时，能够感知新闻的实时性。</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>左文右图，头条的列表比网易的要高一些，对比来看，头条的标题更加明显，图片含有圆角半径，使得头条整体看上去更舒服。</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>大图视频，两者的区别不大，依然是标题文字颜色、封面圆角和发布时间的差异性。</p>\n<figure><figcaption>信息流</figcaption></figure>\n<h3>小结</h3>\n<p>头条流整体的空间感、留白，标题颜色对比做的比较好。</p>\n<p>留白相对于网易更多一些，相同的屏幕空间，展示的内容信息会少一点，屏幕展示效率会低一些。但用户在阅读过程中舒适度更强，同样的情况下用户的阅读时长会变长。</p>\n<h2>信息流分发</h2>\n<p>什么是信息流分发? 通过一定的设计策略，将用户的流量合理的分配到其他各个地方，从而达到产品的设计目标，促进流量利用最大化。提升流量最大限度的转化，获得更大的商业化价值。</p>\n<p>今日头条的信息流主要包含 5 个模块: 置顶模块、资讯列表、广告模块、短内容、其他功能模块的卡片入口。如下图所示:</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>推荐流顶部的置顶内容，最多置顶两条，这里是因为相关政策原因。</p>\n<p>在正常信息流第一条之后，插入广告，为平台做商业化营收。之后就会根据用户的阅读习惯，给用户推荐信息内容，并时不时的插入广告等。</p>\n<p>今日头条没有编辑运营，所以几乎所有的新闻都来自于机器算法。少了编辑人员的人工运营，使得今日头条有巨量的内容按照不同用户的阅读习惯推荐用户不同的内容。</p>\n<h2>搜索栏</h2>\n<p>在新闻信息流产品里，搜索栏所承接的使用场景主要有两个。一个是提供搜索新闻功能，通过关键词对当前或过去的新闻进行搜索。</p>\n<p>另一个是在搜索模块提供热搜新闻，提供用户阅读。</p>\n<p>那么如何提升搜索栏的点击次数。今日头条将热搜新闻以提示语的形式展示在搜索栏滚动，吸引用户。同时为了更大限度的展示新闻条数，采用一排两个的设计，保证最大程度的提升点击率。</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>用户点击搜索框之后，搜索框里面内置第一条热搜关键词。用户可通过键盘上的搜索，进行搜索。也可以点击搜索栏下方的两个热搜新闻进行搜索查看。</p>\n<h2>短视频</h2>\n<p>视频标题内置于播放器中，这样的好处可以减少卡片高度，让视频曝光量提升，缺点是用户如果想看视频标题介绍时，则需要点击下播放器，标题才能再次出现。</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>标题置于播放器里面，头条可以展示 2.5 条，而好看视频将标题置于外面只能展示 2 条，如下图所示:</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>对于广告业务来说，收入的一个重要指标则是广告曝光量，为了提升广告的收入，则必须降低视频高度，使得广告曝光效率得到提升，以此提升收入，所以头条将标题放置于播放器里面符合商业目标，但是不符合用户目标。</p>\n<h2>小视频</h2>\n<p>小视频的布局设计大致有两种，一种是抖音式布局，采用头像和操作项位于右侧。这样的好处是，视频的互动量很明显的展示出来，可引导用户互动。但对视频的内容有一定遮挡影响。</p>\n<p>另一种是好看视频式布局，将头像昵称、操作项放在底部，弱化视频的互动数据。让用户专注于视频内容。</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>今日头条的小视频采用和抖音一样的布局。头像和操作项放于右侧。但是为了引导用户评论，在界面底部加入了输入框，引导用户评论，为了让用户更加方便的看评论。上滑手势变成了调起起评论。</p>\n<figure><figcaption>信息流</figcaption></figure>\n<h2>短内容流</h2>\n<p>推荐流里面的短内容(微头条)，点击进入短内容 feed 流。而非短内容详情页。用户如果想看详情，那么需要用户再次点击。</p>\n<figure><figcaption>信息流</figcaption></figure>\n<p>这种设计明显体验不好，估计产品为其他短内容导流。这样的交互设计，可以使得整体的短内容流的曝光量提升好几倍。</p>\n<p>这种做法牺牲了体验，用户如果需要看详情，则需要连续点击两次。这是为了业务指标作出牺牲的设计。</p>\n",
      "date_published": "2020-09-26T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "布局中的左和右",
      "url": "https://blog.tlcsdm.com/design/articles/left-or-right.html",
      "id": "https://blog.tlcsdm.com/design/articles/left-or-right.html",
      "summary": "左右横跳的泳道 最近经常在人人视频上看电视剧，发现人人视频在设计上有个很有意思的点。 它的电影页中有很多推荐电影片单，每个片单里有 5-12 部电影；碍于手机尺寸，用户只能看到 3 部电影；如果您对这个片单里的电影比较感兴趣，可以滑动查看更多的电影——这种横向滑动的设计又被称之为“泳道”。 泳道泳道 那么问题来了，究竟向哪个方向滑动呢? 或许您会觉得这...",
      "content_html": "<h2>左右横跳的泳道</h2>\n<p>最近经常在人人视频上看电视剧，发现人人视频在设计上有个很有意思的点。</p>\n<p>它的电影页中有很多推荐电影片单，每个片单里有 5-12 部电影；碍于手机尺寸，用户只能看到 3 部电影；如果您对这个片单里的电影比较感兴趣，可以滑动查看更多的电影——这种横向滑动的设计又被称之为“泳道”。</p>\n<figure><figcaption>泳道</figcaption></figure>\n<p>那么问题来了，究竟向哪个方向滑动呢?</p>\n<p>或许您会觉得这是一个送分题，肯定是左滑啊；没错，您去查看 100 个 APP，这种水平横滑的泳道，99 个都是左滑的；但是人人视频就是那唯一的特例，它是左滑和右滑相互组合的。</p>\n<figure><figcaption>人人交互</figcaption></figure>\n<p>前一个片单是左滑，后一个就是右滑；反之，前一个片单是右滑，后一个就是左滑。</p>\n<p>第一次碰到这种设计，我很奇怪: 为什么要做出这种挑战用户固有认知的调整? 后来思考了一下，开始理解他们的做法。</p>\n<p>当用户左滑查看电影时，浏览完最后一部电影，用户的视线是停留在在屏幕右侧；如果下一个片单依然采用左滑，那么用户的视线需要先移动到屏幕左侧，再移动到右侧——这个路线就是 Z 型浏览模式；而人人视频紧接着的是右滑，第一个视频直接从右侧开始，避免了用户视线的转移。</p>\n<figure><figcaption>视线路径</figcaption></figure>\n<p>人人视频的这种方案，让我想起夸克浏览器——用户在夸克浏览器里观看视频，如果点击屏幕的位置靠左，那么菜单就会出现在左边；如果点击的位置靠右，菜单就会出现在右边；这样的处理方式，可以缩短用户手指的移动距离。</p>\n<figure><figcaption>夸克菜单</figcaption></figure>\n<p>一个是缩短视线移动距离，一个是缩短手指移动距离。</p>\n<h2>左还是右</h2>\n<p>设计中有很多这样“左、右”的争论。最经典的就是: 对话框的确定按钮到底是在左边还是右边? 这个话题被讨论了无数次。</p>\n<p>那么不管是左还是右，我们到底在争论什么? 左和右代表了什么?</p>\n<p>我们习惯的浏览方向是由左至右，那么左代表了用户视线的起点。</p>\n<p>我们经常说用户的浏览模式是 Z 型的，但是在移动端界面中，左边为信息区，右边为操作区。</p>\n<p>用户在快速浏览页面的模式下，根据左边的信息区判断自己是否对这条内容感兴趣，如果感兴趣才进行操作；所以更多的情况下，用户的浏览模式不是 Z 型，而是 L 型的。</p>\n<figure><figcaption>视线移动</figcaption></figure>\n<p>iOS 11 与 iOS 10 相比，我们可以发现页面标题、搜索框文案和内容都是改成放在左边。</p>\n<figure><figcaption>iOS页面对比</figcaption></figure>\n<p>整体的视觉动线由中间改成了左边，用户在快速浏览过程中视线不需要发生偏移。</p>\n<figure><figcaption>iOS 页面对比</figcaption></figure>\n<p>右代表着更好的易用性。因为在移动端，用户更习惯单手握持手机进行操作；而我们大部分人都是右撇子。</p>\n<p>谷歌的 MD 设计中的浮动按钮，是位于界面右侧；微信的浮窗也是位于界面右侧，就是为了方便用户操作。</p>\n<figure><figcaption>浮动按钮</figcaption></figure>\n<p>看到这里或许您会理解为什么“对话框的确定按钮在左边还是右边? ”这个话题经久不衰了吧。</p>\n<p>因为左边和右边背后都有理论支撑——左代表着离您的眼睛更近，右代表着离您的手更近。</p>\n<p>我们再来设想一个场景，针对左撇子用户，界面设计应该怎么调整；用户的惯用手是左手，那是不是要做镜面反转，把操作区移动到左边呢? 读者中肯定有左撇子用户，您们会喜欢这种布局吗?</p>\n<figure><figcaption>文字方向</figcaption></figure>\n<h2>流量分发</h2>\n<p>当然也会有一些设计方案在“左/右”的选择上没这么纠结，例如在微博、抖音这类社交产品中，其主页的“推荐”栏目永远在“关注”栏目的左边。</p>\n<figure><figcaption>流量分发</figcaption></figure>\n<p>以微博为例，“关注”和“推荐”在信息架构上是类似的，下面都有一些细分类目: “关注”里有不同的分组，“推荐”里也有不同内容类别，例如热门、同城、榜单等。</p>\n<p>但是“关注”用户需要点击下拉框才能筛选，而“推荐”里用户直接右滑就可以切换不同的内容类别；如果把“关注”里的分组也改成滑动切换的样式，那么必然会降低“推荐”栏目的流量。</p>\n<figure><figcaption>流量分发</figcaption></figure>\n<p>抖音也是类似的道理，因为用户左滑可以查看作者的主页，如果把推荐栏目放在左边，那么用户左滑就会进入关注栏目。</p>\n<p>引导用户进入已经关注的作者主页，相对来说意义不是很大；抖音的想法是——用户在刷推荐视频的时候，觉得这个视频很好玩，对这个视频的作者产生兴趣；用户可以直接滑动进入作者的主页，而不是需要点击头像才能进入主页。</p>\n<figure><figcaption>流量分发</figcaption></figure>\n<p>微博和抖音的“左关注，右推荐”的模式都是为了往推荐栏目引流。</p>\n<p>社交产品追求的是用户可以在这个产品里建立更多关系链，关系链是社交产品的护城河；既然这个人您已经关注了，说明关系链已经形成，那就没有必要引流了。</p>\n<p>从这里我们也能看出，在考虑方案的时候，不仅仅要考虑交互易用性，更要着眼于流量分配——哪个方案的流量分配更符合您的诉求，哪个就是好的方案。</p>\n<p>甚至在很多时候，当交互易用性跟流量分配相冲突时，交互易用性是被牺牲的一方，因为流量代表了产品经理的 KPI。</p>\n<figure><figcaption>流量分发</figcaption></figure>\n<p>最典型的例子就是知乎为了给答案底部的广告引流把左右滑动切换答案改成了上下滑动；当然，我们也不能批判知乎的这种行为。</p>\n<p>还是回到对话框的话题，“确定按钮到底在左边还是右边? ”，最好的办法就是 A/B 测试；如果是一个引导用户安装 APP 的对话框，您就看“确定”按钮放在哪边可以带来更多的转化率。</p>\n<p>这个 A/B 测试，搜狗输入法曾经做过，结果显示: 确定按钮放在左边转化率更高，误操作率更低，操作平均时长也更短；那么我们是否可以说，以后“确定”按钮就放在左边了?</p>\n<p>当然不可以，因为这个测试是在安卓 4.0 时期进行的；安卓 4.0 之前的系统对话框的确定按钮是在左边的，4.0 才改成右边——用户之前的操作习惯会影响测试结果。</p>\n<p>还有一个因素就是设备尺寸，手机尺寸现在越来越大，用户需要双手握持手机；那么在双手操作的模式下，手指可以全覆盖屏幕，那么右边的易用性就没那么高了。</p>\n<p>总之，同一个交互问题，在不同的设备，系统，时间和场景下，会有不同的答案。</p>\n",
      "date_published": "2020-09-26T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "图标",
      "url": "https://blog.tlcsdm.com/design/icon/",
      "id": "https://blog.tlcsdm.com/design/icon/",
      "summary": "本文介绍了 UI 设计中图标的相关介绍与技巧。",
      "content_html": "<p>本文介绍了 UI 设计中图标的相关介绍与技巧。</p>\n<!-- more -->\n<h2>图标网站</h2>\n<ul>\n<li>\n<p><a href=\"https://www.iconfont.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">iconfont</a></p>\n<p>阿里妈妈 MUX 倾力打造的矢量图标管理、交流平台。</p>\n<p>设计师将图标上传到 Iconfont 平台，用户可以自定义下载多种格式的 icon，平台也可将图标转换为字体，便于前端工程师自由调整与调用。</p>\n<p>强大的图标在线编辑与自定义下载</p>\n<p>图标项目的项目管理、协同、分享</p>\n</li>\n</ul>\n<h2>相关文档</h2>\n<p>图标是 UI 的设计体系最重要的组成部分之一，是任何 UI 界面中都不可或缺的视觉元素。了解图标相关的概念，以及正确绘制的方法，是入门 UI 设计的必备条件。</p>\n<ul>\n<li>\n<p><a href=\"/design/icon/intro.html\" target=\"_blank\">图标介绍</a></p>\n</li>\n<li>\n<p><a href=\"/design/icon/type.html\" target=\"_blank\">图标种类</a></p>\n</li>\n<li>\n<p><a href=\"/design/icon/guide.html\" target=\"_blank\">图标设计指南</a></p>\n</li>\n<li>\n<p><a href=\"/design/icon/software.html\" target=\"_blank\">图标设计软件</a></p>\n</li>\n<li>\n<p><a href=\"/design/icon/draw.html\" target=\"_blank\">图标绘制流程</a></p>\n</li>\n<li>\n<p><a href=\"/design/icon/rule.html\" target=\"_blank\">图标设计准则</a></p>\n</li>\n<li>\n<p><a href=\"/design/icon/line.html\" target=\"_blank\">线性图标设计演示</a></p>\n</li>\n<li>\n<p><a href=\"/design/icon/flour.html\" target=\"_blank\">面性图标设计指南</a></p>\n</li>\n<li>\n<p><a href=\"/design/icon/decorative.html\" target=\"_blank\">装饰性图标设计指南</a></p>\n</li>\n<li>\n<p><a href=\"/design/icon/start.html\" target=\"_blank\">启动图标设计指南</a></p>\n</li>\n<li>\n<p><a href=\"/design/icon/skill.html\" target=\"_blank\">图标设计技巧</a></p>\n</li>\n<li>\n<p><a href=\"/design/icon/apply.html\" target=\"_blank\">图标实践注意事项</a></p>\n</li>\n</ul>\n<h2>相关要求</h2>\n<ul>\n<li>\n<p>了解图标的常见设计准则</p>\n<ul>\n<li>\n<p>能够对一个图标的好坏做出评判。</p>\n</li>\n<li>\n<p>了解不同的图标风格</p>\n</li>\n<li>\n<p>能够从现有图表库中中选取合适的图标应用到项目中。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>简单了解图标的制作软件与制作方式</p>\n<ul>\n<li>\n<p>能够制作简单的图标</p>\n</li>\n<li>\n<p>在项目拥有一套完善图标风格，但部分图标存在缺失时能够自制图标补全。</p>\n</li>\n</ul>\n</li>\n</ul>\n",
      "date_published": "2020-09-13T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "图标应用",
      "url": "https://blog.tlcsdm.com/design/icon/apply.html",
      "id": "https://blog.tlcsdm.com/design/icon/apply.html",
      "summary": "在 UI 设计中，图标不是孤立存在的。我们学习图标的设计，不是为了画一组套图，然后上传到设计平台中分享或求赞，而是要在真实的项目中发挥作用。如果不了解图标应用到项目中的知识点，那么真实的图标设计水平就会在项目设计过程中被损耗。 所以，本章讲述工具图标在项目中应用的方法。",
      "content_html": "<p>在 UI 设计中，图标不是孤立存在的。我们学习图标的设计，不是为了画一组套图，然后上传到设计平台中分享或求赞，而是要在真实的项目中发挥作用。如果不了解图标应用到项目中的知识点，那么真实的图标设计水平就会在项目设计过程中被损耗。</p>\n<p>所以，本章讲述工具图标在项目中应用的方法。</p>\n<!-- more -->\n<h2>一套应用中的图标规格</h2>\n<p>图标是一个应用不可或缺的组成元素，在应用的界面中随处可见。也因为图标的常见性，我们往往需要在一个应用中应用多套图标，这和崇尚简约的第一印象是有背离的。</p>\n<p>很多新手，都以为我们只要设计一套大而全的图标，在项目中对应提取即可。但有很多场景，如果只使用一种图标类型，那么效果会非常差劲。比如，我们看看下面的淘宝设置页，前后包含了 6 种以上的图标。是太复杂了没错，但如果我们把图标都替换成同一套呢?</p>\n<figure><figcaption>替换淘宝图标</figcaption></figure>\n<p>可以看见，右侧替换后的案例，效果非常的不理想，缺乏对比和趣味性。交互规则中说: 如无必要，勿增实体，但对于图标的使用来说，这就是必要。</p>\n",
      "date_published": "2020-09-14T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "装饰性图标设计",
      "url": "https://blog.tlcsdm.com/design/icon/decorative.html",
      "id": "https://blog.tlcsdm.com/design/icon/decorative.html",
      "summary": "装饰图标最主要的应用区域，集中在首页的快速入口上，也是今天多数应用中会使用的组件。下面，我们会讲解国内主流应用中的几种装饰图标的设计。",
      "content_html": "<p>装饰图标最主要的应用区域，集中在首页的快速入口上，也是今天多数应用中会使用的组件。下面，我们会讲解国内主流应用中的几种装饰图标的设计。</p>\n<!-- more -->\n<figure><figcaption>装饰图标分类</figcaption></figure>\n<h2>扁平插画风格</h2>\n<p>装饰图标的主要作用是丰富视觉体验，对于识别性的要求较低，所以我们可以在这里应用更复杂的图形和添加更多的细节。在这里的扁平插画风格设计更具象，而不是像工具图标一样的抽象化，所以完整的采用扁平插画的设计是没问题的。</p>\n<p>例如在肯德基客户端首页的服务分类中，使用的图标就是依据扁平插画的形式设计的，有较多的色彩和完整的细节。</p>\n<figure><figcaption>肯德基设计图</figcaption></figure>\n<p>这类图标的设计并不困难，只要具备了工具图标的设计基础，就可以很快学会并运用。它的设计特征是这样的，先通过绘制具体的图形轮廓，然后为这个轮廓内添加细节，并对不同的面填充不同的色彩进行区分。</p>\n<p>下面，我们通过讲解几个图标的设计过程，帮助大家学习这种设计风格。</p>\n<ol>\n<li>\n<p>优惠券图标</p>\n<p>先通过模拟现实世界的优惠券样式，确定出基本的线性轮廓。</p>\n<figure><figcaption>优惠券1</figcaption></figure>\n<p>但作为装饰图标来说，这样的设计目前有些简陋，左侧空出了大量的留白，所以我们要考虑如何增加细节来丰富这个区域。于是，使用 % 号就可以比较好的标示折扣。</p>\n<figure><figcaption>优惠券2</figcaption></figure>\n<p>最后，开始为图标填色。因为在这套图标中，红色是主要基调，所以我们不能大面积的使用其它颜色，于是就将其中一侧进行留白处理，只修改了它描边的色彩。并且还在票据两侧的连接处添加了一个用来标示阴影的竖线。</p>\n<figure><figcaption>优惠券3</figcaption></figure>\n</li>\n<li>\n<p>店铺图标</p>\n<figure><figcaption>店铺图标</figcaption></figure>\n</li>\n<li>\n<p>我的卡包图标</p>\n<figure><figcaption>我的卡包</figcaption></figure>\n</li>\n</ol>\n<h2>渐变几何背景</h2>\n<p>和其它风格比较，在快速入口中，线上案例应用得最多的风格其实是渐变几何背景的设计方案，即在一个应用渐变色的背景上贴了一个线性或面性的图标。</p>\n<figure><figcaption>渐变几何背景</figcaption></figure>\n<p>这种风格的设计，主要在于背景渐变色的应用，通常，在一组彩色快速入口的图标中，要让它们的渐变色看起来自然和谐，是需要技巧的。</p>\n<p>例如有四个图标，首先要定义出不同的色相，然后再对它们应用相同的渐变模式。例如，使用相同的渐变角度，然后在渐变的起始色使用该色相，在结尾使用不同明度、饱和度的色彩。</p>\n<figure><figcaption>渐变几何背景1</figcaption></figure>\n<p>之后，再在上方置入图标的图形，并为它们添加适当的阴影即可。</p>\n<figure><figcaption>渐变几何背景2</figcaption></figure>\n<p>如果在这个基础上，还想再添加细节，那么就可以在上方的图形中添加一些折叠的阴影效果，强化立体感。</p>\n<figure><figcaption>渐变几何背景3</figcaption></figure>\n<h2>炫彩渐变风格</h2>\n<p>这是一个比较奇特的设计风格，在过去只存在于飞机稿中，是一种单纯为了追求视觉表现力的设计形式，通过高饱和的渐变、撞色，抓取浏览者的眼球。</p>\n<figure><figcaption>炫彩渐变风格</figcaption></figure>\n<p>这类风格的设计，在确定了图形以后，就是为它们填充高饱和度的渐变色。和扁平插画比较不同的是，色彩的填充不是用来描绘物体的颜色，而仅仅是视觉表现的一种方法，所以颜色的添加追求的不是「合理」，而是纯粹的「好看」。</p>\n<p>并且，通常这类图标还会使用前两年开始流行的彩色投影，增加界面本身的层次感。下面，我们也通过 3 个案例，为大家演示一下这类图标设计的过程。</p>\n<p>案例 1:</p>\n<figure><figcaption>炫彩渐变风格1</figcaption></figure>\n<p>案例 2:</p>\n<figure><figcaption>炫彩渐变风格2</figcaption></figure>\n<p>案例 3:</p>\n<figure><figcaption>炫彩渐变风格3</figcaption></figure>\n<h2>实物贴图风格</h2>\n<p>最后，讲讲实物贴图的图标风格。这种图标出现在涉及到实物产品的应用中，例如电商应用，智能硬件控制应用等等。</p>\n<figure><figcaption>实物贴图风格</figcaption></figure>\n<p>这类设计看起来很简单，只要画出一个几何的背景，并建立蒙版将实物图置入进去即可，但还是有不少新手会犯错误，下面我们主要说说常见的问题有哪些。</p>\n<ol>\n<li>\n<p>物体的透视</p>\n<p>和工具图标一样，我们要尽可能的保证整组图标中图形的形状和透视可以统一，如果实物图采用的透视不一致，那么空间的对立感就更强，也容易被用户觉察到违和感。</p>\n<figure><figcaption>实物贴图风格1</figcaption></figure>\n</li>\n<li>\n<p>形体和比例</p>\n<p>当我们采用实物照片时，我们往往不能控制该物体完整的形状，但需要切记的是，不是物体本身是什么形状我们都要完整的置入进去。</p>\n<p>比如入口中有口红和香水两种，口红是细长的而香水是圆形，那么我们可以做的就是放大口红，最终只展示它的局部，否则它们的对比会完全失衡。</p>\n<figure><figcaption>实物贴图风格2</figcaption></figure>\n</li>\n<li>\n<p>图形的质感</p>\n<p>实物的图形，还有一个非常重要的细节，就是它们的质感。这种质感指的不是物体本身的材质，而是摄影、后期产生的质感。如下图的对比，同一件商品，手机直出的图，和经过商品精修的图，展现出来的质感是完全不一样的。</p>\n<figure><figcaption>实物贴图风格3</figcaption></figure>\n<p>如果强行将有精修痕迹和普通照片抠出来的商品放到一起，也只能给用户产生巨大的违和感。所以，如果提供给我们的素材本身质感不同，那么我们就要在 PS 中对它们进行调试，尽可能保证它们的一致。</p>\n</li>\n<li>\n<p>前后对比</p>\n<p>因为是摄影图，所以图形本身包含的细节会非常丰富，而且色彩也可能比较多。在采用了几何背景时，就要保证它能更好地衬托主体物。如果使用较强的颜色，或是太多细节，就会导致前后元素的分离度不足，无法凸显物体本身。所以，多数采用这种风格的设计案例中，背景用色都使用饱和度偏低的配色。</p>\n<figure><figcaption>实物贴图风格4</figcaption></figure>\n</li>\n</ol>\n<p>只要不犯上面 4 种错误，那么设计这类图标时，就能保证最终的效果不会太差。</p>\n<h2>小结</h2>\n<p>掌握以上这种风格的画法，已经可以应对绝大多数的需求和场景了。但这并不是终点，应用对于视觉风格的追求愈发的重要，想要尝试更多的设计风格，那么就需要掌握更多种装饰类图标的设计方法。需要大家在之后的时间里努力积累相关的技巧和思路。</p>\n",
      "date_published": "2020-09-14T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "图标绘制流程",
      "url": "https://blog.tlcsdm.com/design/icon/draw.html",
      "id": "https://blog.tlcsdm.com/design/icon/draw.html",
      "summary": "情绪板 情绪板是在执行一项设计操作之前非常重要的一个步骤，情绪板并不是像设计平台展示作品集里那样放几张图片，几个关键词，而是一套对接下来设计的一个风格走向定位。根据不同的用户人群，不同颜色的色彩情绪，不同产品的业务，将用户调研的结果，产品的背景进行总结与思考，定位接下来的设计风格。 绘制流程 选取照片 观察生活，对想画的图标进行照片实物造型的提取。图标...",
      "content_html": "<h2>情绪板</h2>\n<p>情绪板是在执行一项设计操作之前非常重要的一个步骤，情绪板并不是像设计平台展示作品集里那样放几张图片，几个关键词，而是一套对接下来设计的一个风格走向定位。根据不同的用户人群，不同颜色的色彩情绪，不同产品的业务，将用户调研的结果，产品的背景进行总结与思考，定位接下来的设计风格。</p>\n<h2>绘制流程</h2>\n<h3>选取照片</h3>\n<p>观察生活，对想画的图标进行照片实物造型的提取。图标是对生活中事物的精简概括。利用现实照片作为设计参考可以让绘制出的图标更真实，辨识度更高，还可以做到差异化设计。</p>\n<h3>造型勾勒</h3>\n<p>使用矢量软件的基本图形与钢笔工具描着照片进行轮廓的绘制。</p>\n<h3>简化优化</h3>\n<p>简化草稿轮廓的结构，只保留一个物体的主要特点元素，删除多余元素。优化图标细节，需要时将图标线性转面性。</p>\n<h3>业务属性</h3>\n<p>根据业务需要，调整图标风格，添加质感。</p>\n<figure><figcaption>图标制作流程</figcaption></figure>\n<h2>制定规范</h2>\n<p>无规矩不成方圆，规矩的出现可以让一切杂乱的东西变得合理，统一起来。在设计上也是如此，规范具有统一输出，指引细节、便于查看的好处，规范就是一组图标中的规矩，所有图标的绘制都按照规矩来，最终的成品就会显得井然有序。</p>\n<p>在制定规范时，通常先绘制出一个符合业务风格的图标，然后根据这一个图标定制后续的图标规范，最基本的规范便是描边宽度，断点位置、圆角大小，主色辅色，渐变角度，点缀元素，光影角度等，在一组中的图标需要在这些图形属性中进行统一，这样的图标虽然形状不一样但是在视觉上看起来是属于同一合集的。</p>\n<p>制定规范一般分为三个过程:</p>\n<ul>\n<li>拆分细节: 将图标中的细节元素进行分解，在规范中制定细节元素的使用法则。</li>\n<li>风格定位: 根据产品调性，业务属性在规范中制定相应的色彩心理、质感风格。</li>\n<li>功能划分: 功能相近的包括色彩、质感应该采取相近性。</li>\n</ul>\n",
      "date_published": "2020-09-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "面性图标设计",
      "url": "https://blog.tlcsdm.com/design/icon/flour.html",
      "id": "https://blog.tlcsdm.com/design/icon/flour.html",
      "summary": "面性图标在操作中和线性图标的最大差别就在于描边和填充模式，我们知道为了满足像素对齐的要求，线性描边会在操作中产生很多不可控的因素，要用很多额外的操作步骤去弥补。在面性图标中，就不需要使用描边，并且使用相同的图标模板即可。 面性图标面性图标 下面就进入本篇的具体案例演示。 基本面性风格 使用线性图标生成面性图标使用线性图标生成面性图标 如图所示，我们使用...",
      "content_html": "<p>面性图标在操作中和线性图标的最大差别就在于描边和填充模式，我们知道为了满足像素对齐的要求，线性描边会在操作中产生很多不可控的因素，要用很多额外的操作步骤去弥补。在面性图标中，就不需要使用描边，并且使用相同的图标模板即可。</p>\n<figure><figcaption>面性图标</figcaption></figure>\n<p>下面就进入本篇的具体案例演示。</p>\n<h2>基本面性风格</h2>\n<figure><figcaption>使用线性图标生成面性图标</figcaption></figure>\n<p>如图所示，我们使用线性图标中的样式，设计成面性效果。具体的操作步骤就不需要再完整演示了，只需要将所有线性风格演示中的描边替换成填充，再使用对应的路径查找器功能即可。</p>\n<p>需要注意的是，可能我们会习惯于使用线条工具绘制很多 1pt 宽的直线，这是错误的做法。我们需要使用矩形工具画出一个完整的闭合图形，再使用路径查找器工具或者对图形进行批量操作，这样才能保证统一。</p>\n<figure><figcaption>面性图标路径</figcaption></figure>\n<p>还有，面性图标不代表完全不能出现「线性」元素，在一些特定的情况下，我们依旧要通过线条的形式展现图形轮廓，比如搜索图标的镜片，使用全填充的样式显然效果不理想，所以镂空镜片区域是不可避免的。</p>\n<figure><figcaption>面性搜索图标</figcaption></figure>\n<p>虽然我们不可避免要使用「线性」的元素，但在面性风格中，这些图形的描边元素不能太细，应该使用不小于 2pt 的宽度。并且，为了保证图标的一致性，整套图标的线条都要尽可能使用相同的粗细，而不是这里使用了 2pt，在别的图标中就是 4pt。</p>\n<h2>扁平插画风格</h2>\n<figure><figcaption>扁平插画风格</figcaption></figure>\n<p>扁平插画风格实际上是一个自由度非常高的图标风格，可以设计出很多有趣又极具创意的插画式图标。在本案例中，我们只讲解其中一种最基础的设计方式，便于新人入门。</p>\n<p>最基础的扁平插画，就是在面性图标的基础上，将图形拆分成不同面的组合，然后分别为这些面填充纯色即可。比如心型图标，看起来像是只有一个面的图形，但我们可以人为居中将它分割成两个面，然后填充同色系的不同明度，就可以得到一个扁平插画风格的图标。</p>\n<figure><figcaption>爱心示例</figcaption></figure>\n<p>类似搜索或消息图标这样有镂空区域的图标，我们就可以为镂空区域填充不同的色彩，使其作为独立的面呈现，也能达到相同的风格。</p>\n<figure><figcaption>搜索示例</figcaption></figure>\n<p>最后一种，就是将图标「拟真」化。比如眼睛图标，我们可以用接近真实眼睛的样式来创作，为它增加瞳孔、高光等细节，只要依旧使用纯色填充，且将细节数量保持在合理的范围内，就不会与其它图标产生冲突。</p>\n<figure><figcaption>眼睛示例</figcaption></figure>\n<h2>彩色渐变风格</h2>\n<figure><figcaption>彩色渐变风格</figcaption></figure>\n<p>在面性图标的彩色渐变中，有多种更细致的设计类型，比如整个图标采用同一渐变，或者图标中不同的面采取不同的渐变方式。</p>\n<p>整个图标使用同一渐变色的做法，和线性图标的渐变方法几乎一样，只要在开始填充渐变前将所有图层进行合并即可。我们来讲解一个比较特殊的基础渐变风格——不同透明度渐变。</p>\n<p>比如心形图标，我们把它划分成了两个不同的面的组合，然后都使用了红色的渐变色，一强一弱。通常，我们只要先设定出较强的渐变，然后再复制这个渐变色到另一个面中，降低它的透明度即可。</p>\n<figure><figcaption>渐变设计</figcaption></figure>\n<p>在使用了透明度的图形中，要注意的是为了保证在实际使用中不让图形背面的元素影响到图标色彩本身，我们要将这些图形复制一层填充成白色并置于底部。</p>\n<h2>透明叠加风格</h2>\n<figure><figcaption>透明叠加风格</figcaption></figure>\n<p>最后，就是这类透明叠加的设计风格了。和线性图标中的叠加设计方式一样，我们需要将图形拆分成若干面，才能创造出重叠的区域。</p>\n<p>在这个方案中，图标尽可能使用纯色，会比使用渐变的效果更好，原因在于我们对重叠区域色彩的控制上。可能很多同学看到这个风格，会以为叠加的区域只要控制透明度就可以了，但这种效果通常很不理想，尤其在配色为撞色上，相交部分的色彩就会有「朦胧」感，缺少通透的舒适性，并且图形本身的饱和度也会受到影响，比如下面的演示:</p>\n<figure><figcaption>透明叠加设计1</figcaption></figure>\n<p>通常，相交区域的色彩要另外配置。也就是在绘制好图形的所有轮廓以后，将它们一起选中，然后使用「图像生成工具」，再为相交的区域单独选择配色。下图就是单独挑选的两个配色和透明度的方式对比。</p>\n<figure><figcaption>透明叠加设计2</figcaption></figure>\n<h2>总结</h2>\n<p>相对于线性图标的设计而言，面性工具图标的设计就简单很多，虽然设计风格有非常多的延展性和可能性，但大家始终要记得它们依旧是「工具图标」，识别性是优先于视觉风格的，所以切勿过度强调视觉性而将它们做成了装饰性图标。</p>\n",
      "date_published": "2020-09-13T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "图标设计指南",
      "url": "https://blog.tlcsdm.com/design/icon/guide.html",
      "id": "https://blog.tlcsdm.com/design/icon/guide.html",
      "summary": "图标的可用性 图标可用性，顾名思义就是图标绘制出来是否能被用户所看懂并快速识别，是否可以为业务赋能。以下是总结的四条图标绘制的评判标准。 图标绘制的评判标准图标绘制的评判标准 凸显性 用户是否能在某页面上迅速找到该图标，凸显性的目的是可以快速查找，帮助用户做选择。图标在识别的速度上远远大于文字，所以在一些页面中的重要功能使用图标的目的是为了吸引用户的注...",
      "content_html": "<h2>图标的可用性</h2>\n<p>图标可用性，顾名思义就是图标绘制出来是否能被用户所看懂并快速识别，是否可以为业务赋能。以下是总结的四条图标绘制的评判标准。</p>\n<figure><figcaption>图标绘制的评判标准</figcaption></figure>\n<h3>凸显性</h3>\n<p>用户是否能在某页面上迅速找到该图标，凸显性的目的是可以快速查找，帮助用户做选择。图标在识别的速度上远远大于文字，所以在一些页面中的重要功能使用图标的目的是为了吸引用户的注意力，让重要功能得到凸显，提高重要功能的点击率。</p>\n<h3>可识别性</h3>\n<p>图标的目的是要让用户猜出他看到的图标所表达的意义，有什么作用，以及点击后会出现什么样的场景，发生什么样的事情。所以一个图标的好与坏最重要的因素就体现在这里: 图标的可识别性与可预知性。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">影响图标可识别性的三点因素</p>\n<ul>\n<li>视觉复杂性: 图标的细节与组合图形的元素</li>\n<li>熟悉性: 图标中图形所表达语义的熟悉程度</li>\n<li>具体性: 图标或者图标中的图形与现实生活中物体的相似程度</li>\n</ul>\n</div>\n<h3>美观度</h3>\n<p>图标是否美观，对用户是否有足够的吸引力。在《设计通用法则》一书中有一条设计法则是: 美即适用效应。不管任何事物，美丽的外表都会给人带来好感，让人觉得这种事物在任何方面都非常美好。作为设计师，把一件事物美观化是一件终生的必修课，用户对图标或者界面的第一印象就是始于颜值。</p>\n<h3>业务属性</h3>\n<p>图标是否符合业务属性，是否可以唤起用户的使用情绪，提高点击率，起到为业务赋能的作用。在界面中图标最终目的不只是让用户觉得它美观，而是要为产品赋能，什么是为产品赋能呢? 通俗来说就是使图标能够提升点击率从而给公司创造收益。</p>\n<h3>图标如何为产品赋能</h3>\n<ul>\n<li>\n<p>符合产品与业务属性: 比如儿童类产品，图标就要圆滑，多彩，看起来萌一点的感觉；如果是金融类的产品就应该使用微圆角，直角，中性色，金色来代表金融的庄严感与高级感。</p>\n</li>\n<li>\n<p>唤起用户的使用情绪: 比如在大众点评 app 中，有关与食品的图标都使用橙色的拟物，因为暖色可以给人们带来食欲感，微拟物配合暖色系就可以唤起用户对食品的情绪感。</p>\n</li>\n<li>\n<p>引导用户点击，提升点击率: 想要让用户点击一个内容，那必须要有足够的吸引力吸引用户去点击，一般来说美观度越高、趣味元素越多的图标可以占据大部分的吸引力，一个图标在页面中所占的比例也会影响对用户的吸引力，合理的文案搭配也会吸引用户去点击，比如优惠信息，新功能提示等。</p>\n</li>\n</ul>\n<h2>图标类型选取</h2>\n<h3>线性图标</h3>\n<p>线性图标，顾名思义，即图标是由直线、曲线、点在内等元素组合而成的图标样式。</p>\n<p><strong>优点</strong>:</p>\n<p>线性图标辨识度高，清晰唯美，简约易看，不会对页面造成太多的视觉干扰。</p>\n<p><strong>缺点</strong>:</p>\n<p>线性图标的创作空间较少，太复杂的线性图标看起来会让人感觉到累。</p>\n<h3>面性图标</h3>\n<p>面性图标，即使用对图形内容进行色彩填充的图标样式。</p>\n<p><strong>优点</strong>:</p>\n<p>面性图标是现实生活中物体的缩影，其表意能力强，细节丰富，色彩丰富，情绪感强，视觉突出，创作空间大等。面性图标可以让用户迅速定位图标位置，快速预知点击后的状态。</p>\n<p><strong>缺点</strong>:</p>\n<p>面性图标在页面中不可过多出现，否则会造成页面臃肿，难分主次，用户视觉疲劳。</p>\n<h3>混合型图标</h3>\n<p>在设计图标类型的时候，不一定局限于单纯的线性与面性，也可以两者结合，让图标即有线性描边的轮廓，还有色彩填充的区域。</p>\n<p>混合型图标可以让页面变得更加有活力，同时还可以吸引用户的注意力，美观与创意性强。</p>\n<p>但是混合型图标在商业产品中要谨慎使用，因为使用不当会让页面变得杂乱不堪，用户无法识别图标表达的语义。</p>\n<figure><figcaption>不同图标类型</figcaption></figure>\n<h2>图标的色彩</h2>\n<h3>色彩情绪</h3>\n<p>色彩情绪即颜色心理，指不同波长色彩的光信息作用于人的视觉器官，通过视觉神经传入大脑后，经过思维，与以往的记忆及经验产生联想，从而形成一系列的色彩心理反应。在任何场景下合理使用色彩心理可以调起用户情绪，还可以让用户产生联想进而快速识别。</p>\n<p>在设计图标的时候，合理的运用色彩情绪，会使图标更具有科学性，可以让用户在使用的过程中更加自然、舒服，同时也会增加用户的识别速度唤起用户的使用情绪。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">色彩情绪表</p>\n<figure><figcaption>色彩情绪表</figcaption></figure>\n</div>\n<h3>配色方法</h3>\n<p>在配色时，应采用更具备科学性、更符合人类感官的 HSB 系统进行配置。在根据主色配置渐变色时，通常在主色的基础上加白或者加黑。但是只加入大量的白或者黑就会改变原本色彩的明度与饱和度，从而使画面显得雾蒙蒙的，不够清晰通透。正确的做法是在给主色变亮减暗的同时，改变主色的饱和度。在 hsb 色相条中，最亮的三个颜色分别是，蓝紫色，青绿色与黄色，如果需要加亮主色就在混白的同时将蓝色向青色改变色相，如果需要减暗则是相反，这样在调制渐变色变化的过程中不会出现太脏的颜色。</p>\n<figure><figcaption>色调</figcaption></figure>\n<h3>配色方案</h3>\n<h4>常见的色彩搭配</h4>\n<ul>\n<li>中性色(黑白) + 主色</li>\n<li>主色 + 点缀色</li>\n<li>主色 + 透明度</li>\n<li>单渐变</li>\n<li>双渐变错层</li>\n<li>撞色叠加穿透等</li>\n</ul>\n<p>一般常用的就是 中性色 + 主色、主色 + 点缀色。</p>\n<h4>点缀色配色</h4>\n<ul>\n<li>互补色: 互补色就是在色环上距离 180° 的色彩，形成具有视觉冲击力的色彩。</li>\n<li>近似色: 近似色是在色环上距离 45° 左右的色彩，形成的配色效果风格和谐统一。</li>\n<li>对比色: 对比色是在色环上 120° 左右的色彩，可以产生较为强烈鲜明的视觉效果。</li>\n</ul>\n<figure><figcaption>色调</figcaption></figure>\n<h2>图标绘制技巧</h2>\n<h3>像素对齐</h3>\n<p>在绘制图标的时候，应该将图标的每个像素尽量对齐于像素点，这样导出图标时像素的边缘不会出现锯齿，不会出现过于模糊的情况。通常在绘制时去除绘制软件中 x 与 y 轴，宽(w)与高(h)的小数点，这样就可以避免无法对齐像素的情况。</p>\n<figure><figcaption>图标对齐</figcaption></figure>\n<h3>图标参考线</h3>\n<p>在绘制两个或者以上的图标时，为了避免多个图标出现大小不一的情况，应该使用由谷歌材料设计语言提供的图标参考线进行绘制，使用图标盒子可以让一整套图标在视觉效果上更加统一和谐，不会出现一大一小一长一短的情况。</p>\n<figure><figcaption>图标参考线</figcaption></figure>\n<h4>使用方法</h4>\n<p>先绘制一个 152×152px 的正方形，一个 176×176px 的正圆形，一个宽 176×128px 的水平矩形和一个 128×176px 的垂直矩形，圆角为 4px，然后将这个四个形状进行水平居中对齐，之后得出一个图标的参考线。</p>\n<p>在宽度相等的情况下，正方形的面积要大于正圆的面积，所以在绘制圆形图标时应该将圆形的上下左右四个顶点顶齐与图标盒子正方形区域的四条边；在绘制方形图标时应该将方形的四个角点顶齐与圆形参考线的外围边；在绘制横向矩形与纵向矩形图标时，应该将图标的左右边或者是上下边控制在正方形的参考线之内，这样矩形图标绘制出来会更加的圆润，相对于其他的形状图标更加匹配。</p>\n<figure><figcaption>图标布局</figcaption></figure>\n<h3>可访问性</h3>\n<p>图标必须要保证清晰度，可辨别性。不管是在强光下还是正常光下都需要良好的可读性。这就需要图标不论是自身元素之间的对比度还是和页面底板背景之间的对比度都需要很好的可读性。检测图标的可读性通常要将图标的背景色底板在黑色和白色之间进行切换对比，不论是黑色还是白色的背景都可以看清图标的全部细节，还需要确保图标中的每一种颜色都是可见的。第二就是将图标拿到强光下进行观察，在强光下是否可以看清图标的主题结构，图标是否有足够的辨识度。</p>\n<p>在绘制图标时，可以参考 WCAG 2.1: 图形和用户界面组件的对比度至少为 3 : 1 的标准进行相应配色，以达到良好的可视状态。</p>\n<p>可访问性测试: <a href=\"https://webaim.org/resources/contrastchecker/\" target=\"_blank\" rel=\"noopener noreferrer\">https://webaim.org/resources/contrastchecker/</a></p>\n<figure><figcaption>可访问性</figcaption></figure>\n<h3>统一性</h3>\n<p>在绘制多个类型相同的图标时，需要注意这一套图标合集需要在视觉上保持统一性。在一整套产品中，会有很多种图标，但是图标的功能不一样，所表达的内容也不同。这时，图标一致性的意义就体现出来了，根据格式塔原理中的相似性原则: 人们会将如元素彼此相似的东西感知为一组。这也意味着如果具有相同功能、含义和层次结构级别的元素，则应在视觉上保持统一匹配。通常倾向于将彼此相似的元素视为同一个分组，相似性可以帮助组织和分类页面里的元素对象，并将它们与特定的含义或功能相关联。有不同的方法可以使元素被认为是相似的，这些方法包括颜色、大小、形状、纹理、尺寸和方向的相似性。</p>\n<p>图标内容的统一会让用户明白相似的图标所代表的的功能也相同，而且在视觉上也更加和谐美观。因此在绘标后还需检查线条的粗细比重，边角的大小，配色方案，细节层次和设计元素在整个合集中是否是不变且一致的。</p>\n<figure><figcaption>统一性</figcaption></figure>\n<h3>图标呼吸感</h3>\n<p>呼吸感的意思就是适当留白。在设计中，适当的留白可以突出主体内容，让内容具备易看性。不管是图标还是界面，元素与元素之间都应该存在一定的间距。在图标的绘制过程中，图标元素之间的间距不宜过近，元素也不宜过多。图标是一个物体的简略缩影，目的是为了表达内容，让用户快速理解，但是在有限的空间中，太过复杂的细节会影响图标的识别速度。因此在图标的绘制过程中应该删除所有无法传达图标意义的元素，避免使图标变得太过复杂难以识别。</p>\n<figure><figcaption>呼吸感</figcaption></figure>\n<h3>合理运用布尔运算</h3>\n<p>布尔运算在设计行业中被得到广泛的运用，比如工业设计，影视后期，logo 设计等，布尔运算具有一致性与规范性的优点。在设计面性图标的时候可以合理使用布尔运算进行绘制，这样绘制的图标具有吸引力和说服力。</p>\n<figure><figcaption>合理运用布尔运算</figcaption></figure>\n<h3>页面层次感</h3>\n<p>在页面中，有需要吸引用户点击的图标，也有起到辅助作用的指示图标，还有引导用户操作的图标，这些图标在页面中占据着不同的地位.在所有图标中，有色图标强于无色图标，多色图标强于单色图标，面性图标强于线性图标，带背景图标强于无背景图标，在设计图标的时候应该根据业务需要进行视觉强弱不同的设计。</p>\n<figure><figcaption>层次感</figcaption></figure>\n<h3>符合业务属性</h3>\n<p>如文上所说，图标采用与业务相符合的色彩搭配会让用户在使用的过程中更加自然、舒服，同时也会增加用户的识别速度，唤起用户的使用情绪。一个图标的绘制是否具备商业价值也恰恰体现在这里。</p>\n<p>如下图所示，左图是斗鱼直播 APP 的截图，右图是京东金融的图标截图。这两款产品的业务以及所对应的用户群体完全不一样，斗鱼是一款直播的产品，直播面向的用户群体是青少年，所以整体的产品调性是: 萌、活泼、多彩、绚丽、时尚等，斗鱼直播的图标绘制需要面向年轻人，色彩的高饱和与有趣的元素来抓住用户的眼球。但是京东金融是一款理财的产品，面向的用户则是中老年，大多数都是有一些存款的人，这些人不需要斗鱼那样花里胡哨的元素，他们只在乎这个产品是否安全，利息是否高，所以京东金融这个产品的整体风格就需要偏向于: 安全、高端、大气，这样才能给用户从视觉上营造信任感。设计图标时通常使用产品的调性作为主风格，但是像美团淘宝这些业务众多的产品中，就需要根据产品下的细分业务进行风格定位，然后设计中相应融入产品的品牌元素，使用合理的色彩情绪等让图标变得更符合业务的风格。</p>\n<figure><figcaption>图标风格</figcaption></figure>\n<h2>最终测试</h2>\n<p>使用前，还需要测试这一组图标的重心是否统一，常用的方法是使用标准的正圆形和正方形来和所有绘制的图标进行对比，保证所有的图标重心相近，视觉统一。也可以采用不同角度的观察法，可以从上下左右四个角度去观察图标，看看图标在不同的角度下重心是否统一。</p>\n<figure><figcaption>图标重心</figcaption></figure>\n",
      "date_published": "2020-09-13T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "图标介绍",
      "url": "https://blog.tlcsdm.com/design/icon/intro.html",
      "id": "https://blog.tlcsdm.com/design/icon/intro.html",
      "summary": "图标的基本认识 图标，是一种图形化的标识，它有广义和狭义两种概念，广义指的是所有现实中有明确指向含义的图形符号，狭义主要指在计算机设备界面中的图形符号，有非常大的覆盖范围。 对于 UI 设计师而言，主要针对的就是狭义的概念，它是 UI 界面视觉组成的关键元素之一。 在当下最常见的扁平化设计风格中，界面的实际视觉组成只有 4 种元素，图片、文字、几何图形...",
      "content_html": "<h2>图标的基本认识</h2>\n<p>图标，是一种图形化的标识，它有广义和狭义两种概念，广义指的是所有现实中有明确指向含义的图形符号，狭义主要指在计算机设备界面中的图形符号，有非常大的覆盖范围。</p>\n<p>对于 UI 设计师而言，主要针对的就是狭义的概念，它是 UI 界面视觉组成的关键元素之一。</p>\n<p>在当下最常见的扁平化设计风格中，界面的实际视觉组成只有 4 种元素，图片、文字、几何图形、图标。</p>\n<figure><figcaption>由图片、文字、几何、图标组成的界面</figcaption></figure>\n<p>可以说，图片、文字、几何图形的运用，都只用到排版的技巧，而图标，是 UI 设计中除了插画元素以外唯一需要「绘制」、「创作」的元素，一涉及到这两件事，难度就直线上升了。</p>\n<p>本来往界面里丢一些方方圆圆、贴几张图、填一些字，就可以把界面做出来了，比如 Clear APP，不仅工作量少，而且还符合极简原则，为什么还要吃力不讨好的设计图标?</p>\n<figure><figcaption>Clear APP 的截图</figcaption></figure>\n<p>这就涉及图标作用的探讨了，本文就不长篇大论从上古时期人类与图形符号的纠葛开始写了，就谈对于图形界面本身，为什么图标有这么重要的地位，没它不行?</p>\n<p>有两个原因，第一文字虽然也是一种图形符号，但相对于图标而言，文字实在太复杂了，在识别效率上有先天的劣势。再者，不同的语言，文字的长度也不同，如果换成阿拉伯语或者俄罗斯语，或许一行还装不下所有文字。图标可以以一种更高效的方式，将想要传递的信息进行浓缩，不仅易于识别，也能让界面更简洁，利于排版，比如下方案例。</p>\n<figure><figcaption>应用文字替换了图标的对比</figcaption></figure>\n<p>第二点，就是关于视觉的观赏性。有些页面中，如果把图标去掉了，也丝毫不会影响操作效率，以及对内容的理解。但没有图标，缺少这些点缀，这个页面看起来就会太枯燥，最好的例子就是应用的设置页了，见下方案例。</p>\n<figure><figcaption>设置页有图标和没有图标的对比</figcaption></figure>\n<h2>总结</h2>\n<p>在 UI 的界面中，图标的主要作用是用来高效地传递信息，以及起到美化界面的作用。</p>\n",
      "date_published": "2020-09-13T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "线性图标设计",
      "url": "https://blog.tlcsdm.com/design/icon/line.html",
      "id": "https://blog.tlcsdm.com/design/icon/line.html",
      "summary": "线性图标是所有图标中最基础的设计形式，也是最简单的入门。在我们后续设计其它的风格图标前，首先要通过练习线性图标来打下坚实的基础。",
      "content_html": "<p>线性图标是所有图标中最基础的设计形式，也是最简单的入门。在我们后续设计其它的风格图标前，首先要通过练习线性图标来打下坚实的基础。</p>\n<!-- more -->\n<figure><figcaption>线性图标</figcaption></figure>\n<h2>设计注意事项</h2>\n<p>设计线性图标需要注意:</p>\n<ul>\n<li>制图的规范性</li>\n<li>图形的合理应用</li>\n</ul>\n<p>只要图形的设计能达到这两个要求，才能在进一步的创作中施展拳脚。</p>\n<p>线性图标的设计首先要确定图标的尺寸、描边的粗细和绘制图标的栅格系统，所以先确定图标的规格为 28pt * 28pt，使用 2pt 的内描边(设计中 PT 可以等同 PX )，然后再画出栅格，并进行编组。</p>\n<figure><figcaption>栅格示例</figcaption></figure>\n<h2>设计演示</h2>\n<h3>搜索图标</h3>\n<p>搜索图标是 APP 中最常见的图标，绘制原理也很简单，就是一个圆和圆角矩形的结合。</p>\n<ol>\n<li>\n<p>在案例中，设计的风格主要是偏圆润一点的，那么镜片的比例就要偏大。在这里使用了尺寸为 20pt 的圆，和一个宽 2pt 高 9pt 的圆角矩形。</p>\n<figure><figcaption>搜索图标绘制步骤 1</figcaption></figure>\n</li>\n<li>\n<p>将矩形和圆形进行连接并且垂直方向居中、编组，然后旋转 45 度。之所以要先垂直再旋转，是因为如果直接画出一条倾斜的矩形再去连接镜片，那么矩形的中轴将很难移动到和圆心相交的位置。</p>\n<figure><figcaption>搜索图标绘制步骤 2</figcaption></figure>\n</li>\n<li>\n<p>调整搜索图标在模版中的位置，因为几何视觉差的关系，要让图标重心平稳，那么就要向右下角偏移，最终效果见下图。</p>\n<figure><figcaption>搜索图标绘制步骤 3</figcaption></figure>\n</li>\n</ol>\n<h3>聊天图标</h3>\n<p>聊天图标的设计和搜索图标一样，需要通过几何图形的组合完成，但不同于搜索图标的是，该图标需要应用到路径查找器面板的相关功能。</p>\n<ol>\n<li>\n<p>首先要画出聊天气泡的外轮廓，可以看出它是由一个圆角矩形和三角形组成，所以第一步要做的就是画出这两个元素。</p>\n<figure><figcaption>聊天图标绘制步骤 1</figcaption></figure>\n</li>\n<li>\n<p>将它们连接并垂直方向居中，然后使用路径查找器面板的「联集」选项，将它们合并成一个图形。</p>\n<figure><figcaption>聊天图标绘制步骤 2</figcaption></figure>\n</li>\n<li>\n<p>在轮廓内部画一长一短两条 2pt 宽的矩形。</p>\n<figure><figcaption>聊天图标绘制步骤 3</figcaption></figure>\n</li>\n<li>\n<p>调整图标在模版中的位置，根据视觉差要将图标向下偏移，最终效果见下图。</p>\n<figure><figcaption>聊天图标绘制步骤 4</figcaption></figure>\n</li>\n</ol>\n<h3>查看图标</h3>\n<p>查看图标的设计也需要应用路径查找器的功能，实现过程也非常简单。</p>\n<ol>\n<li>\n<p>画两个 2pt 描边，垂直方向对齐且相交的圆，并使用路径查找器中的「交集」功能获取它们相交的部分。</p>\n<figure><figcaption>查看图标绘制步骤 1</figcaption></figure>\n</li>\n<li>\n<p>将这个图形置入到模版中，然后可以通过拖动图形大小的方式，更改它的左右两边到像素对齐的位置(这个形状的比例发生变化是没问题的)。</p>\n<figure><figcaption>查看图标绘制步骤 2</figcaption></figure>\n</li>\n<li>\n<p>在中央位置添加一个 8pt 大小的圆，就完成了最终的效果。</p>\n<figure><figcaption>查看图标绘制步骤 3</figcaption></figure>\n</li>\n</ol>\n<h3>心形图标</h3>\n<p>心形图标如何绘制，对于新人来说是一个非常常见的问题。很多人都不知道具体该怎么画出这个图形，而心形图标又几乎被运用在所有应用中，所以就要巧妙运用几何图形的组合。</p>\n<ol>\n<li>\n<p>画两个矩形，一个竖直一个水平放置，并将上方和右侧的两个边缘进行圆角处理。</p>\n<figure><figcaption>心性图标绘制步骤 1</figcaption></figure>\n</li>\n<li>\n<p>将两个图形进行移动相交，并保证上方和右侧的两个半圆正好紧贴在另一个矩形的边缘，然后使用路径查找器中的 「联集」功能，就可以得到一个躺着的心形。</p>\n<figure><figcaption>心性图标绘制步骤 2</figcaption></figure>\n</li>\n<li>\n<p>将心形进行旋转，并置入到模版中，添加圆角细节，略微向下偏移，就可以得到下图的最终效果。</p>\n<figure><figcaption>心性图标绘制步骤 3</figcaption></figure>\n</li>\n</ol>\n<h3>卡券图标</h3>\n<p>卡券图标有一个外轮廓和内部的虚线部分，外轮廓在上下有两个半圆的凹槽，要通过两个圆进行裁切。</p>\n<ol>\n<li>\n<p>画一个 28pt * 24pt 的圆角矩形，并在上下方各画一个 4pt 大小的圆，与矩形的边缘相交。</p>\n<figure><figcaption>卡券图标绘制步骤 1</figcaption></figure>\n</li>\n<li>\n<p>确认两个小圆图层顺序在矩形的上方，然后选中三个图层，使用路径查找器中的「减去顶层」即可得到外轮廓。</p>\n<figure><figcaption>卡券图标绘制步骤 2</figcaption></figure>\n</li>\n<li>\n<p>最后，就是画出卡片中的两条「虚线」，再置入到模版中，就可以得到下图的最终效果。</p>\n<figure><figcaption>卡券图标绘制步骤 3</figcaption></figure>\n</li>\n</ol>\n<h3>房屋图标</h3>\n<p>从房屋图标的形状中，我们可以看出它包含了三角、圆和矩形这三个形状，主要的难点是如何通过三角形和矩形画出外部的轮廓。</p>\n<ol>\n<li>\n<p>首先画出一个 28pt × 10pt 的等腰三角形，再画一个 22pt × 16pt 的矩形，将它们边缘进行重叠。</p>\n<figure><figcaption>房屋图标绘制步骤 1</figcaption></figure>\n</li>\n<li>\n<p>三角形三个尖角的圆角依次设置为 3pt、1pt、1pt(上、左、右)，再将矩形下半部分的两个直角添加 4pt 圆角。</p>\n<figure><figcaption>房屋图标绘制步骤 2</figcaption></figure>\n</li>\n<li>\n<p>执行「联集」操作，生成完整的外轮廓。之所以先做圆角再执行联集，是因为提前合并两个形状，会导致一些尖角无法使用圆角工具。</p>\n<figure><figcaption>房屋图标绘制步骤 3</figcaption></figure>\n</li>\n<li>\n<p>画出房屋中间的圆形，然后将图形置入模版中，就可以得到下图的最终效果。</p>\n<figure><figcaption>房屋图标绘制步骤 4</figcaption></figure>\n</li>\n</ol>\n<h3>齿轮图标</h3>\n<p>齿轮在 UI 中一般作为设置的图标使用，也是常用图标中最难画的图标之一。</p>\n<ol>\n<li>\n<p>画一个 28pt 的大圆，然后再画一个 8pt 的小圆，置于圆的左侧。然后使用「旋转工具」，将小圆旋转中心固定到大圆的圆心中，按回车键，在弹出的对话框中选择 60° 然后点击复制按钮，生成第二个圆。之后再按 Ctrl / Command +D 重复操作 4 次，就可以得到完整的圆环。</p>\n<figure><figcaption>齿轮图标绘制步骤 1</figcaption></figure>\n</li>\n<li>\n<p>保证周围的 6 个圆在大圆的上层(一般来说，新画的六个小圆必然在大圆上层)，并将 7 个圆全部选中，执行「减去顶层」操作。</p>\n<figure><figcaption>齿轮图标绘制步骤 2</figcaption></figure>\n</li>\n<li>\n<p>最后，将所有内圆角改为 2pt，再画一个直径 8pt 的内圆，然后在模版中调整到正确的位置即可，就可以得到下图的最终效果。</p>\n<figure><figcaption>齿轮图标绘制步骤 3</figcaption></figure>\n</li>\n</ol>\n<h3>文件图标</h3>\n<p>文件图标也是一个很简单，但是大多数人就是做不好的图标，右下角的折角难倒了很多新手，在这里我们用一个简单的方法进行实现。</p>\n<ol>\n<li>\n<p>先画一个 20pt * 23pt 的圆角矩形(高不是偶数，后面会解释)，然后要先把右下角的缺口做出来。这里如果要使用减去顶层的方法做也可以，但我们要用一个更简单的操作，在右下角顶点上方和左侧 6pt 的位置各添加一个锚点，然后使用「删除锚点工具」删除右下角顶点的锚点，就可以得到一个倾斜的切口。</p>\n<figure><figcaption>文件图标绘制步骤 1</figcaption></figure>\n</li>\n<li>\n<p>在右下角画一个圆角为 4pt 的矩形，然后将其中一个边与上个步骤的缺口相交，相交的部分即为折角的部分。这时候选中两个矩形，使用「形状生成器工具」(快捷键 Shift + M)，点击一下图示的部分，就会生成一个新的形状组，接着取消它们的编组，再选中多余的图形进行删除，就可以得到一个完整的折角效果。</p>\n<figure><figcaption>文件图标绘制步骤 2</figcaption></figure>\n</li>\n<li>\n<p>最后，设置大圆角(4pt)和小圆角(2pt)，并在内部添加 3 个圆角矩形，再根据几何的视觉差将图标置入模版中，向下移动一个像素，就可以得到下图的最终效果。</p>\n<figure><figcaption>文件图标绘制步骤 3</figcaption></figure>\n</li>\n</ol>\n<h2>总结</h2>\n<h3>栅格的使用</h3>\n<p>针对栅格的使用，为了便于演示都给出了具体的数值，在最后一步才置入到模版中。实际上，我们应该在一开始的绘制中就在模版中进行，而往往刚开始画的图形尺寸是不能代表最终效果的。</p>\n<p>比如最后一个文件图标中，为什么是 23pt，并且偏下 1pt。是因为一开始创建 24pt 高的矩形，在完成最终效果以后会发现重心上移，而且整体偏大了(下图第一行)，这时候缩减高度才能保证视觉的稳定性(下图第二行)。而房屋屋顶的三角形，我们使用的是 28pt 撑满画布，这也是经过了不断地尝试，测试了多种宽度和圆角效果后才确定出来的，并不是一蹴而就的。</p>\n<h3>图形的调整</h3>\n<p>图形的不同角度、尺寸和比例，都会影响图标最后呈现的效果，需要我们在制作过程中保持对图形优化的态度，通过持续调整和对比找到最合适的结果。</p>\n<p>比如搜索图标，重点在于圆和矩形的比例，不同比例会带给我们截然不同的感受。</p>\n<figure><figcaption>风格调整</figcaption></figure>\n<p>以及在查看图标中，圆形相切的比例不同，也决定了最终呈现的效果差异，相交越少感觉越尖锐，相交越多则感觉越圆润。</p>\n<figure><figcaption>风格调整</figcaption></figure>\n<h3>多种操作方式</h3>\n<p>实现同一种效果，可以有非常多的操作方法，殊途同归。虽然软件只是实现设计的工具，但对工具的理解越全面越好，很多时候我们都可以尝试使用不同的方法来实现相同的效果，而不用太拘泥于一种固定的形式。</p>\n<p>比如在房子图标的绘制中，我们用的是三角形和矩形合并的形式制作的外轮廓。因为网格的存在，还可以直接通过钢笔工具绘制，自由度更高，但对我们图形把控能力的要求也更高。</p>\n<figure><figcaption>钢笔方式</figcaption></figure>\n<p>再比如文件图标的步骤 2 中，用的是「形状生成器工具」。如果将两个图形轮廓化，再使用路径查找器中的「分割」，也能够达到相同的效果。</p>\n<figure><figcaption>轮廓化方式</figcaption></figure>\n",
      "date_published": "2020-09-13T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "图标设计准则",
      "url": "https://blog.tlcsdm.com/design/icon/rule.html",
      "id": "https://blog.tlcsdm.com/design/icon/rule.html",
      "summary": "规范是图标设计的重点。",
      "content_html": "<p>规范是图标设计的重点。</p>\n<!-- more -->\n<figure><figcaption>三种主要类型的图标</figcaption></figure>\n<h2>表意的准确</h2>\n<p>第一部分已经介绍了图标的主要作用之一就是作为文字的替代品，具有明确的寓意。比如看见一个放大镜，大家会当成那是搜索；看见钥匙或者锁，大家就会理解成是密码。</p>\n<p>下面这些图标，每一个指代的功能和寓意都是非常直白和清晰的。</p>\n<figure><figcaption>寓意明确的图标</figcaption></figure>\n<p>表达的寓意清晰，是图标最基本的要求，否则它只会传递错误的信息，造成用户的困惑。</p>\n<p>在常见的图标类型里，如通知、设置、用户和分享之类的图标，对于任何手机用户来说都没有认知和选择压力。但表意准确麻烦的地方在于，一些非常规的寓意，极难用图标表现出来，这才是使用线性图标的首要麻烦。</p>\n<p>比如下方这些图标，如果不加上文字信息，大家能理解它们是什么吗?</p>\n<figure><figcaption>无文字信息</figcaption></figure>\n<p>那么，再把文字信息补充进去，是不是就会觉得图形挺贴合内容的?</p>\n<figure><figcaption>有文字信息</figcaption></figure>\n<p>在这种案例中，需要要关注的就是，面对这样不常见的内容，设计师是怎么把图形的创意和样式想出来的，如果自己遇到一样的问题怎么办?</p>\n<p>所以，除了知道每个图标都要表意准确之后，该如何通过合适的创意将图标样式确定出来?</p>\n<p>一般抽象的图标，难点在于寓意信息是非实体的，很难直接构建对图形样式的联想，所以办法就是将抽象的内容「实体化」。也就是说，可以先把这个词写到纸上，把和这个抽象信息相关的所有实体物写下来。</p>\n<figure><figcaption>实体化扩展</figcaption></figure>\n<p>之后可以挑选出某个合适的实物，以它作为原型开始绘制。如果对挑选出来的实物要以什么图形表现还没概念，那么就可以借助网上的图标素材网站，比如 iconfont、iconfinder 等，在搜索框中输入这些词语，通过别人的设计获取灵感。</p>\n<figure><figcaption>Iconfont</figcaption></figure>\n<p>如果本身拥有比较好的手绘基础或是平面基础，也可以直接通过对照片进行提炼的方式，设计出图形内容。</p>\n<p>所以，在设计图标时要符合表意准确的概念，需要设计师不断收集图形，并提升对词汇联想的能力。很多优秀的创意，就是在这些基础的积累之上逐渐形成的，而不是一蹴而就。</p>\n<h2>图标的一致性</h2>\n<p>第二个规范，叫图标的一致性。即一个或一套图标中，应该保持一致的细节。首先看看下面的反面案例:</p>\n<figure><figcaption>不一致的图标</figcaption></figure>\n<p>在上面的案例中，不同图标间有很大的割裂感，完全不像处于同一套设计体系之下，这就是缺乏一致性的表现。这也是新手在设计一整套图标最大的难点，要让所有图标保持视觉细节上的一致。</p>\n<p>那么，图标要保持视觉一致性有哪些细节呢?</p>\n<h3>类型一致</h3>\n<p>前面说过，图标有线性的和填充的类型，在正常的情况中，同一套图标应该保持相同的类型，如果使用了线性图标那么后续就不要设计填充以及混合的类型。</p>\n<figure><figcaption>类型一致</figcaption></figure>\n<h3>风格一致</h3>\n<p>每一套图标都有自己的设计风格，不同风格在细节中都有不同的表现，需要让这些风格特征保持高度统一，看看下面这些案例。</p>\n<p>第一，为图标添加缺口的设计风格，不过要保证这个缺口的大小是一致的，并且每一个图标中有且只有一个缺口，而不是靠感觉随意添加。</p>\n<figure><figcaption>添加缺口</figcaption></figure>\n<p>第二，在设计一套偏圆润可爱的设计风格中，外轮廓使用了较大的圆角，那么应当尽可能保证圆角的大小是一致的，而不是有的用 4pt，有的用 2pt 或者直接使用直角。</p>\n<figure><figcaption>使用圆角</figcaption></figure>\n<p>第三，采用了填充色偏移的设计风格，首先要保证填充色一致，并且偏移的距离和方向也要保持固定的规律，不能随喜好任意制定。</p>\n<figure><figcaption>填充色</figcaption></figure>\n<h3>透视一致</h3>\n<p>透视关系是在平面中对物体空间性质的表现方式，当图标应用了透视时，物体就有了一定的「立体感」。</p>\n<figure><figcaption>立体感</figcaption></figure>\n<p>透视的表现不是绘制图标时必须使用的风格，但是如果在图标中应用了透视，就要确保使用的视角是一致的。要极力避免同一套图标中既用了正视图又包含了侧视图。</p>\n<figure><figcaption>不同视角</figcaption></figure>\n<h3>粗细一致</h3>\n<p>在图标中会常常应用到矩形线段或是描边，应尽可能保证粗细一致。</p>\n<p>比如，在线性的设计中，路径的描边尺寸要保持一致，不能这个图标用 2pt，那个图标用 1pt。</p>\n<figure><figcaption>粗细一致</figcaption></figure>\n<p>在填充图标中，我们会在一个矩形或是圆形中增加矩形的镂空，比如下图的几个图标，在这种情况下也要保证它们的粗细是一致的，而不是各不相同。</p>\n<figure><figcaption>粗细一致2</figcaption></figure>\n<h3>大小一致</h3>\n<p>大小一致，就是让图标的视觉大小保持一致，而不是它们字面上的长宽属性保持一致。因为这是一个比较复杂的知识点，需要大家对几何图形的视觉差有比较完整的认识。这些和一致性有关的特征，是一套图标看起来专业、有整体感的必要条件。</p>\n<p>但是，在真实的设计场景中需要灵活变通。如果有一些特定的图标，在保证了一致性的要求后却极难被人理解，且找不到更好的设计方式，就可以差别对待。比如在一套图标中，播放、快进等图标往往都是填充类型的，这并不会造成视觉或是使用上的困扰。</p>\n<h2>几何图形的视觉差</h2>\n<p>几何图形的视觉差，是对于图标来说最重要的细节，也是平面基础理论中不可忽视的内容，这个理论要解决一个核心的问题，即怎么让不同的图形看上去一样大?</p>\n<p>可能大家有人会觉得这有什么难的? 通过软件的参考线或者属性设置，把它们的长宽设置成一样不就完事了。比如下图这样:</p>\n<figure><figcaption>尺寸等大的几何形视觉大小并不一致</figcaption></figure>\n<p>画起来轻轻松松，参数上完美无缺。但是，怎么看上去这些图形大小有点不一样，为什么正方形看起来这么大，三角形看起来这么小?</p>\n<p>这个问题的根源是，不同几何图形带给人们的视觉大小是不同的。而要解决这样的问题，就要对它们的尺寸做出额外的调整。比如下图这样:</p>\n<figure><figcaption>圆和三角需要进行放大修正</figcaption></figure>\n<p>适当调整完圆形和三角形以后，是不是觉得大小的感觉一致了? 这就要牵扯一个更基础的视觉规律，占据面积越大的图形，给人的视觉感受就越大，所以给人感受越小的元素，就要放得越大。</p>\n<p>并且，这个问题在一个图形的内部也会产生影响，比如知乎 APP 下面的点赞和反对按钮，都有三角形图标，但图形其实对于外部矩形是非居中的。</p>\n<figure><figcaption>重心感觉</figcaption></figure>\n<p>如果一个图形其中一部分面积远大于另一部分，那么就会让这个图形的重心产生偏移，必须要往较小的部分的方向移动才能产生平衡。</p>\n<figure><figcaption>调节重心</figcaption></figure>\n<p>所以，在设计一整套的应用中，如果没有对这个理论的理解，只定义一个矩形出来，把所有图形的尺寸与矩形对齐，那么最终看到的图标效果一定是极度不平衡的。</p>\n<figure><figcaption>重心对比</figcaption></figure>\n<h2>图标栅格</h2>\n<p>其实，针对图标的规范，大家可能第一个想到的应该就是参考线了，也就是所谓的栅格模板。之所以放在这里，是因为图标的栅格规范，是根据几何的视觉差特性衍生出来的。</p>\n<p>下面是常见的图标栅格:</p>\n<figure><figcaption>栅格</figcaption></figure>\n<p>里面包含了正方形、长方形和圆形。将它们分别罗列出来，可以发现这些图形的视觉尺寸是非常接近的。这样通过该尺寸设计对应的图形，也就看起来都一样大了。</p>\n<figure><figcaption>栅格对比</figcaption></figure>\n<p>所以，应用图标的栅格系统对于图标的设计来说，是一个用来应对几何图形视觉差的「参照物」。</p>\n<p>之所以要说参照物，原因在于一套图标不会只存在这几种图形的样式，还有很多千奇百怪的形状，但大体上我们可以识别出来它的类似轮廓或者重心方向，于是就可以通过参照图形来判断设计出来的图形尺寸是否符合标准。</p>\n<p>如果设计图形和参照图形类似，那么尺寸就不能大于参照图形；如果设计图形的宽大于参照图，那么高就要小于参照图，反之亦然。如果图形的重心有偏移，那就要往重心偏移的反方向移动，比如搜索按钮，Wi-Fi 图标等。</p>\n<figure><figcaption>栅格使用</figcaption></figure>\n<p>最后，说说栅格系统的画法，和大家想象的不一样，想要画一套图标，栅格系统是自己画出来的，不是到网上下载下来的，所以怎么画也是这个知识的重点。</p>\n<ol>\n<li>如何绘制图标栅格系统</li>\n</ol>\n<p>如果定义一套 28pt 的图标，那么首先要画一个 28pt 的正方形，然后确定一个 2 - 4pt 的内边距，正所谓四边留一线，日后好相见。</p>\n<figure><figcaption>步骤1</figcaption></figure>\n<p>然后就要开始在其中绘制正方形和圆形，正方形通常在整个图标尺寸 1/2 的比例，可以使用 14 或 16 的偶数(为了可以居中)。然后再确定圆形的尺寸，圆肯定比正方形大 2 - 4pt，于是就得到下方的图形。</p>\n<figure><figcaption>步骤2</figcaption></figure>\n<p>之后，再确定横竖长方形的尺寸，可以直接顶到内边距的边缘。它的尺寸不是通过数值计算的，而是要先画出来，把它们和前面的圆和正方形置于一条水平线上，调整出一个平衡的视觉尺寸，再合并进栅格系统中，就完成了栅格系统的绘制，如下图的案例。</p>\n<figure><figcaption>步骤3</figcaption></figure>\n<p>这一步也旨在检查参考线系统是否在基础结构上经得起考验，是非常关键的一步。因为不同尺寸的图标中，参考线系统都是有区别的，不能直接按一个固定的比例来设置，要根据实际场景做判断。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">栅格素材</p>\n<p>此处有一套现成的栅格素材，包含 16、24、28、32、36、48 等六个尺寸。</p>\n<ul>\n<li><a href=\"https://mister-hope.com/file/design/tool-grid.ai\" target=\"_blank\" rel=\"noopener noreferrer\">工具栅格下载</a></li>\n</ul>\n</div>\n<h2>像素对齐</h2>\n<p>在栅格的绘制中，如果您足够信心，您肯定发现了几个关键字，「对齐」、「偶数」，这就是在这一部分要提及的内容。关于显示器的倍率问题是 UI 基础知识点之一，可能有的同学不太了解，不过没关系，直接看下面的内容即可。</p>\n<p>大家都知道像素是屏幕显示中的最小单位，一个像素只能显示一种颜色。小时候玩过的 GBA 和 FC 游戏机，都是通过像素画的形式呈现，人物锯齿是无法避免的。</p>\n<figure><figcaption>老游戏</figcaption></figure>\n<p>而随着技术发展，像素密度是降低了，但如果依旧是按过去这种一个萝卜一个坑的方式显示内容，那锯齿感无论如何是无法消除的。于是，开发了次像素渲染(Subpixel Rendering)的技术。一个在显示器中让人们觉得平滑的圆，一直放大，就可以发现它的周边充满了饱和度较低的其它方块色彩。</p>\n<figure><figcaption>子像素渲染</figcaption></figure>\n<p>这项技术，让像素可以用特有的方式来显示非完整的色块，即尽可能还原设计师对元素定义的小数点。但为什么还要提这个概念呢?</p>\n<p>因为工具的图标太小了，而且 UI 的元素对精细和准确度的要求都不低，如果没有尽可能满足像素对齐的要求，那么就可能导致元素边缘的模糊。</p>\n<figure><figcaption>模糊的边缘</figcaption></figure>\n<p>所以要满足像素对齐的要求，就要符合元素本身的尺寸为整数、描边为整数和 XY 轴坐标为整数的特性。</p>\n<h3>AI 中的像素对齐设置</h3>\n<p>在 AI 中，可以通过两个设定来查看和保证像素对齐，即网格的设置显示，以及对齐到点的设置。</p>\n<figure><figcaption>AI 对齐</figcaption></figure>\n<p>像素的对齐主要表现在横线和竖线上，虽然现在手机显示精度越来越高，但并不意味着可以无视像素对齐的规律。在线性图标中，对于 1pt 或者 2pt 描边的应用，觉得不是太细就是太粗，可以用 1.5pt 的数值(1.5pt 在 2x 中就是 3px)，但切记不要出现类似 1.23、2.16、3.46 这种小数。</p>\n<p>像素对齐是一个专业 UI 设计师对于极致追求的表现之一，是每一个一线大厂 UI 设计师的基本操作，所以，想要冲刺更高的段位，就不要忽视这个规范的使用。</p>\n<h2>总结</h2>\n<ul>\n<li>\n<p>图标要表意准确，能被用户识别并契合想要表达的寓意。</p>\n</li>\n<li>\n<p>设计整套图标的时候要符合一致性原则，包括类型、风格、粗细、透视、大小等特征。</p>\n</li>\n<li>\n<p>不同的几何图形会给我们不同的大小视感，不能只看元素的参数。</p>\n</li>\n<li>\n<p>栅格系统根据视觉差的方式定义出来，作为图标尺寸设定的重要参考。</p>\n</li>\n<li>\n<p>图标的绘制要保证横竖的直线对齐到像素，图标尽量采用整数粗细，如果一定要用小数的话就使用 0.5 递进的。</p>\n</li>\n</ul>\n",
      "date_published": "2020-09-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "图标设计技巧",
      "url": "https://blog.tlcsdm.com/design/icon/skill.html",
      "id": "https://blog.tlcsdm.com/design/icon/skill.html",
      "summary": "图标是 UI 设计中最基础也是很重要的部分，辅助人们更好的理解功能内容。随着扁平化设计风格的普及，图标的风格越来越简约，看似简单的图形，实际要准确的表达含义，也是需要注意一些方法的。下面是是图标设计的实用技巧。 简单 一个图标一个非写实的表现。不需要担心图标不够真实，消除不必要的细节，用基本的形状只保留最基础的部分，让这个图标更容易被理解。 简单简单 ...",
      "content_html": "<p>图标是 UI 设计中最基础也是很重要的部分，辅助人们更好的理解功能内容。随着扁平化设计风格的普及，图标的风格越来越简约，看似简单的图形，实际要准确的表达含义，也是需要注意一些方法的。下面是是图标设计的实用技巧。</p>\n<h2>简单</h2>\n<p>一个图标一个非写实的表现。不需要担心图标不够真实，消除不必要的细节，用基本的形状只保留最基础的部分，让这个图标更容易被理解。</p>\n<figure><figcaption>简单</figcaption></figure>\n<p>有时候图标会因为有更多细节而传达了更复杂的意思，这反而是样式问题!</p>\n<h2>一致性</h2>\n<p>在整个图标系统中，您的图标要保持同一种样式来确保图标完美协调。比如同样的形状，填充，描边粗细，尺寸等。要制定好可以被复用的栅格，规范和样式。</p>\n<figure><figcaption>一致性</figcaption></figure>\n<p>如果可以的话，尽可能重新设计这些图标，而不要混入其他不同风格的图标来使用。</p>\n<h2>清晰</h2>\n<p>设计「完美像素」的图标，特别是在图标非常小的时候。这样图标的描边就可以保持锐利，不会有模糊。注意半像素的情况出现，尽量避免小数点参数。</p>\n<figure><figcaption>清晰</figcaption></figure>\n<p>这也可以帮您保持图标的辨识度，在您等比缩放他们的时候保持清晰。</p>\n<h2>空间</h2>\n<p>确保您的图标的所有形状有足够的空间。笔画和空间过于狭小会使图标更难被理解。</p>\n<figure><figcaption>空间</figcaption></figure>\n<p>最少给 2px 的负空间</p>\n<h2>视觉调整</h2>\n<p>确保您的图标看起来是正确的，适当的调整元素的对齐来达到视觉上的平衡。</p>\n<figure><figcaption>视觉调整</figcaption></figure>\n<p>不要只关注参数，如果有需要就用上您的眼睛来衡量，轻微移动这些元素。</p>\n<h2>布局规格</h2>\n<p>所有图标保持同样的尺寸，在图标周围定义一个可调整的内边距范围，尽量让元素设计在这个范围内。不要挤满所有元素。</p>\n<figure><figcaption>布局规格</figcaption></figure>\n<p>当图标需要额外控件时可以超出这个内边距范围。</p>\n",
      "date_published": "2020-09-14T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "学习图标所需的软件",
      "url": "https://blog.tlcsdm.com/design/icon/software.html",
      "id": "https://blog.tlcsdm.com/design/icon/software.html",
      "summary": "了解了图标的类型，就要开始了解做出这些图标应该使用哪些软件了。通常，UI 主要使用的设计软件包含 PS、AI、Sketch、XD 四款，理论上，它们都包含了图标绘制的功能，下面介绍这四款软件对于图标设计的优劣，以及需要掌握的部分。",
      "content_html": "<p>了解了图标的类型，就要开始了解做出这些图标应该使用哪些软件了。通常，UI 主要使用的设计软件包含 PS、AI、Sketch、XD 四款，理论上，它们都包含了图标绘制的功能，下面介绍这四款软件对于图标设计的优劣，以及需要掌握的部分。</p>\n<!-- more -->\n<figure><figcaption>使用软件</figcaption></figure>\n<h2>Sketch / XD</h2>\n<p>这两款软件是设计 UI 界面的主力。但大家一定要记得，它们主要的功能是用来完成 UI 界面元素的排版，而不是创作和绘图。</p>\n<p>虽然它们都包含路径、钢笔、布尔运算等功能(Sketch 相对 XD 更完善一点)，想要绘制一些非常基础的线性或面性图标时没有问题，但只要涉及到比较复杂的图形，往往就束手无策。</p>\n<p>所以，建议新手都不要从这两个软件中入手，而是先掌握 PS 和 AI，后面想要快速实现一些简单的图标时，自然懂得如何使用 Sketch 和 XD。</p>\n<p>可以说，PS 和 AI 的应用决定了我们图标设计的上限，而 Sketch 和 XD 是下限，所以，把上限拓展得越高越好。</p>\n<h2>Photoshop</h2>\n<p>PS 是一款无论什么东西都设计得出来的设计软件，但是，它本质上是一款「位图软件」。后续的文章中会提及，在界面中采用矢量格式的图标是最理想的，而 PS 针对矢量的操作并不便捷，比如将矢量图层复制到其它软件中。</p>\n<p>实际项目中，会用 PS 设计一些视觉表现相对复杂的图标，例如主体图标、拟物图标、实物图标等等。</p>\n<p>绘制图标需要用到的 PS 功能并不太多，需要在前期学习这个软件的过程中加以筛选，重点是以下知识点:</p>\n<ul>\n<li>路径创建和调整</li>\n<li>钢笔工具和锚点</li>\n<li>路径图层</li>\n<li>布尔运算</li>\n<li>图层属性</li>\n</ul>\n<p>虽然 PS 在实际项目中是用来画复杂的图标，但并不妨碍使用 PS 从最基础的图标开始画起，因为想要熟练掌握上方的知识点，简易的工具图标是最好的磨刀石，之后再学习 AI 的操作，就可以更快的上手。</p>\n<h2>Illastrator</h2>\n<p>AI 也是 UI 设计必学的一款软件，它的功能异常丰富，主要用来设计矢量图形。对比 PS，它有更好的矢量操作支持，对于路径细节的调整上，是最全面最细腻的软件，并且 AI 中的图形还可以直接复制粘贴到其它应用的画布中。</p>\n<p>如果掌握了上方提及的 PS 基础，那么学习 AI 也就轻松了不少，其中，AI 设计图标中有三个特殊的功能是需要重点掌握和学习的:</p>\n<ul>\n<li>形状生成器</li>\n<li>轮廓化描边</li>\n<li>路径查找器</li>\n</ul>\n<h2>总结</h2>\n<p>优先学习 PS、AI 的路径相关功能，而不是 Sketch 和 XD。</p>\n",
      "date_published": "2020-09-13T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "启动图标设计指南",
      "url": "https://blog.tlcsdm.com/design/icon/start.html",
      "id": "https://blog.tlcsdm.com/design/icon/start.html",
      "summary": "想要在启动图标设计上入门，就要先从规范开始学习，然后了解不同的风格以及对应风格的设计过程。 启动图标的设计规范 说到启动图标的规范，首先会想到的，就是 iOS 提供的图标栅格。通过这个栅格，会规范图形的尺寸，以及所处的位置。 iOS 提供的图标栅格iOS 提供的图标栅格 这个模板和工具图标的使用方法类似，我们在后面的案例进一步讲解。接着，来说明一个更重...",
      "content_html": "<p>想要在启动图标设计上入门，就要先从规范开始学习，然后了解不同的风格以及对应风格的设计过程。</p>\n<h2>启动图标的设计规范</h2>\n<p>说到启动图标的规范，首先会想到的，就是 iOS 提供的图标栅格。通过这个栅格，会规范图形的尺寸，以及所处的位置。</p>\n<figure><figcaption>iOS 提供的图标栅格</figcaption></figure>\n<p>这个模板和工具图标的使用方法类似，我们在后面的案例进一步讲解。接着，来说明一个更重要的问题，就是启动图标画布的尺寸。</p>\n<p>默认的情况下，我们使用 1024×1024 尺寸来设计启动图标，这个参数在 iOS 和 Android 中都适用。</p>\n<p>之所以使用这么大的尺寸，是由屏幕分辨率的差异和使用场景导致的。</p>\n<p>第一，在手机硬件中，根据屏幕规格的不同，展示图标的实际像素量也不同，即图标的尺寸会发生改变。</p>\n<p>例如在 1x 的屏幕中，图标使用 60x60px；在 2x 的屏幕中，就使用 120x120pt；3x 则是 180×180。</p>\n<figure><figcaption>不同的图标大小</figcaption></figure>\n<p>第二，不同设备和显示场景里，应用的图标尺寸也不一样。对于一个真实的项目来说，图标不是只放在手机上运行，无论是 iOS 还是 Android 的 APP 都可以在 PAD 上安装，图标尺寸规格就不同。并且，在网页或者手机应用商店里，也需要展示启动图标，显示的规格和真实应用列表中又不同。</p>\n<figure><figcaption>不同的图标大小</figcaption></figure>\n<p>所以，在 iOS 官方的图标模板中，我们会看见里面罗列了非常多的图标尺寸，我们只需要设计第一个 1024 规格的，将这个图标置入到 PS 的智能对象，或者 Sketch 的 Symbol 中，就可以一次性生成所有尺寸，不需要我们自己手动调整各种规格的图标输出。</p>\n<figure><figcaption>不同图标生成</figcaption></figure>\n<p>应该有同学这时候还会产生疑问，模板里的画布就是一个正方形，但是大多数手机的 启动图标使用的是圆角，所以，应该如何制作这个圆角，以及它的相关参数呢?</p>\n<p>真实项目中，除非项目的特定要求，只需要提交正方形的图形即可，之后无论是 APP Store，还是多数安卓应用商店，都会「自动」对该图形进行裁切，生成符合自己系统的圆角图标。</p>\n<figure><figcaption>图表的剪切</figcaption></figure>\n<p>如果我们想要设计出正方形图形后预览真实的效果，就可以用我们准备的 PSD 模板，将正方形置入到模板中即可。</p>\n<figure><figcaption>启动图标模板</figcaption></figure>\n<p>在设计已经确认以后，我们就要导出这些图标。因为启动图标有很多拟物的设计或会使用真实的摄影素材，所以应用商店提交的格式会选用位图格式而不是矢量格式，所以导出启动图标，只需要导出对应尺寸的 PNG 即可。</p>\n<h2>启动图标的设计演示</h2>\n<h3>图标形式</h3>\n<figure><figcaption>图标形式</figcaption></figure>\n<p>在一些比较基础的应用类型中，通常会直接使用工具图标的图形设计启动图标。因为基础的 APP 服务大多有表意极其清晰的工具图标与之对应，例如邮箱、计算器、音乐、地图等类型应用，企业往往在使用一些抽象的品牌化图形与表意更清晰的工具图标中选择后者。</p>\n<p>工具图标的设计其实很简单，就是在画板中完成两种元素的设计，一个是背景，一个是上方图标。</p>\n<p>背景的设计，比较常见的有两种类型，纯色、渐变。而上方图标的设计里，包含的类型就是我们前面讲过的几种常见的工具图标。所以您看，只要将它们组合，就可以很轻松地设计出符合主流特征的启动图标。</p>\n<figure><figcaption>APP 组合</figcaption></figure>\n<p>所以，如果我们要设计一款笔记应用，那么就可以先画一个线性的笔记图标，然后再将它置入格线模板中确认大小，再分别为它们上色，就可以完成设计了。</p>\n<h3>文字形式</h3>\n<figure><figcaption>文字形式</figcaption></figure>\n<p>文字形式的设计，背景和上方一样，也只使用纯色和渐变，但这种设计的主要难点在于字体的设计上。</p>\n<p>想要放文字，大家首先想到的肯定是直接用字体打进去，但是切记，字体的商业版权问题是不能视而不见的。选择字体前，一定要关注该字体是否是免费的，百度或者官网都可以查询。或者一开始就在免费字库中挑选，如思源黑、思源宋、王汉宗系列等等。</p>\n<p>如果觉得直接使用字库文字太没有设计感，那可以选择做一次字体的二次创作，对于新手来说简单一点。即一开始挑选一个合适的字体，然后在 AI 中对该字体进行临摹，再对细节进行重新加工，比如衬线的调整，笔画粗细的调整等等。</p>\n<p>比如要设计一个我的应用，那么我可以取「超级帅的 Mr.Hope」的第一个字 ── 超，作为图标上方的文字。然后我选用「方正兰亭大黑」作为基础字形，对它进行重构即可。</p>\n<figure><figcaption>字体设计</figcaption></figure>\n<p>最后建议，如果不是一些比较严肃或是传统的题材，尽量不要选用宋体或是楷体进行设计。</p>\n<h3>拟物形式</h3>\n<figure><figcaption>拟物形式</figcaption></figure>\n<p>虽然现在整体设计环境中，拟物已经被扁平取代，但不代表它已经消失，或是在形式上不合理。适当的拟物设计会让我们对应用功能的认识更清晰，且更有趣味性。</p>\n<p>还是老惯例，我们从简单的拟物设计入手。目前拟物的领域中，使用最普遍的风格也是新手最容易学习的风格，即「轻拟物」的设计。这种风格需要刻画的细节相对较少，更易于我们掌握，只要能用好渐变即可。</p>\n<p>比如，iOS 的官方应用 ── 文件，图标的形式就符合轻拟物的特征。简单分析一遍，即在确定完轮廓后，通过渐变填充来表示物体本身的高光和阴影，并添加投影来制造立体感。</p>\n<figure><figcaption>iOS 文件设计</figcaption></figure>\n<p>如果要设计一些更复杂的拟物图形，可以通过多做拟物图标的练习会更有帮助。在今天扁平化图形当道的环境中，设计得精良的拟物图标往往可以在满屏的扁平图标中脱颖而出，助于吸引用户启动应用。</p>\n<h2>小结</h2>\n<p>启动图标的介绍到这里就结束了，新手该掌握的知识点并不多。无论是更好的字体、图案、插画，都已经进入 LOGO 设计的范畴。如果要在这个领域进一步提升，那么针对性训练的效果反而不理想，需要长期积累视觉、图形的整体设计能力。</p>\n",
      "date_published": "2020-09-14T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "图标种类",
      "url": "https://blog.tlcsdm.com/design/icon/type.html",
      "id": "https://blog.tlcsdm.com/design/icon/type.html",
      "summary": "设计图标可以划分成三种大类: 工具图标 装饰图标 主体图标 下面将对它们分别进行介绍，以及展示相关的设计类型。",
      "content_html": "<p>设计图标可以划分成三种大类:</p>\n<ul>\n<li>工具图标</li>\n<li>装饰图标</li>\n<li>主体图标</li>\n</ul>\n<p>下面将对它们分别进行介绍，以及展示相关的设计类型。</p>\n<!-- more -->\n<h2>工具图标</h2>\n<p>工具图标是在日常讨论中提及最频繁的图标类型，即应用内有明确功能、提示含义的标识。</p>\n<figure><figcaption>常见的工具图标</figcaption></figure>\n<p>虽然理解起来容易，但是它所包含的设计样式却并不少，可以把它们归纳成线性、面性两个大类，再分别进行细分。</p>\n<h3>线性风格</h3>\n<p>线性图标，即图形是通过线条的描边轮廓勾勒出来的。多数人对它样式认识的第一反应应该是使用纯色的闭合轮廓，比如上图案例，线性图标的创作空间看似不多，但实际上有非常多的调整空间。</p>\n<p>下面我们把它们罗列出来。</p>\n<figure><figcaption>线性风格的工具图标</figcaption></figure>\n<h3>面性风格</h3>\n<p>面性图标，即使用对内容区域进行色彩填充的图标样式。同样，在这类图标中，也不是只能应用纯色的方式进行填充，还有非常多的视觉表现类型。</p>\n<figure><figcaption>面性风格的工具图标</figcaption></figure>\n<h3>混合风格</h3>\n<p>当然，在设计图标类型的时候，也不一定非线性和面性不可，有一些热衷创造和尝试的设计师，还创作出了混合型的图标，既有线性描边的轮廓，又有色彩填充的区域。常见的样式类型如下:</p>\n<figure><figcaption>混合风格的工具图标</figcaption></figure>\n<h2>装饰图标</h2>\n<p>和工具图标比起来，装饰图标的视觉性作用更多。对于一些比较复杂的应用来说，过分的简约并不能弥补信息过多的信噪问题，那么要通过丰富视觉体验的方法来增加内容的观赏性，减少一屏内显示内容的数量。</p>\n<p>比如在分类列表里，是可以只使用线框和文字把大量内容浓缩到一屏以内，但实际浏览效率并不会增加，而且并不美观。</p>\n<figure><figcaption>装饰图标在识别性上的作用</figcaption></figure>\n<p>还有就是国内的界面设计环境，会根据运营需求设计进行特殊化处理，尤其在电商领域，首屏的图标都会改成首页风格的样式，增加活动氛围。</p>\n<figure><figcaption>节日活动中的装饰图标</figcaption></figure>\n<p>装饰性的图标设计，虽然没有明确的规范该怎么做，效果怎么好怎么来，但最常见的类型有四种，下面分别进行介绍。</p>\n<h3>扁平风格</h3>\n<p>扁平风格的装饰图标，通常可以理解成是用扁平插画的方式画出来的图标，除了继承扁平的纯色填充特性以外，也比普通图标有更丰富的细节与趣味性。</p>\n<figure><figcaption>扁平风格的装饰图标</figcaption></figure>\n<h3>拟物风格</h3>\n<p>拟物风格的图标现在出现的频率越来越高，集中在大型的运营活动中，通常这些活动会通过拟物的方式将头部设计成有故事性的场景，所以自然顶部的相关图标使用拟物的设计形式会更贴合。</p>\n<figure><figcaption>拟物风格的装饰图标</figcaption></figure>\n<h3>2.5D 风格</h3>\n<p>2.5D 是一种偏卡通、像素画风格的扁平设计类型，在一些非必要的设计环境中，使用 2.5D 会比较容易搭配主流的界面设计风格，有更强的趣味性和层次感。</p>\n<figure><figcaption>2.5D风格的装饰图标</figcaption></figure>\n<h3>炫彩渐变</h3>\n<p>这是一个拗口的原创名词，找不到更合适的形容，还是觉得浮夸点符合它的气质。这种图标，就是通过一系列非常激进的渐变和撞色实现，通常还会使用彩色的阴影。</p>\n<p>使用这样图标的区域，通常都会呈现出一副五彩斑斓的景象，只有在内容非常丰富且用户偏向年轻化的产品中可以使用，是一种非常难驾驭的设计风格。</p>\n<figure><figcaption>炫彩渐变风格的装饰图标</figcaption></figure>\n<h3>实物贴图</h3>\n<p>采用真实摄影物体的设计风格。它不完全依靠创作和绘制。</p>\n<figure><figcaption>应用摄影实物的装饰图标</figcaption></figure>\n<h2>主体图标</h2>\n<p>主体图标的设计比前面两种类型的图标说起来更难，因为它实际上就是把「LOGO 嵌套进系统图标模版」的图标。</p>\n<p>除了掌握必要的规范以外，主体图标的主体物设计就是 LOGO 的设计。</p>\n<h3>文字形式</h3>\n<p>使用了文字作为图标主体物的类型，通常是这类应用本身的品牌 LOGO 就使用了文字，所以这里就把字体照搬过来。</p>\n<figure><figcaption>文字类的主体图标</figcaption></figure>\n<h3>图标形式</h3>\n<p>对于一些偏工具，适合用简单图形传达应用功能的主体图标，就会采取使用工具图标的方式设计。</p>\n<figure><figcaption>图标类的主体图标</figcaption></figure>\n<h3>图形图标</h3>\n<p>图形形式看起来和图标形式很接近，但实际上完全不属于同一类型，之所以它不是图标，是因为这类图标的主体图形是一种经过高度抽象化的标识，传达的是品牌性，而不是图形的含义。</p>\n<figure><figcaption>图形类的主体图标</figcaption></figure>\n<h3>插画形式</h3>\n<p>对于一些比较纯粹的应用，如读本、漫画、幼儿类应用，就热衷于采用卡通形象作为图标的主体进行设计。</p>\n<figure><figcaption>插画类的主体图标</figcaption></figure>\n<h3>拟物形式</h3>\n<p>虽然现在扁平化的设计占据主导地位，但依旧有很多应用的主体图标是通过拟物的方式设计的。因为对于这些应用来说，拟物设计所传递的信息往往更直观和准确。</p>\n<figure><figcaption>拟物类的主体图标</figcaption></figure>\n",
      "date_published": "2020-09-13T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "交互设计",
      "url": "https://blog.tlcsdm.com/design/interact/",
      "id": "https://blog.tlcsdm.com/design/interact/",
      "summary": "文章列表",
      "content_html": "<h2>文章列表</h2>\n<ul>\n<li>\n<p><a href=\"/design/interact/search.html\" target=\"_blank\">搜索框</a></p>\n</li>\n<li>\n<p><a href=\"/design/interact/text-field.html\" target=\"_blank\">文本框</a></p>\n</li>\n</ul>\n",
      "date_published": "2020-09-26T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "搜索框设计",
      "url": "https://blog.tlcsdm.com/design/interact/search.html",
      "id": "https://blog.tlcsdm.com/design/interact/search.html",
      "summary": "搜索框是我们最常用到的 UI 控件之一，它几乎存在于所有的网站和 APP 当中。许多人认为搜索框不需要设计，因为它似乎就是由两个最简单的元素构成的。在以内容为导向的网站中，搜索框的重要性会相对更明显，用户需要快速又无痛地找到他们想要的内容。而对于设计相对负责的网站而言，这个需求尤其明显。搜索框的可用性设计，是整个设计的关键，也就是如何让用户尽量节省时间...",
      "content_html": "<p>搜索框是我们最常用到的 UI 控件之一，它几乎存在于所有的网站和 APP 当中。许多人认为搜索框不需要设计，因为它似乎就是由两个最简单的元素构成的。在以内容为导向的网站中，搜索框的重要性会相对更明显，用户需要快速又无痛地找到他们想要的内容。而对于设计相对负责的网站而言，这个需求尤其明显。搜索框的可用性设计，是整个设计的关键，也就是如何让用户尽量节省时间，搜到他们想要的内容。</p>\n<h2>使用放大镜图标</h2>\n<p>时至今日，搜索的概念和放大镜图标之间的关系已经深入人心，根深蒂固了。在日常最常用、最易于识别的几个图标当中，放大镜所带代表的搜索图标就是其中之一。</p>\n<figure><figcaption>放大镜图标</figcaption></figure>\n<p>即使在没有文本标签标识的情况下，用户也能轻松地识别图标的含义。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>使用最简略直观的放大镜图标，细节越少，越容易识别。</p>\n</div>\n<h2>显眼的搜索输入框</h2>\n<p>如果搜索是您的网站或者 APP 的重要功能的话，您应当让搜索框足够显眼，这样的能设计让用户最快发现它的存在。</p>\n<figure><figcaption>显眼的搜索输入框</figcaption></figure>\n<p>左边: 搜索功能隐藏在图标之后</p>\n<p>显示完整的文本输入框是很重要的，隐藏在按钮背后的输入框会让用户觉得不是那么明显，不容易被快速发现。需要点击之后用户才能看到。</p>\n<figure><figcaption>使用图标的搜索框</figcaption></figure>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>由于博客新用户通常会浏览博客的大致内容，而不会有目的性的搜索，所以移动视图下，博客的搜索也采用了这种设计</p>\n</div>\n<h2>提供搜索按钮</h2>\n<p>按钮的存在让用户能够明白搜索的触发方式——也就是说通过触发按钮来完成这一操作。</p>\n<figure><figcaption>3、提供搜索按钮</figcaption></figure>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">有效的建议</p>\n<p>本博客由于采用了即时搜索，也就是会实时显示输入的搜索结果，所以并没有设置这个按钮</p>\n<ul>\n<li>控制搜索按钮的尺寸大小，让用户使用光标可以轻松找到并点击，让触发区域大小合适。</li>\n<li>让用户可以通过回车键提交搜索，许多用户仍然有通过点击键盘按键来触发搜索的习惯。</li>\n</ul>\n</div>\n<h2>每页都保留搜索输入框</h2>\n<p>您应该为用户拥有在每个页面都能立刻进行搜索的权限，如果您的用户在特定的页面找不到他们想要的内容，可以立刻通过搜索获取内容，无论他在网站的哪个地方。</p>\n<h2>让搜索框尽量简单</h2>\n<p>在您设计搜索框的时候，请尽量让它看起来就是一个搜索框，并且简单易用。可用性研究表明，默认没有显示高级选项的搜索框看起来更加友好，所以，通常情况下给用户提供的搜索框最好不要提供进阶的搜索选项。</p>\n<figure><figcaption>这可能会让新用户很困扰</figcaption></figure>\n<h2>让搜索框处于用户预期的位置</h2>\n<p>当用户想要搜索内容的时候还需要花费精力来寻找搜索框，这就非常尴尬了。这意味着搜索框本身就不容易被察觉。</p>\n<p>下面这个图表来自 A. Dawn Shaikh 和 Keisi Lenz 的一项研究，它展示出了 142 名被调查者对于网站的搜索框的预期的位置。这项研究表明，网站的左上角和右上角是用户所期待的搜索框的位置，用户在使用 F 型扫视法查看内容的时候，可以轻松找到搜索框。</p>\n<figure><figcaption>搜索框位置</figcaption></figure>\n<p>这份研究还表明，右上角的区域是用户搜寻输入框的首选区域。</p>\n<p>因此，将输入框置于顶部靠右或者顶部居中的位置，用户会主动在这个地方寻找搜索框。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>本博客主题在 Desktop 模式下搜索栏即为居中设计，移动视图下置于右上角</p>\n<ul>\n<li>在理想情况下，搜索框的设计应当和整个网站的设计风格保持一致，同时在视觉上要略显突出，便于用户发觉它的存在。</li>\n<li>如果网站的内容足够多，搜索框在设计上显著程度应该越高，如果搜索功能对于您的网站至关重要，那么您应该采用较大的对比度，确保输入框和按钮从背景中脱颖而出。</li>\n</ul>\n</div>\n<h2>合理的输入框尺寸</h2>\n<p>输入框太小是最常见的搜索框设计错素，虽然用户可以输入比输入框更长的内容，但是可见的部分往往无法完全可见，这种设计的可用性并不强。这样的输入框可能因为可视范围的限制，促使用户使用短的、不精确的查询方式，因为更长的内容并不适合阅读。如果输入框能够符合用户的常见输入内容的尺寸来进行匹配，那么它的可用性会更强。</p>\n<p>根据经验，输入框能够承载的最佳字符数量为 27 个，百分之 90 的搜索内容都在这个长度以内。</p>\n<figure><figcaption>合适的输入框长度</figcaption></figure>\n<p>小贴士: 建议考虑使用能根据输入长度增长而能变长的输入框，这不仅节省了屏幕空间，而且能够给予用户足够的视觉提示，并快速进入搜索环节。</p>\n<figure><figcaption>长度增长的输入框</figcaption></figure>\n<h2>使用自动搜索建议机制</h2>\n<p>自动建议机制能够帮助用户在输入的过程中，动态地预测正确的查询方向。自动建议并不会加快搜索的过程，但是能够帮助用户构建正确的搜索关键词/内容。普通用户在第一次搜索结果不理想的情况下，很少会继续进行尝试，而自动建议运作顺利的情况下，将会帮助用户更好的搜索。</p>\n<p>谷歌搜索在这方面有着丰富的经验，自 2008 年开始，谷歌开始记录用户的搜索记录，并且通过这种方式节省时间，优化结果，创造更为优秀的体验。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<ul>\n<li>确保您的自动搜索建议是有用的。不当的搜索建议内容可能会混淆和分散用户的注意力。尽量帮助用户更正拼写，识别词根，预测文本，并改进您的工具。</li>\n<li>当用户开始输入之后，尽快开始给予用户建议，例如在第三个字符之后，为用户开始提供即时的、有价值的建议，降低用户的输入难度和工作量。</li>\n<li>尽量为用户提供少于 10 个搜索结果，避免信息过载。</li>\n<li>允许使用键盘进行交互，当用户使用方向键向下滚动到最后的条目之后，继续滚动会跳转到顶部的项目。允许用户使用 Esc 按键推出列表。</li>\n<li>突出显示输入的信息和建议的信息之间的差异。</li>\n</ul>\n</div>\n<figure><figcaption>自动搜索建议</figcaption></figure>\n<h2>让用户明白哪些可以搜索到</h2>\n<p>最好是在输入框中包含示例，这样可以向用户给予建议。如果用户可以输入多个关键词搜索，那么可以像下面的 IMDB 的网站一样给予建议。HTML5 可以轻松的实现在输入框内加入文本占位符。</p>\n<figure><figcaption>搜索建议</figcaption></figure>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>建议的内容不宜过多，否则施加太多认知负荷给用户。</p>\n</div>\n",
      "date_published": "2020-09-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "文本框设计",
      "url": "https://blog.tlcsdm.com/design/interact/text-field.html",
      "id": "https://blog.tlcsdm.com/design/interact/text-field.html",
      "summary": "文本框的出现几乎可以追溯到可视化交互诞生的源头，是一个再经典不过的「鼻祖」控件了。我们每天都在和文本框打交道，不论您是产品设计者还是用户。 文本框的拆解 文本框(Text Fields)根据 Material Design 指导规范，被拆解为七个部分。分别是: 文本框的拆解文本框的拆解 容器(Container) 前导图标(Leading icon) ...",
      "content_html": "<p>文本框的出现几乎可以追溯到可视化交互诞生的源头，是一个再经典不过的「鼻祖」控件了。我们每天都在和文本框打交道，不论您是产品设计者还是用户。</p>\n<h2>文本框的拆解</h2>\n<p>文本框(Text Fields)根据 Material Design 指导规范，被拆解为七个部分。分别是:</p>\n<figure><figcaption>文本框的拆解</figcaption></figure>\n<ul>\n<li>容器(Container)</li>\n<li>前导图标(Leading icon)</li>\n<li>标签文本(Label text)</li>\n<li>输入文本(Input text)</li>\n<li>尾随图标(Trailing icon)</li>\n<li>激活指示器(Activation indicator)</li>\n<li>帮助文本(Helper text)</li>\n</ul>\n<p>当然，MD 为我们展示的是已经经过其团队长期摸索之后，基于其平台规范下的标准样式。想要探索文本框的交互演变，我们还是要回溯到文本框最初的模样。</p>\n<figure><figcaption>文本框基础样式</figcaption></figure>\n<p>这就是一个文本框最基础的样式了， 一个标签文本+容器，已经基本可以确保向用户传递文本框最直观的信息。</p>\n<p>但如今的文本框已经演变出了形形色色的样式和交互形式，究竟 MD 的文本框是如何演变到今天这番样子?</p>\n<h2>基础的文本框布局方式</h2>\n<p>激励设计师不停探索文本框新的交互形式的根本原因之一，一定包含总让人头疼的排版问题。在解决了基本视觉问题之后，才是思考如何设计文本框来 提升用户的填写和使用效率。</p>\n<p>例如前面我们所看到的最基础的文本框样式，如果简单地进行单列布局，自然而然会出现让众多设计师纠结的一个问题: 标签文本究竟应该如何对齐?</p>\n<figure><figcaption>文本框对齐</figcaption></figure>\n<p>如果标签文本采用右对齐，标签文本的长短问题容易导致左侧的视觉隐形边界错乱，用户的规律眼动容易被打乱；</p>\n<p>如果标签文本采用左对齐，文本的长短问题又会导致部分较短标签文本与容器间距增大，让用户从左至右浏览的效率降低，并且看起来不够协调。</p>\n<p>于是乎文本框的布局方式有了进一步的演变: 标签文本与容器顶端对齐。</p>\n<figure><figcaption>文本框对齐</figcaption></figure>\n<p>顶端对齐的方式使得用户眼动变得十分规律，竖直向下浏览可以便捷地理解标签文本并进行填写，文本的长短问题不再成为干扰设计师进行排版的一个纠结点。</p>\n<p>但纵向布局的的方式只是把问题迁移到了另一个维度，那就是在表单数据量过多时，纵向布局会使得纵向空间耗损增加，用户需要不停地滑动页面才能实现表单的完整填写。</p>\n<p>所以，文本框的布局需要多方位评估标签文本长度、表单数据量等问题，才能对具体场景进行有效设计。</p>\n<h2>文本框的改良</h2>\n<p>当文本框横向布局或是纵向布局都很难解决具体场景问题的时候，更新颖的文本框交互形式就出现了。</p>\n<p>最初的演变形式是众多的应用开始采用前导图标来替代标签文本，使用图标可以有效地解决标签文本导致的排版错落问题。</p>\n<figure><figcaption>图标提示</figcaption></figure>\n<p>这种方案在轻量表单中较为常见，一般都是在表单内容少、用户对于场景的熟悉度较高的情景当中(例如登录场景)。</p>\n<p>因为每个用户对于图标的认知性存在差异，在生疏场景或表单内容过多的情况下，图标容易导致用户对文本框信息产生更多的认知成本。所以用图标来代替标签文本的普适性其实并不高。</p>\n<p>于是后来 iOS 人机交互规范 和 MD 规范 都给设计师提出了一条指导建议: 当占位符字段中不包含必要内容时，可以合理地使用占位符来承载标签文本。</p>\n<p>例如 iOS 通讯录新增联系人，就采用了占位符承载标签文本的方式。</p>\n<figure><figcaption>iOS 占位符提示</figcaption></figure>\n<p>但这种形式同样也存在一个弊端: 用户一旦输入内容之后，占位符就被内容文本填充覆盖了，有时用户会忘记所填写的信息是关于什么内容，必须要清空文本进行重新确认。对于表单内容繁多或重要内容需要谨慎填写的场景，这样的交互其实还是有一些不妥。</p>\n<p>于是乎，类似 MD 的指导规范下这样普适性较高的文本框形式就诞生了。采用占位符承载标签文本，并且在用户填写信息时，标签文本始终可见，由占位符转移到文本框顶部。</p>\n<figure><figcaption>MD 标签</figcaption></figure>\n<p>这一文本框交互形式的诞生，不论是对于排版空间的节省、遵循用户眼动习惯、微动效提升文本框趣味性等方面，都得到了一定提升。并且许多应用开始进行借鉴效仿。</p>\n<p>其实像以上这种巧用占位符的场景已经越来越常见了，占位符已经不再仅仅用来承载无用信息或提示性信息，也可以用于承载 默认值，帮助用户自动填充， 提高用户填写信息的效率(例如手游当中，创建账号时系统帮玩家默认填充一个可用昵称)。</p>\n<p>但填充默认值的手法也不仅仅局限于提升用户体验和填写效率，甚至也被运用到了一些商业场景中。</p>\n<p>例如淘宝、京东等电商平台，将商品名称作为占位符填充在搜索栏中，一方面给所推荐商品增加了曝光；另一方面，在用户直接点击搜索时，将会以当前占位符内容进行搜索，达到为所推荐商品引流的效果。</p>\n<figure><figcaption>引流</figcaption></figure>\n<h2>合理的反馈</h2>\n<p>合理的反馈机制对于提升用户填写文本框效率也起着重要的作用，MD 规范中的帮助文本不仅仅是告诉设计者可以用于指导用户该如何正确填写文本框信息，也为反馈提示提供了展示空间。</p>\n<p>MD 的反馈状态可以归纳为以下几种:</p>\n<figure><figcaption>反馈</figcaption></figure>\n<p>在这里我大概总结了一下文本框的负反馈提示信息，希望在您设计表单的时候，能够帮助到您对负反馈提示状态进行走查(可能不全，欢迎补充):</p>\n<ul>\n<li>内容是否为空(例: 必填项不能为空)</li>\n<li>二次确认内容是否一致(例: 确认密码与首次输入不一致)</li>\n<li>内容是否合规 (例: 昵称中包含不文明词语)</li>\n<li>内容格式是否合规(例: 昵称中不能包含特殊字符)</li>\n<li>内容长度是否合规(例: 手机号输入不足 11 位)</li>\n<li>内容的是否符合唯一性(例: 验证码输入错误)</li>\n</ul>\n<p>及时给予用户负反馈，可以让用户清晰地排查所发生的错误。但交互设计讲究「以人为本」，在某些场景中，当用户所填写的信息是合理的，及时地展示 正向反馈也是有必要的。</p>\n<p>例如，部分应用在用户创建账号的场景中，当用户输入账号信息后，系统将立刻检索用户的账号是否已存在在当前数据库中，避免用户忘记已创建过该账号而进行重复创建的徒劳步骤。</p>\n<figure><figcaption>反馈</figcaption></figure>\n<p>所以不要狭隘地认为 MD 所给到的帮助文本只能用于「批评」用户(负反馈)， 当用户做了正确的事时，也应该适当地激励用户，这也正符合了尼尔森可见性原则。</p>\n",
      "date_published": "2020-09-26T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "导航设计教程",
      "url": "https://blog.tlcsdm.com/design/navigation/",
      "id": "https://blog.tlcsdm.com/design/navigation/",
      "summary": "目录",
      "content_html": "<h2>目录</h2>\n<ul>\n<li>\n<p><a href=\"/design/navigation/intro.html\" target=\"_blank\">导航设计介绍</a></p>\n</li>\n<li>\n<p><a href=\"/design/navigation/navbar.html\" target=\"_blank\">导航栏概述与设计方式</a></p>\n</li>\n<li>\n<p><a href=\"/design/navigation/navbar-design.html\" target=\"_blank\">导航栏设计技巧</a></p>\n</li>\n<li>\n<p><a href=\"/design/navigation/sidebar-navigate.html\" target=\"_blank\">侧边导航设计</a></p>\n</li>\n<li>\n<p><a href=\"/design/navigation/tabbar.html\" target=\"_blank\">标签导航设计</a></p>\n</li>\n<li>\n<p><a href=\"/design/navigation/tabbar-design.html\" target=\"_blank\">标签导航设计技巧</a></p>\n</li>\n</ul>\n",
      "date_published": "2020-09-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "导航设计介绍",
      "url": "https://blog.tlcsdm.com/design/navigation/intro.html",
      "id": "https://blog.tlcsdm.com/design/navigation/intro.html",
      "summary": "其实网页或者 App 中的导航(Navigation)这个概念远不止我们熟悉的导航栏，而是一个更加广的交互概念: 引导用户和产品进行有效的交互，实现用户的目标。本文将详细地介绍界面的导航设计。 一个网页或 App 产品要想有很好的可用性(usability)，需要做好的最基本的一点是导航的设计或者说引导用户的设计。如果用户在使用一个网站或者 App 的...",
      "content_html": "<p>其实网页或者 App 中的导航(Navigation)这个概念远不止我们熟悉的导航栏，而是一个更加广的交互概念: 引导用户和产品进行有效的交互，实现用户的目标。本文将详细地介绍界面的导航设计。</p>\n<p>一个网页或 App 产品要想有很好的可用性(usability)，需要做好的最基本的一点是导航的设计或者说引导用户的设计。如果用户在使用一个网站或者 App 的时候找不到自己的处在什么位置或者该怎么去到想要的页面，那么视觉效果再怎么有创意或者抓人眼球都无法弥补产品的缺陷。无论您的产品想满足用户什么需求，让用户知道产品当下的状态和每一步操作之后的结果是对用户最基本的尊重。</p>\n<h2>导航</h2>\n<p>首先，让我们弄清楚导航这个概念。最基本的含义就是在我们的现实世界中，当我们从一个地方到另一个地方，需要一些引导和指示。英文中 Navigation 这个词来源于拉丁文，原意就是: 操纵船只在海上航行。所以导航就是能够帮助我们到达目的地的行为。导航的其他意思都是建立在这个原意的基础上。</p>\n<p>所以回到 UX／UI 设计上，导航毫无疑问是可用性的一个要点。它可以定义为一系列引导用户成功地与产品互动并且实现他们目标的动作组合或者技巧组合。用户带着他们的期望和目标来使用您的网站或者产品，作为设计师的您需要给他们提供实现他们目标的最好操作流程。因此当您的导航设计得非常高效，用户体验能得到极大的提升。</p>\n<p>界面的导航(Navigation)是用户体验设计的核心之一。毫无疑问，如果您看不到路, 您就去不了您的目的地。用户现在正面对着越来越多的网站和 APP 产品。越来越多的选择会让用户期望这些产品具备符合他们使用习惯的导航设计。</p>\n<p>在您刚开始设计您的界面时，就要思考怎么设计一个有效的无缝衔接的导航。通过一些可交互的元素，比如按钮(buttons)，开关(switches)，链接(links)，标签(tabs)，条(bas)，菜单(menus)，区域(fields)，让用户在不同的界面之间进行切换。</p>\n<p>工作室的设计思路是，在界面设计的早期就全面地思考导航的设计，包括界面的布局，页面间如何切换，导航元素的放置和具体功能。并且通过低保真原型来进行验证，保证用户能清楚地理解所有重要的操作。如果跳过这一步，设计将有巨大的风险，其他事情有可能到头来都白干了。所以无论，对用户还是客户还是设计团队来讲，做好这最基础的部分是非常有好处的。</p>\n<h2>菜单(Menu)</h2>\n<p>菜单是我们最熟悉的具备导航功能的元素，它向用户展示了界面的所有重要选项。基本上，它可以是用动词命名的一系列指令，用户可以用它来指示系统做出动作，像保存，删除等；它也可以是一个用名词命名的目录，用来代表不同内容的集合。</p>\n<p>在界面设计中菜单可以放在不同的位置(侧边菜单，顶部菜单，底部菜单等)，拥有不同的交互和视觉形式(下拉菜单，上拉菜单，滑动菜单等)。要想设计好菜单的位置、交互和视觉形式，设计师需要经过全面的用户调查，包括目标用户的预期和要求、接受能力和使用情境。好的菜单设计能让用户更快地实现他们的目标，为用户体验打下坚实的基础。</p>\n<p>博客的界面设计，采用了侧边菜单以及目录的形式，文字直接说明内容，再加上图标来做为辅助的视觉说明。</p>\n<figure><figcaption>颜色的设计</figcaption></figure>\n<p>这个 UI 概念设计的例子很好的运用了颜色作为标记，这是一种很有效的导航技巧: 每个分类的背景色使用了和目录相同的的颜色，这样目录和内容有着非常强的相关性，用户能自然地将他们联系起来。</p>\n<h2>行为召唤(CTA)</h2>\n<p>CTA 是用户行为召唤的简称(call to action)。CTA 简单来说就是指设计师通过设计，刺激用户去做出一些行动。相应的，CTA 元素就是指那些能刺激用户做出行动的交互元素。典型的 CTA 元素是按钮，标签或者链接。</p>\n<p>不管在什么界面，CTA 元素都是高效的交互行为的核心，极大的关系到产品的可用性和导航有效性。如果 CTA 元素的设计不到位的话，用户会产生困惑并且得费劲地去尝试。产品的转化率和用户体验都会大打折扣。这就是为什么 CTA 元素特别值得注意。无论什么样的界面，它都必须是最瞩目的元素之一，用来直接地告诉用户怎么用这个产品。</p>\n<figure><figcaption>APP 案例</figcaption></figure>\n<p>一些 CTA 元素直接用图标形式而没有任何文字说明，但只适用于大家都熟知其含义的图标，比如听筒图标和信封图标。上图这个例子中，这个听筒图标就是这个界面中一个焦点，是一个典型的 CTA 元素，引导用户快速地实现他们的目标。不需要任何文字说明，用户也能懂点击这个图标的结果。</p>\n<p>但是，如果一个图标的含义不是那么明显或者可能造成误解，最好还是加上文字说明。</p>\n<figure><figcaption>网站着陆页</figcaption></figure>\n<p>上面这个例子是一个关于制作海鲜的网站的着陆页(Landing page)。页面的标题 let’s cook 还有食材照片是一个 CTA，但不是一个可交互的 CTA。可交互的 CTA 是下面这个红色按钮，用户点击这个按钮能看到更多关于不同主题和菜谱的信息。抓人眼球的颜色强调了页面的视觉层级关系，把用户的注意力拉到关键的交互区域中。</p>\n<h2>条(Bar)</h2>\n<p>条(Bar)指的是界面中一组用户可以点击的元素，用来快速与产品进行互动，或者还能让用户知道事件的进程。</p>\n<h3>标签条(Bar)</h3>\n<p>最基本的条是标签条(Tab bars)，常出现在 APP 界面的底部，让用户能在 APP 的不同模块间快速切换。</p>\n<figure><figcaption>Tabbar</figcaption></figure>\n<h3>载入条(Loading bar)</h3>\n<p>载入条是用来告知某个动作的进展，用户可以通过时间、百分比或者其他信息了解整个过程。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>比如本博客在跳转新页面的时候导航栏下方就会出现载入条</p>\n</div>\n<h3>进度条(Progress bar)</h3>\n<p>给用户提供反馈，让他们了解事件的进度，比如说计划的事情完成了多少。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>最常见的就是音乐和视频 APP</p>\n</div>\n<h2>按钮(Button)</h2>\n<p>按钮应该是用得最多的元素了。按钮能让用户在对系统发出指令后得到恰当的反馈。用户通过按钮对系统下命令，跟系统进行交互从而实现他们某个目标，比如发送邮件，买一个东西，下载文件，播放音乐等等这样的指令。按钮之所以那么的常用和对用户那么友好，是因为按钮很好地模仿了人和真实世界里跟物品的交互。</p>\n<p>现如今的 UI 按钮有不计其数的设计样式，能满足很多的设计需求。按钮典型的用途是表明这个地方是可点击，因此需要具有非常高的视觉识别，有着特定的形状还有文字说明它能实现什么动作。设计师通常需要花不少时间好好考虑怎么让按钮很好地融合界面的风格，同时又能在视觉上跳脱出来。</p>\n<figure><figcaption>404 页面</figcaption></figure>\n",
      "date_published": "2020-09-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "导航栏设计技巧",
      "url": "https://blog.tlcsdm.com/design/navigation/navbar-design.html",
      "id": "https://blog.tlcsdm.com/design/navigation/navbar-design.html",
      "summary": "评判导航菜单的设计好坏有多种不同的维度，由于它太过常用，它的好坏并没有得到更多重视。实际上，导航作为网站设计的一个基础组成部分，对于可用性的要求并不低。以下是一些常见的设计技巧。 超大菜单栏 超大菜单栏超大菜单栏 即使许多设计师不喜欢这样的设计，而且从美学的角度上它也是反智的，但是对于许多客户而言，它依然是一个客户反响很好的设计方案。但是这样的设计对于...",
      "content_html": "<p>评判导航菜单的设计好坏有多种不同的维度，由于它太过常用，它的好坏并没有得到更多重视。实际上，导航作为网站设计的一个基础组成部分，对于可用性的要求并不低。以下是一些常见的设计技巧。</p>\n<h2>超大菜单栏</h2>\n<figure><figcaption>超大菜单栏</figcaption></figure>\n<p>即使许多设计师不喜欢这样的设计，而且从美学的角度上它也是反智的，但是对于许多客户而言，它依然是一个客户反响很好的设计方案。但是这样的设计对于用户可能还是有一些困扰，并且没有提供真正有用的功能。</p>\n<p>只有极少数的电商类网站能够真正适合使用超大导航栏的，因为他们确实需要足够的空间来承载大量的导航栏目。不过过大的导航栏可能还是存在一些可用性问题的。</p>\n<p>通常，超大的导航栏存在的主要原因在于，导航栏项目很多难以缩减。这真是一个艰难的决定。对于网站的运营者而言需要仔细考量这件事情，或者通过搜集来的数据来做设计决策的论据。对于特定的内容，许多用户还是倾向于使用搜索来获取，这是毋庸置疑的。</p>\n<h2>加入显眼的搜索框</h2>\n<figure><figcaption>加入显眼的搜索框</figcaption></figure>\n<p>用户常常使用搜索来筛选信息，更快更直接地获取重要的信息，所以，搜索框应该突出展示。它应该出现在每个页面上，应该和主导航栏一起存在，应该够大也易于访问。</p>\n<p>强大的搜索引擎是让用户留存的重要影响因素，当搜索引擎的可用性较差的时候，网站的可访问性会受到影响。网站的页面一次展示的内容是相当有限的，一旦用户在页面中无法直接获取想要的内容，下一步就是考虑借助搜索引擎来达成目标了。</p>\n<p>用户对于搜索的需求是刚性的，不要试图打破这种客观存在的规律，尽量让搜索融入到主导航当中来吧。(确保输入框足够大，可以输入，并且足以一次显示常见的搜索内容)</p>\n<h2>限制导航内条目数量</h2>\n<p>作为设计师，您需要预测用户经常访问的内容，将最重要、最常用到的条目置于导航栏当中。值得一提的是，几乎每个网站的导航中都会包含搜索、关于我们、首页，而电商类网站则通常会包含购物车、购买的按钮。</p>\n<p>但是无论如何，永远将最关键、最重要的导航类目让用户看到，才是导航所应该做到的事情，换句话来说，就是关键内容驱动导航分类。</p>\n<h2>更聪明的导航机制</h2>\n<p>好的导航设计，能让用户能在页面和页面之间合理快速切换，网站不同的内容和功能之间是有一定的自然逻辑的，这个自然逻辑可以作为导航设计的一个重要参考。</p>\n<p>在这个用户体验高度个性化的时代，网页导航的玩法可以更加多样。以 Amazon 为例，当您登录了之后，会发现导航开始围绕着您的信息进行了调整，导航栏从通用的条目变为更贴近您的个人情况的样式，其中包括最近的购买记录，信用额度和 Amazon 的服务信息等。</p>\n<h2>正确地排布导航内的条目</h2>\n<p>导航内的元素的排布顺序和条目内容同样重要。导航栏两头的条目是最引人注意的，并且也通常是用户点击最多的，所以作为设计者，您需要特别注意这些条目的设计。</p>\n<p>对于这一点，还有不少科学研究和理论支持。比如，序列位置效应指的就是人会更容易记住列表的开头和结尾的条目。新近效应说的是用户更容易记住最新看到的条目，而首位效应说的是，相比于列表中间的内容，用户更容易记住列表开头的几个条目。</p>\n<h2>长滚动页面上使用悬浮导航</h2>\n<p>对于长滚动页面而言，导航设计是否可靠是一件颇为重要的事情，无论导航是在顶部、侧边栏还是在底部，它最好能够悬浮置顶，不论用户滚动到哪个地方都时刻存在于界面上。让用户尽量轻松自然地同您的网站进行交互，而不需要费力。交互越是方便，用户便越是会在您的网站中四处探索，自然而然的，用户在网站中停留的时间就越长。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>比如我博客的导航栏就是一个悬浮导航，确保用户可以随时接触到菜单(移动端)和导航栏与搜索框(PC 端)。</p>\n</div>\n<h2>不要隐藏导航</h2>\n<p>超小的汉堡图标，隐藏在页脚、不显眼的链接，或者在长滚动页面中时隐时现的悬浮菜单，都会让用户觉得难以掌控。这些“躲闪”的导航元素让用户难以与之进行交互。相反，时刻存在的导航让用户会更加安心，让用户时刻都拥有离开、跳转的安全通道。</p>\n<h2>使用描述性的标签文本</h2>\n<p>从导航标签到图标，UI 界面中每个交互元素都应该明确的指引用户，告诉他们点击之后会发生什么。像放大镜、购物车这样的拥有普遍认知的图标，应该尽量多用。</p>\n<p>导航栏中每个条目都会有个文本标签，它们会告诉用户这个链接中所包含的内容。这个时候要尽量注意不要使用太过宽泛的描述，比如“服务”或者“产品”，尽量用更精准的描述。</p>\n<h2>尝试全页面导航</h2>\n<figure><figcaption>全页面导航</figcaption></figure>\n<p>导航这件事玩法有很多，如果您真的想做的更醒目一些，不妨采用全页面式的导航，绝对不会让用户错过。</p>\n<p>对于作品集和相对较小的实验性网站，这种非常规的设计有时候能出奇效。</p>\n<h2>垂直导航</h2>\n<figure><figcaption>垂直导航</figcaption></figure>\n<p>垂直导航设计也是目前越来越流行的设计之一。最常见的是垂直导航，是侧边栏导航，它和许多软件的 UI 设计不谋而合。</p>\n<p>侧边栏导航对于如今的许多网站是个合理的选择，尤其是诸如长滚动式的页面。侧边栏导航通常为常驻式的，让用户可以随时定位，快速跳转，并且其中所能承载的元素相对比顶部导航更多。垂直导航尤其要注意条目之间的空间间隔。</p>\n",
      "date_published": "2020-09-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "导航栏设计",
      "url": "https://blog.tlcsdm.com/design/navigation/navbar.html",
      "id": "https://blog.tlcsdm.com/design/navigation/navbar.html",
      "summary": "其实网页或者 App 中的导航(Navigation)这个概念远不止我们熟悉的导航栏，而是一个更加广的交互概念: 引导用户和产品进行有效的交互，实现用户的目标。 导航栏究竟在哪里 导航栏 Navigation Bar，也简称为 Navbar。一定会有不少刚入门的 UI 新人，在诸多的 Bar 控件中，难以区分它所指代的区域。 在 iOS 上，导航栏是指...",
      "content_html": "<p>其实网页或者 App 中的导航(Navigation)这个概念远不止我们熟悉的导航栏，而是一个更加广的交互概念: 引导用户和产品进行有效的交互，实现用户的目标。</p>\n<h2>导航栏究竟在哪里</h2>\n<p>导航栏 Navigation Bar，也简称为 Navbar。一定会有不少刚入门的 UI 新人，在诸多的 Bar 控件中，难以区分它所指代的区域。</p>\n<p>在 iOS 上，导航栏是指显示在应用程序顶部，位于状态栏下方的容器区域，层级应高于当前页面内容。</p>\n<p>在安卓上，Google 公司在 Material Design 中也赋予了它同样的定义，但是却给了它另一个名称，顶部应用栏(Top App Bar)。</p>\n<figure><figcaption>iOS 与安卓的规范与命名区别</figcaption></figure>\n<p>请务必要记住: 导航栏是用于构架当前屏幕的内容，阐述当前屏幕的状态，并且起到连接父子级页面层次结构的作用。所以回到开头的小故事，为什么标签栏不能叫做底部导航，因为标签栏是构架了多个屏幕之间平级页面的内容切换，和「导航」的定义没有关系。</p>\n<h2>规范里告诉我们该怎么做 vs 实际项目我们该怎么做</h2>\n<p>一个基本的导航栏容器一般承载的信息可能会有: 标题、导航按钮、内容控件按钮、其他控件(比如搜索栏、分页标签或分页控件等)，千万别忘了还有分割线。(比如微信的导航栏)</p>\n<h3>导航栏标题</h3>\n<p>时间倒退回 2017 年以前，这时候的移动端规范下的导航栏还是循规蹈矩的，样式单一。但随着 iPhone X 等一系列全面屏手机相继问世后，移动设备在屏幕高度上有了进一步的扩展，界面设计在一屏内的发挥空间也随之增加。iOS11 发布后，大标题导航栏设计风格兴起，随后被引入平台规范。</p>\n<p>于是现在 iOS 与 Material Design 在导航栏上也都定义了两种导航栏标题规范，常规标题与大标题。</p>\n<p>常规标题是指在高度为 88px(iOS@2x 下)的导航容器中，居中放置一个当前页面的标题。标题字号一般为 34px-38px(34px 为 iOS 标准规范，但实际项目中可以尽量在不小于 34px 标准的情况下根据设计需求确定)。</p>\n<figure><figcaption>常规导航不同标题字号的案例及视觉效果</figcaption></figure>\n<p>大标题是将导航栏高增加到 192px(iOS@2x)，保留高度为 88px 的导航容器来承载内容控件按钮，将标题下坠居左。iOS 的标准规范定义大标题的字号为 68px。但由于英文有大小写区分，在视觉上有一定的层次表现，而中文因为缺少一定的层次结构，并且相同字号的中文视觉大小大于英文，所以大多数时候我们在进行大标题设计时，会适当缩小，一般为 56px-64px 居多。</p>\n<figure><figcaption>大标题不同标题字号的案例及视觉效果</figcaption></figure>\n<p>大标题导航栏的优点毋庸置疑，页面留白更多，呼吸感更强，大气现代、格调更高，因为页面标题巨大，能够帮助用户快速确认当前所处位置。采用统一的大标题，让页面布局风格快速统一。但缺点也显而易见，因为增加了导航栏的高度，导致屏幕利用率降低，一些通过广告变现或更加注重一屏内内容呈现的应用便中和了常规导航与大标题导航的优缺点，进行了风格改进。</p>\n<figure><figcaption>改进的大标题案例</figcaption></figure>\n<p>那我们如何在常规标题和大标题之间抉择呢? 这可不单单是设计风格的问题，还受产品定位与功能的影响。苹果的设计师在 Apple Music 中实验并验证了一条结论——在内容非常丰富、层级结构较深的产品当中，大标题能够帮用户快速确认自己的位置。</p>\n<p>所以我理解的适合使用大标题风格的产品一定是: 突出内容呈现而不是功能繁琐的；产品定位更偏向于现代或文艺艺术的；需要快速统一界面风格的。而层级结构需不需要很深，这并不一定，我反而觉得功能越单一、产品体量级越轻的应用，越适合大标题。</p>\n<p>所以如此看来，国内使用大标题成功的案例就为数不多了，这可能与中文字体还有国内 app 产品功能都比较繁琐的原因有关，真正做到了使用大标题快速帮助用户确认自己位置，并且结合了产品特性与风格的，我认为人人都是产品经理的移动端在这方面做得非常棒。</p>\n<h3>导航按钮及内容控件按钮</h3>\n<p>iOS 规定导航按钮位置仅能用于放置返回按钮，可以添加一个层级的面包屑，帮助用户有效地明确当前页面层级；Material Design 中，不仅可以放置返回按钮，还另有作用，菜单图标-用于打开导航抽屉或者关闭图标-关闭工具栏。</p>\n<figure><figcaption>iOS 与安卓的导航按钮区域区别</figcaption></figure>\n<figure><figcaption>iOS 与安卓的导航按钮区域区别</figcaption></figure>\n<p>这一点与 iOS 的定义有着天壤之别，iOS 非常明确地赋予了工具栏的定义，并且将导航栏和工具栏(Toolbars)彻底地分离开，典型案例就是 Safari。</p>\n<figure><figcaption>iOS 明确地将导航栏与工具栏分离开</figcaption></figure>\n<p>在内容控件上 iOS 与 Material Design 也大相径庭，Material Design 不去限制您的内容控件多少，因为它提供了溢出菜单，并可以根据屏宽的变化，自适应释出和收纳溢出菜单中的控件。</p>\n<figure><figcaption>安卓动态调整</figcaption></figure>\n<p>而 iOS 则规定我们，要给内容控件按钮足够多的空间，必要的时候，隐藏导航栏标题也未尝不可。</p>\n<figure><figcaption>iOS 导航栏空间</figcaption></figure>\n<p>那么真实的项目中，我们往往为了快速落地，会存在一稿适配双平台的情况。这时候我们应该遵从哪一个平台的规范呢? 答案是: 许多大厂的做法已经向我们验证，规范不分家。</p>\n<p>在 iOS 诸多的应用中溢出菜单早已普及，尽管这是 Material Design 提出的设计理念。</p>\n<figure><figcaption>Material Design的溢出菜单也被运用在iOS端</figcaption></figure>\n<p>虽然国内遵从 Material Design 进行 Android 应用设计的情况相对较少，但它提供的设计理念与方案却并不局限在安卓平台。</p>\n<h3>分割线</h3>\n<p>分割线只是一种体现形式，我想要表达的是，别忘记区分导航栏与内容界面的视觉层级关系。Matetial Design 提醒我们，顶部应用栏可以与内容位于同一高度，但滚动时，请增加导航栏的视觉高度，让内容在其后方滚动。而 iOS 则默认采用了背景模糊的方式区分了导航栏与内容区域的层级关系。</p>\n<figure><figcaption>区分导航栏与内容区域的层级关系</figcaption></figure>\n<figure><figcaption>区分导航栏与内容区域的层级关系</figcaption></figure>\n<p>缺少视觉分割会让用户分不清导航栏与内容界面，它们看起来会更像一个平级。对用户视觉区分内容主次其实是极不友好的。</p>\n<h3>其他控件</h3>\n<p>关于其他控件，iOS 只在规范中提及到了分页控件。苹果设计师考虑到部分场景在当前页面中还存在信息层级结构划分，此时建议可以在导航栏中使用分段控件。</p>\n<p>但国内的应用程序早已将导航栏容器的作用发挥到极致，基于导航栏层级始终高于内容区域的特性，我们通常可以将分段控件、分页标签、搜索栏等等用户可能随时使用的工具放在导航栏中。</p>\n<figure><figcaption>导航栏通常会承载的其他控件</figcaption></figure>\n<h2>总结</h2>\n<p>导航栏是几乎每一个界面都必定存在的控件，正因为无法轻易删减，逃不掉就必须用好它，不然很容易沦为页面的减分项。</p>\n<p>设计好导航栏不仅仅是视觉上的工作，表现的方式、承载的按钮与组件、滚屏时的组合操作还能给用户带来极大的体验增益。</p>\n",
      "date_published": "2020-09-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "侧边栏导航",
      "url": "https://blog.tlcsdm.com/design/navigation/sidebar-navigate.html",
      "id": "https://blog.tlcsdm.com/design/navigation/sidebar-navigate.html",
      "summary": "厌倦了传统顶部导航的设计师，越来越偏爱侧边栏导航了。这种常见于页面左侧的侧边栏设计，已经成了许多独树一帜的设计师的选择了。 无处不在的侧边栏导航 侧边栏导航和菜单设计的演变有着密不可分的关系。响应式设计的流行使得向移动端偏移的网页设计，不得不采用菜单栏来替代传统的导航模式，其直接的影响就是催生了汉堡图标。 侧边栏导航侧边栏导航 随着汉堡图标的流行，弹出...",
      "content_html": "<p>厌倦了传统顶部导航的设计师，越来越偏爱侧边栏导航了。这种常见于页面左侧的侧边栏设计，已经成了许多独树一帜的设计师的选择了。</p>\n<h2>无处不在的侧边栏导航</h2>\n<p>侧边栏导航和菜单设计的演变有着密不可分的关系。响应式设计的流行使得向移动端偏移的网页设计，不得不采用菜单栏来替代传统的导航模式，其直接的影响就是催生了汉堡图标。</p>\n<figure><figcaption>侧边栏导航</figcaption></figure>\n<p>随着汉堡图标的流行，弹出式的菜单也越发的常见。其中有些菜单是完全开放式的，而有的菜单则带着下拉框，还有一部分直接是弹出的菜单界面。而为了兼容大量的移动端界面，下拉和弹出式的菜单大多采用的是纵向布局——而这和侧边栏的设计，是如此的相似。换句话来说，这种垂直的导航就是一种弹出式的侧边栏导航。</p>\n<p>目前，这种左侧侧边栏导航的设计已经成为一种持续迭代中的设计趋势了。现在我们看到的侧边栏设计，常常使用单一的纯色打底，包含较少(但是重要或常用的)选项，导航栏顶端通常会包含有品牌或者网站 LOGO，文字链接，以及带有小图标的社交媒体帐号的链接。</p>\n<p>想要这种侧边栏设计能够最大化的发挥作用，诀窍在于控制好侧边栏本身和右侧网站内容的对比度，它要包含足够清晰可见的导航条目，还要能在移动端上良好地运作。</p>\n<p>还有一点值得一提: 不要因为屏幕侧边够长，就试图用链接和内容将侧边栏填满。留白是完全可以接受的，在简约之风大行其道的今天，尽量只保留必须的内容，让留白来凸显它们，才是合乎道理又符合趋势的设计。今天的文章中的许多优质案例，都遵循着这样的设计逻辑。</p>\n<h2>侧边栏导航的优点</h2>\n<p>侧边栏导航的美学特征是毋庸置疑的。它在互联网存在的早期就已经存在，在软件的 GUI 设计中常常可以看到，但是在今天它仍然以一种时尚而前卫的姿态出现。</p>\n<figure><figcaption>侧边栏导航示意图</figcaption></figure>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">侧边栏导航的优点</p>\n<ul>\n<li>侧边栏导航通常位于左侧，它位于 F 式布局的最左侧，作为信息主干，也符合用户的浏览习惯</li>\n<li>侧边栏导航不会像汉堡菜单一样一开始就隐藏其中的条目</li>\n<li>侧边栏中的条目优先级基本一致</li>\n<li>当间距足够的时候，侧边栏中的条目会非常的一目了然</li>\n<li>今天的侧边栏通常会留有足够的空间，让后续的条目能够加入进去</li>\n<li>侧边栏让右侧的画板形状尺寸不尽相同，设计师可以以非常规的方式来展现视频和图片，创造更独特的视觉体验</li>\n<li>侧边栏导航以更加干净优雅的方式呈现更多的链接</li>\n</ul>\n</div>\n<h2>侧边栏导航的缺点</h2>\n<p>不喜欢侧边栏导航的人也很多，有些争论是关于导航栏放在右侧会不会更好，还有人则觉得侧边栏导航本身就是个麻烦，一方面让用户面对更复杂的布局，另一方面还增加了开发的难度。</p>\n<figure><figcaption>侧边栏导航示意图</figcaption></figure>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">使用垂直导航存在的问题</p>\n<ul>\n<li>垂直式的导航在响应式布局当中很难正常工作</li>\n<li>导航中的词汇必须足够简短，否则导航栏会设计的很宽，或者部分内容无法显示</li>\n<li>垂直导航所占据的空间，可能会挤压其他更有价值的内容</li>\n<li>在同等内容量之下，侧边栏导航会让用户滚动页面的时间更长</li>\n<li>顶部导航通常只能放四五个链接，而侧边栏导航无疑能放更多，这可能会促使部分设计师，在导航栏中塞入过多导航条目</li>\n<li>绝大多数用户是右撇子，这些用户需要横快整个屏幕去点击导航</li>\n<li>垂直导航通常在单页式页面上非常好用，但是其他类型的网页上则没有想象中那么好使</li>\n</ul>\n</div>\n<h2>侧边栏导航是否好用</h2>\n<figure><figcaption>侧边栏导航示意图</figcaption></figure>\n<p>说真的，讨论很多，结论并不那么明朗。</p>\n<p>作为一种设计趋势，侧边栏导航是引人注意的，作为导航栏，它常驻式的设计，让它的功能性更强。如果您的导航是用户流程中非常重要的存在，那么侧边栏导航是个不错的选择。</p>\n<p>总而言之，这种导航设计对于较少的导航内容的小型网站而言，颇为有用，尤其是对于产品展示型的网站而言。</p>\n<h2>其他的导航模式</h2>\n<p>非常规的导航模式是打破了旧有的常规导航模式的有趣尝试，除了侧边栏导航之外，还有一些其他的有趣的导航设计。</p>\n<p>当然，非常规的导航设计最主要的问题在于，用户不熟悉，容易混淆，迷惑。对于小型站点，适当的尝试还好，对于复杂的大型网站，这样的尝试就有点得不偿失了。</p>\n<p>在这里另外介绍两种有趣的导航设计。Aurora 所采用的是隐藏式的导航，点击 LOGO 旁边的菜单按钮能够显示，而 AndCulture 则直接将顶部导航旋转了 90 度直接放到侧面。</p>\n<figure><figcaption>侧边栏导航示意图</figcaption></figure>\n<figure><figcaption>侧边栏导航示意图</figcaption></figure>\n<p>两种设计虽然都有人让人意想不到，但是都在各自的网站中良好的运行。当然，不管您要做多么奇怪的尝试，在真正决定投入使用之前，尽量多做用户测试，确保它们是有效的。</p>\n",
      "date_published": "2020-09-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "标签导航设计技巧",
      "url": "https://blog.tlcsdm.com/design/navigation/tabbar-design.html",
      "id": "https://blog.tlcsdm.com/design/navigation/tabbar-design.html",
      "summary": "底部导航栏图标重要性及维度 重要性 底部导航栏的图标是路牌，承担着指路的作用，给用户指明进入产品后可以分别通往什么页面。早期的底部导航栏是单一的指路功能，经过多年的交互设计迭代后，附加了「信息展示」和「引导操作」的作用，这点会在下文中详细阐述。 三个重要评估维度 品牌调性 品牌调性决定了图标的体量感、差异化和创意延展。怎样评估图标设计能够体现出品牌调性...",
      "content_html": "<h2>底部导航栏图标重要性及维度</h2>\n<h3>重要性</h3>\n<p>底部导航栏的图标是路牌，承担着指路的作用，给用户指明进入产品后可以分别通往什么页面。早期的底部导航栏是单一的指路功能，经过多年的交互设计迭代后，附加了「信息展示」和「引导操作」的作用，这点会在下文中详细阐述。</p>\n<h3>三个重要评估维度</h3>\n<h4>品牌调性</h4>\n<p>品牌调性决定了图标的体量感、差异化和创意延展。怎样评估图标设计能够体现出品牌调性呢? 最简单直接的方法: 截屏首页，不看顶部栏，仅从底部导航栏能看出来这是什么产品，就算成功体现了品牌调性。</p>\n<figure><figcaption>品牌调性</figcaption></figure>\n<h4>识别度</h4>\n<p>识别度决定了用户辨识其它页面功能的速度。高识别度的图标能协助用户辨识，低识别度的图标会阻碍用户辨识。在选择做这部分图标的时候，一定要考虑识别度的问题，进行创新要建立在高识别度的基础上。</p>\n<h4>美观</h4>\n<p>导航栏图标美观的要义是: 统一、精致。统一不代表绝对统一，精致不代表过于精细。要做到美观，可以遵循以下几点: 大小统一和谐、线条粗细一致、圆角视觉统一、内容繁简平衡。</p>\n<p>将三个维度按重要程度来排序，是品牌调性&gt;识别度&gt;美观。有的设计师会选择以美观度作为优先标准。但站在产品的角度来说，应该以体现品牌调性和识别度为重要标准，在这基础上再进行美观设计。下图中，新华书店 APP 的底部导航栏图标略显年代感，图标细节表现不一显得不够统一和精致，然而用户还是能够根据图标一眼区分各个导航入口的功能。它们可能不是设计师眼中好看的图标，但它们是用户眼中好用的图标。</p>\n<figure><figcaption>新华书店 APP</figcaption></figure>\n<h2>底部导航入口的数量</h2>\n<p>底部导航入口一般在 3-5 个，最常见的是 4-5 个。这个数量由什么决定呢?</p>\n<h3>最高数值由认知心理学决定</h3>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>在认知心理学理论中，人的记忆系统由三个储存器组成: 感觉寄存器，短时记忆和长时记忆。来自环境的刺激经过过滤首先进入感觉寄存器，通过选择性直觉，信息被临时传入短时记忆(STM)。它是一个过渡性的记忆缓冲期，容量有限，只能记录 7+-2 个信息组块，且只能保持大约 15-30 秒。</p>\n</div>\n<p>在使用 APP 的时候，底部导航栏使用到的是人记忆系统中的感觉寄存器和短时记忆。考虑到 APP 面对的人群非常广，短时记忆容量不一，选择了 7-2(也就是 5)作为底部导航入口的最高数值。</p>\n<h3>具体数值由产品的框架决定</h3>\n<p>产品经理会通过项目背景和用户调研，决定产品的功能结构。而功能结构图划分的类别决定了底部导航入口数量。有的产品功能非常单一，结构也单一，三个导航入口已经能够满足需求；有的产品功能复杂，则需要更多的导航入口，用以划分 APP 功能，帮助用户快速识别。</p>\n<figure><figcaption>产品需求</figcaption></figure>\n<h2>底部导航栏模式</h2>\n<p>底部导航栏有权重平分、强调信息、引导操作这三种模式。本次深度分析采用了 30 个产品作为对象进行研究，其中大部分为知名社交电商类产品。因为这类型的产品比较多，迭代完善，可参考性强。</p>\n<h3>权重平分</h3>\n<p>当产品的功能结构权重比较平均，不希望突出其中某个结构时，一般采用权重平分的模式，即每个底部入口的分量都是平均的。常规产品会采用这样的形式。</p>\n<figure><figcaption>权重平分</figcaption></figure>\n<h3>强调信息</h3>\n<p>当产品需要强调某些信息引起用户注意或同一个按钮承担两个功能时，设计便可以选择在某个入口添加明显的信息指示或功能。增加功能的底部导航入口不一定是首页，也可以是其它入口。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>严选的首页按钮承担着「回到顶部/快速定位推荐模块/品牌展示」的功能；淘宝、飞猪的首页按钮承担着「回到顶部/品牌展示」的功能；微博的视频按钮承担着「视频/关注的人更新内容提示」的功能。</p>\n</div>\n<figure><figcaption>强调信息</figcaption></figure>\n<h3>引导操作</h3>\n<p>当产品希望用户能够进行某个操作，需要进行强操作提醒时，可以选择引导操作的导航栏模式，在中心突出操作按钮。大众点评、百果园、转转、星巴克、闲鱼等都是采用这种模式。</p>\n<figure><figcaption>引导操作</figcaption></figure>\n<h2>底部导航栏图标表现形式</h2>\n<h3>线性图标的优势</h3>\n<p>从大多数 APP 设计来看，未选中状态下，线性图标占有优势。相对面性图标来说，线性图标有更多可能性，且选中与未选中的区分落差较大，对比明显。</p>\n<figure><figcaption>两种设计方式对比</figcaption></figure>\n<h3>其它图标趋势</h3>\n<p>未选中状态的图标常用线性方式，目前的主要趋势还是在图标表意上下功夫；选中状态的图标常用面性、微质感、立体、插画等方式。</p>\n<h2>图标设计思路与创意</h2>\n<p>为了直观表现图标设计的思路，我为权重平分模式、强调信息模式、引导操作模式分别设定不同的产品背景，把图标设计的过程写下来供大家参考。</p>\n<ol>\n<li>\n<p>权重平分模式示例</p>\n<figure><figcaption>权重平分模式示例</figcaption></figure>\n</li>\n<li>\n<p>强调信息模式示例</p>\n<figure><figcaption>强调信息模式示例</figcaption></figure>\n</li>\n<li>\n<p>引导操作模式示例</p>\n<figure><figcaption>引导操作模式示例</figcaption></figure>\n</li>\n</ol>\n",
      "date_published": "2020-09-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "标签导航设计",
      "url": "https://blog.tlcsdm.com/design/navigation/tabbar.html",
      "id": "https://blog.tlcsdm.com/design/navigation/tabbar.html",
      "summary": "导航分很多类别，如标签导航、抽屉式导航、九宫格导航、混合组合导航、列表式导航、Tab 导航、平铺导航等等。 现在用到更多的导航其实是标签导航(tabbar)，它随处可见，相信目前大部分的 App 用的导航都是标签形式的。 理清产品框架 相信很多设计师在设计导航时，一上来就开始 YY 自己的导航要放什么，因为这个时候他已经被标签形式的导航洗脑了，认为自己...",
      "content_html": "<p>导航分很多类别，如标签导航、抽屉式导航、九宫格导航、混合组合导航、列表式导航、Tab 导航、平铺导航等等。</p>\n<p>现在用到更多的导航其实是标签导航(tabbar)，它随处可见，相信目前大部分的 App 用的导航都是标签形式的。</p>\n<h2>理清产品框架</h2>\n<p>相信很多设计师在设计导航时，一上来就开始 YY 自己的导航要放什么，因为这个时候他已经被标签形式的导航洗脑了，认为自己的 App 就应该用标签导航。然后继续 YY 产品的功能，自己理出个最适合的，放上去就好了。</p>\n<p>其实不然。做好一个导航要考虑的问题其实非常多，还要考虑产品后期发展的延展性。必须定好整个产品的框架，把最核心的功能放在第一层页面，再根据产品的深度来设计导航的模式。</p>\n<h2>标签导航的优劣势</h2>\n<p>先来看个图:</p>\n<figure><figcaption>微信页面</figcaption></figure>\n<p>不要看上面的列表，就看下面的标签。是不是特别熟悉? 很多 App 都是用这类标签式导航来引导用户切换功能。</p>\n<h3>优势</h3>\n<ol>\n<li>\n<p>简单高效，操作方便</p>\n<p>下面的四个功能可以快速切换，用户在使用的过程中不会迷失方向，且简单清晰，层级明确。</p>\n</li>\n<li>\n<p>更好的用户体验</p>\n<p>试想一下，一般在使用 App 时，用户更多的会怎么使用手机? 双手还是单手呢? 肯定都有。所以单手使用手机的用户碰到的 App 是标签导航时，可以更方便的操作，不需要一定得使用另一只手。而某些导航如果不用两只手是没办法操作的。</p>\n</li>\n<li>\n<p>快速了解 App 主要功能</p>\n<p>一般来说，用户第一次使用产品，会关注这个 App 有什么功能，它能帮助自己完成什么任务。所以标签导航可以很好地帮助用户了解产品的主要功能，让用户看到的第一眼就知道自己能做什么。</p>\n</li>\n</ol>\n<h3>劣势</h3>\n<ol>\n<li>\n<p>功能不能过多</p>\n<p>有些产品功能过多，但是却又都是必要的，不能做删减。而一旦超过五个，就不适合用标签导航。因为标签导航不适合做滑动，所以功能多了可点击区域(热区)就变小了，操作上会有一定影响。</p>\n</li>\n<li>\n<p>占用一定屏幕尺寸</p>\n<p>标签导航占用了屏幕下方不少的位置。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>不过也正是因为顶部和底部的 navbar 与 tabbar 会占据太多的屏幕空间，所以现在屏幕尺寸普遍改为了 2:1 而不是原来的 16:9。</p>\n</div>\n</li>\n</ol>\n<h2>标签导航的延展</h2>\n<p>有的人会问，如果我的产品很想用标签导航，但是又超过了 5 个功能，那有办法解决么?</p>\n<figure><figcaption>知乎页面</figcaption></figure>\n<p>当然有，当您的主功能超过 5 个又一定要使用标签导航的话，那知乎的这个解决方案很适合您(最右边的功能是“更多”)。</p>\n<p>还有一类情况是:主功能是标签导航，次要功能也是标签导航。这些在资讯 APP 是很常见的，比如主功能是“新闻”，次要功能是顶部的“要闻”、“NBA”等等，如果在某个主功能中，次要功能很多，就可以使用这类方式来解决这个问题。</p>\n",
      "date_published": "2020-09-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "设计"
      ]
    },
    {
      "title": "Bash 教程",
      "url": "https://blog.tlcsdm.com/linux/bash/",
      "id": "https://blog.tlcsdm.com/linux/bash/",
      "summary": "目录",
      "content_html": "<h2>目录</h2>\n<ul>\n<li>\n<p><a href=\"/linux/bash/intro.html\" target=\"_blank\">简介</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/grammar.html\" target=\"_blank\">基本语法</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/expansion.html\" target=\"_blank\">模式扩展</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/quotation.html\" target=\"_blank\">引号和转义</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/variable.html\" target=\"_blank\">变量</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/string.html\" target=\"_blank\">字符串操作</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/arithmetic.html\" target=\"_blank\">算术运算</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/readline.html\" target=\"_blank\">行操作</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/stack.html\" target=\"_blank\">目录堆栈</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/script.html\" target=\"_blank\">脚本入门</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/read.html\" target=\"_blank\">read 命令</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/condition.html\" target=\"_blank\">条件判断</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/loop.html\" target=\"_blank\">循环</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/function.html\" target=\"_blank\">函数</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/array.html\" target=\"_blank\">数组</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/set.html\" target=\"_blank\">set 命令</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/debug.html\" target=\"_blank\">脚本除错</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/mktemp.html\" target=\"_blank\">mktemp 命令，trap 命令</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/startup.html\" target=\"_blank\">启动环境</a></p>\n</li>\n<li>\n<p><a href=\"/linux/bash/prompt.html\" target=\"_blank\">命令提示符</a></p>\n</li>\n</ul>\n",
      "date_published": "2022-01-07T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Bash 的算术运算",
      "url": "https://blog.tlcsdm.com/linux/bash/arithmetic.html",
      "id": "https://blog.tlcsdm.com/linux/bash/arithmetic.html",
      "summary": "算术表达式 ((...)) 语法可以进行整数的算术运算。 ((...)) 会自动忽略内部的空格，所以下面的写法都正确，得到同样的结果。 这个语法不返回值，命令执行的结果根据算术运算的结果而定。只要算术结果不是 0，命令就算执行成功。 上面例子中，3 + 2 的结果是 5，命令就算执行成功，环境变量 $? 为 0。 如果算术结果为 0，命令就算执行失败。...",
      "content_html": "<h2>算术表达式</h2>\n<p><code>((...))</code> 语法可以进行整数的算术运算。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ((foo </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">10</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>((...))</code> 会自动忽略内部的空格，所以下面的写法都正确，得到同样的结果。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(( </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(( </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ))</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这个语法不返回值，命令执行的结果根据算术运算的结果而定。只要算术结果不是 <code>0</code>，命令就算执行成功。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (( </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>3 + 2</code> 的结果是 5，命令就算执行成功，环境变量 <code>$?</code> 为 <code>0</code>。</p>\n<p>如果算术结果为 <code>0</code>，命令就算执行失败。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (( </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> -</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>3 - 3</code> 的结果是 <code>0</code>，环境变量 <code>$?</code> 为 <code>1</code>，表示命令执行失败。</p>\n<p>如果要读取算术运算的结果，需要在 <code>((...))</code> 前面加上美元符号 <code>$((...))</code>，使其变成算术表达式，返回算术运算的值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">4</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>((...))</code> 语法支持的算术运算符如下。</p>\n<ul>\n<li><code>+</code>: 加法</li>\n<li><code>-</code>: 减法</li>\n<li><code>*</code>: 乘法</li>\n<li><code>/</code>: 除法(整除)</li>\n<li><code>%</code>: 余数</li>\n<li><code>**</code>: 指数</li>\n<li><code>++</code>: 自增运算(前缀或后缀)</li>\n<li><code>--</code>: 自减运算(前缀或后缀)</li>\n</ul>\n<p>注意，除法运算符的返回结果总是整数，比如 <code>5</code> 除以 <code>2</code>，得到的结果是 <code>2</code>，而不是 <code>2.5</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>++</code> 和 <code>--</code> 这两个运算符有前缀和后缀的区别。作为前缀是先运算后返回值，作为后缀是先返回值后运算。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> i=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">i++</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">++i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>++</code> 作为后缀是先返回值，执行 <code>echo</code> 命令，再进行自增运算；作为前缀则是先进行自增运算，再返回值执行 <code>echo</code> 命令。</p>\n<p><code>$((...))</code> 内部可以用圆括号改变运算顺序。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $(( (</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">*</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">20</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，内部的圆括号让加法先于乘法执行。</p>\n<p><code>$((...))</code> 结构可以嵌套。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $(((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5**2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">*</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">75</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $(($((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5**2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)) * 3))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">75</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这个语法只能计算整数，否则会报错。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 报错</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1.5</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 语法错误</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>$((...))</code> 的圆括号之中，不需要在变量名之前加上 <code>$</code>，不过加上也不报错。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> number=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$number</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> + 1))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，变量 <code>number</code> 前面有没有美元符号，结果都是一样的。</p>\n<p>如果在 <code>$((...))</code> 里面使用字符串，Bash 会认为那是一个变量名。如果不存在同名变量，Bash 就会将其作为空值，因此不会报错。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $(( </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"hello\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $(( </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"hello\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>\"hello\"</code> 会被当作变量名，返回空值，而 <code>$((...))</code> 会将空值当作 <code>0</code>，所以乘法的运算结果就是 <code>0</code>。同理，如果 <code>$((...))</code> 里面使用不存在的变量，也会当作 <code>0</code> 处理。</p>\n<p>如果一个变量的值为字符串，跟上面的处理逻辑是一样的。即该字符串如果不对应已存在的变量，在 <code>$((...))</code> 里面会被当作空值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=hello</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $(( </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，变量 <code>foo</code> 的值是 <code>hello</code>，而 <code>hello</code> 也会被看作变量名。这使得有可能写出动态替换的代码。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=hello</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $(( </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>foo + 2</code> 取决于变量 <code>hello</code> 的值。</p>\n<p>最后，<code>$[...]</code> 是以前的语法，也可以做整数运算，不建议使用。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[2+2]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">4</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>数值的进制</h2>\n<p>Bash 的数值默认都是十进制，但是在算术表达式中，也可以使用其他进制。</p>\n<ul>\n<li><code>number</code>: 没有任何特殊表示法的数字是十进制数(以 10 为底)。</li>\n<li><code>0number</code>: 八进制数。</li>\n<li><code>0xnumber</code>: 十六进制数。</li>\n<li><code>base#number</code>: <code>base</code> 进制的数。</li>\n</ul>\n<p>下面是一些例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0xff</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">255</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2#11111111</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">255</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>0xff</code> 是十六进制数，<code>2#11111111</code> 是二进制数。</p>\n<h2>位运算</h2>\n<p><code>$((...))</code> 支持以下的二进制位运算符。</p>\n<ul>\n<li><code>&lt;&lt;</code>: 位左移运算，把一个数字的所有位向左移动指定的位。</li>\n<li><code>&gt;&gt;</code>: 位右移运算，把一个数字的所有位向右移动指定的位。</li>\n<li><code>&amp;</code>: 位的“与”运算，对两个数字的所有位执行一个 <code>AND</code> 操作。</li>\n<li><code>|</code>: 位的“或”运算，对两个数字的所有位执行一个 <code>OR</code> 操作。</li>\n<li><code>~</code>: 位的“否”运算，对一个数字的所有位取反。</li>\n<li><code>^</code>: 位的异或运算(exclusive or)，对两个数字的所有位执行一个异或操作。</li>\n</ul>\n<p>下面是右移运算符 <code>&gt;&gt;</code> 的例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((16&gt;&gt;2))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">4</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面是左移运算符 <code>&lt;&lt;</code> 的例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">16</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">2))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">64</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面是 <code>17</code> (二进制 <code>10001</code>)和 <code>3</code> (二进制 <code>11</code>)的各种二进制运算的结果。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">17</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&amp;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">17</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">|</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">19</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">17^3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">18</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>逻辑运算</h2>\n<p><code>$((...))</code> 支持以下的逻辑运算符。</p>\n<ul>\n<li><code>&lt;</code>: 小于</li>\n<li><code>&gt;</code>: 大于</li>\n<li><code>&lt;=</code>: 小于或相等</li>\n<li><code>&gt;=</code>: 大于或相等</li>\n<li><code>==</code>: 相等</li>\n<li><code>!=</code>: 不相等</li>\n<li><code>&amp;&amp;</code>: 逻辑与</li>\n<li><code>||</code>: 逻辑或</li>\n<li><code>!</code>: 逻辑否</li>\n<li><code>expr1?expr2:expr3</code>: 三元条件运算符。若表达式 <code>expr1</code> 的计算结果为非零值(算术真)，则执行表达式 <code>expr2</code>，否则执行表达式 <code>expr3</code>。</li>\n</ul>\n<p>如果逻辑表达式为真，返回 <code>1</code>，否则返回 <code>0</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt; </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $(( (</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt; </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) || (</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) ))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>三元运算符执行一个单独的逻辑测试。它用起来类似于 <code>if/then/else</code> 语句。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;1 </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">?</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> :</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ?</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> :</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，第一个表达式为真时，返回第二个表达式的值，否则返回第三个表达式的值。</p>\n<h2>赋值运算</h2>\n<p>算术表达式 <code>$((...))</code> 可以执行赋值运算。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $a</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>a=1</code> 对变量 <code>a</code> 进行赋值。这个式子本身也是一个表达式，返回值就是等号右边的值。</p>\n<p><code>$((...))</code> 支持的赋值运算符，有以下这些。</p>\n<ul>\n<li><code>parameter = value</code>: 简单赋值。</li>\n<li><code>parameter += value</code>: 等价于 <code>parameter = parameter + value</code>。</li>\n<li><code>parameter -= value</code>: 等价于 <code>parameter = parameter – value</code>。</li>\n<li><code>parameter *= value</code>: 等价于 <code>parameter = parameter * value</code>。</li>\n<li><code>parameter /= value</code>: 等价于 <code>parameter = parameter / value</code>。</li>\n<li><code>parameter %= value</code>: 等价于 <code>parameter = parameter % value</code>。</li>\n<li><code>parameter &lt;&lt;= value</code>: 等价于 <code>parameter = parameter &lt;&lt; value</code>。</li>\n<li><code>parameter &gt;&gt;= value</code>: 等价于 <code>parameter = parameter &gt;&gt; value</code>。</li>\n<li><code>parameter &amp;= value</code>: 等价于 <code>parameter = parameter &amp; value</code>。</li>\n<li><code>parameter |= value</code>: 等价于 <code>parameter = parameter | value</code>。</li>\n<li><code>parameter ^= value</code>: 等价于 <code>parameter = parameter ^ value</code>。</li>\n</ul>\n<p>下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">10</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果在表达式内部赋值，可以放在圆括号中，否则会报错。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $(( </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;1 </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">?</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (a+=1) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) ))</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>求值运算</h2>\n<p>逗号 <code>,</code> 在 <code>$((...))</code> 内部是求值运算符，执行前后两个表达式，并返回后一个表达式的值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 2,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">12</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，逗号前后两个表达式都会执行，然后返回后一个表达式的值 <code>12</code>。</p>\n<h2>expr 命令</h2>\n<p><code>expr</code> 命令支持算术运算，可以不使用 <code>((...))</code> 语法。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> expr</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>expr</code> 命令支持变量替换。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> expr</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>expr</code> 命令也不支持非整数参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> expr</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3.5</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">expr:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 非整数参数</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，如果有非整数的运算，<code>expr</code> 命令就报错了。</p>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "数组",
      "url": "https://blog.tlcsdm.com/linux/bash/array.html",
      "id": "https://blog.tlcsdm.com/linux/bash/array.html",
      "summary": "数组(array)是一个包含多个值的变量。成员的编号从 0 开始，数量没有上限，也没有要求成员被连续索引。",
      "content_html": "<p>数组(array)是一个包含多个值的变量。成员的编号从 0 开始，数量没有上限，也没有要求成员被连续索引。</p>\n<!-- more -->\n<h2>创建数组</h2>\n<p>数组可以采用逐个赋值的方法创建。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARRAY</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">INDEX</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">value</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面语法中，<code>ARRAY</code> 是数组的名字，可以是任意合法的变量名。<code>INDEX</code> 是一个大于或等于零的整数，也可以是算术表达式。注意数组第一个元素的下标是 0， 而不是 1。</p>\n<p>下面创建一个三个成员的数组。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">array</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">val</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">array</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">val</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">array</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">val</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>数组也可以采用一次性赋值的方式创建。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARRAY</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">value1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> value2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ...</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> valueN</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARRAY</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  value1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  value2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  value3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>采用上面方式创建数组时，可以按照默认顺序赋值，也可以在每个值前面指定位置。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">array</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">array</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">([</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">c</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">days</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Sun</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Mon</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Tue</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Wed</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Thu</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Fri</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Sat</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">days</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">([</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Sun</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Mon</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Tue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Wed</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Thu</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Fri</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">6</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Sat</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>只为某些值指定位置，也是可以的。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">names</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">hatter</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">duchess</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> alice</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，<code>hatter</code> 是数组的 0 号位置，<code>duchess</code> 是 5 号位置，<code>alice</code> 是 6 号位置。</p>\n<p>没有赋值的数组元素的默认值是空字符串。</p>\n<p>定义数组的时候，可以使用通配符。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">mp3s</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">( *</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.mp3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> )</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，将当前目录的所有 MP3 文件，放进一个数组。</p>\n<p>先用 <code>declare -a</code> 命令声明一个数组，也是可以的。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -a</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> ARRAYNAME</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>read -a</code> 命令则是将用户的命令行输入，读入一个数组。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dice</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令将用户的命令行输入，读入数组 <code>dice</code>。</p>\n<h2>读取数组</h2>\n<h3>读取单个元素</h3>\n<p>读取数组指定位置的成员，要使用下面的语法。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">array</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[i]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">     # i 是索引</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面语法里面的大括号是必不可少的，否则 Bash 会把索引部分 <code>[i]</code> 按照原样输出。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> array[0]=a</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">array</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[0]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $array</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[0]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a[0]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，数组的第一个元素是 <code>a</code>。如果不加大括号，Bash 会直接读取 <code>$array</code> 首成员的值，然后将 <code>[0]</code> 按照原样输出。</p>\n<h3>读取所有成员</h3>\n<p><code>@</code> 和 <code>*</code> 是数组的特殊索引，表示返回数组的所有成员。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> f</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这两个特殊索引配合 <code>for</code> 循环，就可以用来遍历数组。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">names</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>@</code> 和 <code>*</code> 放不放在双引号之中，是有差别的。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> activities=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">( </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">swimming</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"water skiing\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> canoeing</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"white-water rafting\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> surfing</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> )</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> for</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> act</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> in</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">activities</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Activity: </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$act</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> swimming</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> water</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> skiing</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> canoeing</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> white-water</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> rafting</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> surfing</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子中，数组 <code>activities</code> 实际包含 5 个元素，但是 <code>for...in</code> 循环直接遍历 <code>${activities[@]}</code>，会导致返回 7 个结果。为了避免这种情况，一般把 <code>${activities[@]}</code> 放在双引号之中。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> for</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> act</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">activities</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Activity: </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$act</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> swimming</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> water</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> skiing</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> canoeing</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> white-water</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> rafting</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> surfing</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>${activities[@]}</code> 放在双引号之中，遍历就会返回正确的结果。</p>\n<p><code>${activities[*]}</code> 不放在双引号之中，跟 <code>${activities[@]}</code> 不放在双引号之中是一样的。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> for</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> act</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> in</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">activities</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[*]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Activity: </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$act</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> swimming</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> water</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> skiing</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> canoeing</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> white-water</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> rafting</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> surfing</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>${activities[*]}</code> 放在双引号之中，所有元素就会变成单个字符串返回。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> for</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> act</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">activities</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Activity: </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$act</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Activity:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> swimming</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> water</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> skiing</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> canoeing</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> white-water</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> rafting</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> surfing</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>所以，拷贝一个数组的最方便方法，就是写成下面这样。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">hobbies</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">( </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">activities</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> )</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，数组 <code>activities</code> 被拷贝给了另一个数组 <code>hobbies</code>。</p>\n<p>这种写法也可以用来为新数组添加成员。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">hobbies</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">( </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">activities</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">]\" diving )</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，新数组 <code>hobbies</code> 在数组 <code>activities</code> 的所有成员之后，又添加了一个成员。</p>\n<h3>默认位置</h3>\n<p>如果读取数组成员时，没有读取指定哪一个位置的成员，默认使用 <code>0</code> 号位置。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=A</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[0]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">A</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>foo</code> 是一个数组，赋值的时候不指定位置，实际上是给 <code>foo[0]</code> 赋值。</p>\n<p>引用一个不带下标的数组变量，则引用的是 <code>0</code> 号位置的数组元素。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，引用数组元素的时候，没有指定位置，结果返回的是 <code>0</code> 号位置。</p>\n<h2>数组的长度</h2>\n<p>要想知道数组的长度(即一共包含多少成员)，可以使用下面两种语法。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">array</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[*]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">array</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a[100]=foo</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[*]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，把字符串赋值给 <code>100</code> 位置的数组元素，这时的数组只有一个元素。</p>\n<p>注意，如果用这种语法去读取具体的数组成员，就会返回该成员的字符串长度。这一点必须小心。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a[100]=foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[100]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>${#a[100]}</code> 实际上是返回数组第 100 号成员 <code>a[100]</code> 的值(<code>foo</code>)的字符串长度。</p>\n<h2>提取数组序号</h2>\n<p><code>${!array[@]}</code> 或 <code>${!array[*]}</code>，可以返回数组的成员序号，即哪些位置是有值的。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> arr=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">([5]=a [9]=b [23]=c)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 9</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 23</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[*]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 9</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 23</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，数组的 5、9、23 号位置有值。</p>\n<p>利用这个语法，也可以通过 <code>for</code> 循环遍历数组。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">arr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[i]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>提取数组成员</h2>\n<p><code>${array[@]:position:length}</code> 的语法可以提取数组成员。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> food=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">( </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">apples</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bananas</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cucumbers</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dates</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> eggs</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> fajitas</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> grapes</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> )</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">food</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">1</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bananas</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">food</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">3</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bananas</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cucumbers</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dates</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>${food[@]:1:1}</code> 返回从数组 1 号位置开始的 1 个成员，<code>${food[@]:1:3}</code> 返回从 1 号位置开始的 3 个成员。</p>\n<p>如果省略长度参数 <code>length</code>，则返回从指定位置开始的所有成员。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">food</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">4</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">eggs</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> fajitas</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> grapes</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子返回从 4 号位置开始到结束的所有成员。</p>\n<h2>追加数组成员</h2>\n<p>数组末尾追加成员，可以使用 <code>+=</code> 赋值运算符。它能够自动地把值追加到数组末尾。否则，就需要知道数组的最大序号，比较麻烦。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo+=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> f</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>删除数组</h2>\n<p>删除一个数组成员，使用 <code>unset</code> 命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> f</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> unset</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo[2]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> f</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，删除了数组中的第三个元素，下标为 2。</p>\n<p>删除成员也可以将这个成员设为空值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo[1]=''</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> f</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，将数组的第二个成员设为空字符串，就删除了这个成员。</p>\n<p>由于空值就是空字符串，所以下面这样写也可以，但是不建议这种写法。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面的写法也相当于删除了数组的第二个成员。</p>\n<p>直接将数组变量赋值为空字符串，相当于删除数组的第一个成员。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=''</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[@]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> f</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的写法相当于删除了数组的第一个成员。</p>\n<p><code>unset ArrayName</code> 可以清空整个数组。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> unset</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ARRAY</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ARRAY</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[*]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;--no output--&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>关联数组</h2>\n<p>Bash 的新版本支持关联数组。关联数组使用字符串而不是整数作为数组索引。</p>\n<p><code>declare -A</code> 可以声明关联数组。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -A</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> colors</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">colors[</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"red\"</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">]</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"#ff0000\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">colors[</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"green\"</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">]</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"#00ff00\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">colors[</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"blue\"</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">]</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"#0000ff\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>整数索引的数组，可以直接使用变量名创建数组，关联数组则必须用带有 <code>-A</code> 选项的 <code>declare</code> 命令声明创建。</p>\n<p>访问关联数组成员的方式，几乎与整数索引数组相同。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">colors</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"blue\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "条件判断",
      "url": "https://blog.tlcsdm.com/linux/bash/condition.html",
      "id": "https://blog.tlcsdm.com/linux/bash/condition.html",
      "summary": "本章介绍 Bash 脚本的条件判断语法。",
      "content_html": "<p>本章介绍 Bash 脚本的条件判断语法。</p>\n<!-- more -->\n<h2>if 结构</h2>\n<p><code>if</code> 是最常用的条件判断结构，只有符合给定条件时，才会执行指定的命令。它的语法如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> commands</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  commands</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[elif commands; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  commands...]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  commands]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这个命令分成三个部分: <code>if</code>、<code>elif</code> 和 <code>else</code>。其中，后两个部分是可选的。</p>\n<p><code>if</code> 关键字后面是主要的判断条件，<code>elif</code> 用来添加在主条件不成立时的其他判断条件，<code>else</code> 则是所有条件都不成立时要执行的部分。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> test</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $USER</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"foo\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Hello foo.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"You are not foo.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子中，判断条件是环境变量 <code>$USER</code> 是否等于 <code>foo</code>，如果等于就输出 <code>Hello foo.</code>，否则输出其他内容。</p>\n<p><code>if</code> 和 <code>then</code> 写在同一行时，需要分号分隔。分号是 Bash 的命令分隔符。它们也可以写成两行，这时不需要分号。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'hello world'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> false</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'it is false'</span><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"> # 本行不会执行</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子中，<code>true</code> 和 <code>false</code> 是两个特殊命令，前者代表操作成功，后者代表操作失败。<code>if true</code> 意味着命令部分总是会执行，<code>if false</code> 意味着命令部分永远不会执行。</p>\n<p>除了多行的写法，<code>if</code> 结构也可以写成单行。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> if</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'hello world'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> if</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"It's true.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注意，<code>if</code> 关键字后面也可以是一条命令，该条命令执行成功(返回值 <code>0</code>)，就意味着判断条件成立。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> if</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'hi'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'hello world'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令中，<code>if</code> 后面是一条命令 <code>echo 'hi'</code>。该命令会执行，如果返回值是 <code>0</code>，则执行 <code>then</code> 的部分。</p>\n<p><code>if</code> 后面可以跟任意数量的命令。这时，所有命令都会执行，但是判断真伪只看最后一个命令，即使前面所有命令都失败，只要最后一个命令返回 <code>0</code>，就会执行 <code>then</code> 的部分。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> if</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'hello world'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>if</code> 后面有两条命令 (<code>false;true;</code>)，第二条命令 (<code>true</code>) 决定了 <code>then</code> 的部分是否会执行。</p>\n<p><code>elif</code> 部分可以有多个。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"输入一个 1 到 3 之间的数字(包含两端)&gt; \"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> character</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$character</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">elif</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$character</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"2\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">elif</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$character</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"3\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 输入不符合要求</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，如果用户输入 <code>3</code>，就会连续判断 3 次。</p>\n<h2>test 命令</h2>\n<p><code>if</code> 结构的判断条件，一般使用 <code>test</code> 命令，有三种形式。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 写法一</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">test</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> expression</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 写法二</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[ expression ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 写法三</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[[ expression ]]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面三种形式是等价的，但是第三种形式还支持正则判断，前两种不支持。</p>\n<p>上面的 <code>expression</code> 是一个表达式。这个表达式为真，<code>test</code> 命令执行成功(返回值为 <code>0</code>)；表达式为伪，<code>test</code> 命令执行失败(返回值为 <code>1</code>)。注意，第二种和第三种写法，<code>[</code> 和 <code>]</code> 与内部的表达式之间必须有空格。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> test</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -f</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /etc/hosts</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">-f</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /etc/hosts</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子中，<code>test</code> 命令采用两种写法，判断 <code>/etc/hosts</code> 文件是否存在，这两种写法是等价的。命令执行后，返回值为 <code>0</code>，表示该文件确实存在。</p>\n<p>实际上，<code>[</code> 这个字符是 <code>test</code> 命令的一种简写形式，可以看作是一个独立的命令，这解释了为什么它后面必须有空格。</p>\n<p>下面把 <code>test</code> 命令的三种形式，用在 <code>if</code> 结构中，判断一个文件是否存在。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 写法一</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> test</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /tmp/foo.txt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Found foo.txt\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 写法二</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /tmp/foo.txt ] ; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Found foo.txt\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 写法三</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [[ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /tmp/foo.txt ]] ; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Found foo.txt\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>判断表达式</h2>\n<p><code>if</code> 关键字后面，跟的是一个命令。这个命令可以是 <code>test</code> 命令，也可以是其他命令。命令的返回值为 <code>0</code> 表示判断成立，否则表示不成立。因为这些命令主要是为了得到返回值，所以可以视为表达式。</p>\n<p>常用的判断表达式有下面这些。</p>\n<h3>文件判断</h3>\n<p>以下表达式用来判断文件状态。</p>\n<ul>\n<li><code>[ -a file ]</code>: 如果 file 存在，则为 <code>true</code>。</li>\n<li><code>[ -b file ]</code>: 如果 file 存在并且是一个块(设备)文件，则为 <code>true</code>。</li>\n<li><code>[ -c file ]</code>: 如果 file 存在并且是一个字符(设备)文件，则为 <code>true</code>。</li>\n<li><code>[ -d file ]</code>: 如果 file 存在并且是一个目录，则为 <code>true</code>。</li>\n<li><code>[ -e file ]</code>: 如果 file 存在，则为 <code>true</code>。</li>\n<li><code>[ -f file ]</code>: 如果 file 存在并且是一个普通文件，则为 <code>true</code>。</li>\n<li><code>[ -g file ]</code>: 如果 file 存在并且设置了组 ID，则为 <code>true</code>。</li>\n<li><code>[ -G file ]</code>: 如果 file 存在并且属于有效的组 ID，则为 <code>true</code>。</li>\n<li><code>[ -h file ]</code>: 如果 file 存在并且是符号链接，则为 <code>true</code>。</li>\n<li><code>[ -k file ]</code>: 如果 file 存在并且设置了它的“sticky bit”，则为 <code>true</code>。</li>\n<li><code>[ -L file ]</code>: 如果 file 存在并且是一个符号链接，则为 <code>true</code>。</li>\n<li><code>[ -N file ]</code>: 如果 file 存在并且自上次读取后已被修改，则为 <code>true</code>。</li>\n<li><code>[ -O file ]</code>: 如果 file 存在并且属于有效的用户 ID，则为 <code>true</code>。</li>\n<li><code>[ -p file ]</code>: 如果 file 存在并且是一个命名管道，则为 <code>true</code>。</li>\n<li><code>[ -r file ]</code>: 如果 file 存在并且可读(当前用户有可读权限)，则为 <code>true</code>。</li>\n<li><code>[ -s file ]</code>: 如果 file 存在且其长度大于零，则为 <code>true</code>。</li>\n<li><code>[ -S file ]</code>: 如果 file 存在且是一个网络 socket，则为 <code>true</code>。</li>\n<li><code>[ -t fd ]</code>: 如果 fd 是一个文件描述符，并且重定向到终端，则为 <code>true</code>。这可以用来判断是否重定向了标准输入／输出错误。</li>\n<li><code>[ -u file ]</code>: 如果 file 存在并且设置了 setuid 位，则为 <code>true</code>。</li>\n<li><code>[ -w file ]</code>: 如果 file 存在并且可写(当前用户拥有可写权限)，则为 <code>true</code>。</li>\n<li><code>[ -x file ]</code>: 如果 file 存在并且可执行(有效用户有执行／搜索权限)，则为 <code>true</code>。</li>\n<li><code>[ file1 -nt file2 ]</code>: 如果 FILE1 比 FILE2 的更新时间最近，或者 FILE1 存在而 FILE2 不存在，则为 <code>true</code>。</li>\n<li><code>[ file1 -ot file2 ]</code>: 如果 FILE1 比 FILE2 的更新时间更旧，或者 FILE2 存在而 FILE1 不存在，则为 <code>true</code>。</li>\n<li><code>[ FILE1 -ef FILE2 ]</code>: 如果 FILE1 和 FILE2 引用相同的设备和 inode 编号，则为 <code>true</code>。</li>\n</ul>\n<p>下面是一个示例。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">FILE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">~/.bashrc</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-f</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is a regular file.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is a directory.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-r</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is readable.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-w</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is writable.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is executable/searchable.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> does not exist\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>$FILE</code> 要放在双引号之中。这样可以防止 <code>$FILE</code> 为空，因为这时 <code>[ -e ]</code> 会判断为真。而放在双引号之中，返回的就总是一个空字符串，<code>[ -e \"\" ]</code> 会判断为伪。</p>\n<h3>字符串判断</h3>\n<p>以下表达式用来判断字符串。</p>\n<ul>\n<li><code>[ string ]</code>: 如果 <code>string</code> 不为空(长度大于 0)，则判断为真。</li>\n<li><code>[ -n string ]</code>: 如果字符串 <code>string</code> 的长度大于零，则判断为真。</li>\n<li><code>[ -z string ]</code>: 如果字符串 <code>string</code> 的长度为零，则判断为真。</li>\n<li><code>[ string1 = string2 ]</code>: 如果 <code>string1</code> 和 <code>string2</code> 相同，则判断为真。</li>\n<li><code>[ string1 == string2 ]</code> 等同于 <code>[ string1 = string2 ]</code>。</li>\n<li><code>[ string1 != string2 ]</code>: 如果 <code>string1</code> 和 <code>string2</code> 不相同，则判断为真。</li>\n<li><code>[ string1 '&gt;' string2 ]</code>: 如果按照字典顺序 <code>string1</code> 排列在 <code>string2</code> 之后，则判断为真。</li>\n<li><code>[ string1 '&lt;' string2 ]</code>: 如果按照字典顺序 <code>string1</code> 排列在 <code>string2</code> 之前，则判断为真。</li>\n</ul>\n<p>注意，<code>test</code> 命令内部的 <code>&gt;</code> 和 <code>&lt;</code>，必须用引号引起来(或者是用反斜杠转义)。否则，它们会被 shell 解释为重定向操作符。</p>\n<p>下面是一个示例。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">ANSWER</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">maybe</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-z</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$ANSWER</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"There is no answer.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt;&amp;2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$ANSWER</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"yes\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"The answer is YES.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">elif</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$ANSWER</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"no\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"The answer is NO.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">elif</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$ANSWER</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"maybe\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"The answer is MAYBE.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"The answer is UNKNOWN.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，首先确定 <code>$ANSWER</code> 字符串是否为空。如果为空，就终止脚本，并把退出状态设为 <code>1</code>。注意，这里的 <code>echo</code> 命令把错误信息 <code>There is no answer.</code> 重定向到标准错误，这是处理错误信息的常用方法。如果 <code>$ANSWER</code> 字符串不为空，就判断它的值是否等于 <code>yes</code>、<code>no</code> 或者 <code>maybe</code>。</p>\n<p>注意，字符串判断时，变量要放在双引号之中，比如 <code>[ -n \"$COUNT\" ]</code>，否则变量替换成字符串以后，<code>test</code> 命令可能会报错，提示参数过多。另外，如果不放在双引号之中，变量为空时，命令会变成 <code>[ -n ]</code>，这时会判断为真。如果放在双引号之中，<code>[ -n \"\" ]</code> 就判断为伪。</p>\n<h3>整数判断</h3>\n<p>下面的表达式用于判断整数。</p>\n<ul>\n<li><code>[ integer1 -eq integer2 ]</code>: 如果 <code>integer1</code> 等于 <code>integer2</code>，则为 <code>true</code>。</li>\n<li><code>[ integer1 -ne integer2 ]</code>: 如果 <code>integer1</code> 不等于 <code>integer2</code>，则为 <code>true</code>。</li>\n<li><code>[ integer1 -le integer2 ]</code>: 如果 <code>integer1</code> 小于或等于 <code>integer2</code>，则为 <code>true</code>。</li>\n<li><code>[ integer1 -lt integer2 ]</code>: 如果 <code>integer1</code> 小于 <code>integer2</code>，则为 <code>true</code>。</li>\n<li><code>[ integer1 -ge integer2 ]</code>: 如果 <code>integer1</code> 大于或等于 <code>integer2</code>，则为 <code>true</code>。</li>\n<li><code>[ integer1 -gt integer2 ]</code>: 如果 <code>integer1</code> 大于 <code>integer2</code>，则为 <code>true</code>。</li>\n</ul>\n<p>下面是一个用法的例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">-5</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-z</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$INT</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is empty.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt;&amp;2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -eq</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is zero.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -lt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is negative.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is positive.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">INT</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> %</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)) </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-eq</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is even.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is odd.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，先判断变量 <code>$INT</code> 是否为空，然后判断是否为 <code>0</code>，接着判断正负，最后通过求余数判断奇偶。</p>\n<h3>正则判断</h3>\n<p><code>[[ expression ]]</code> 这种判断形式，支持正则表达式。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[[ string1 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=~</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> regex ]]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面的语法中，<code>regex</code> 是一个正则表示式，<code>=~</code> 是正则比较运算符。</p>\n<p>下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">-5</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [[ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$INT</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =~</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ^-?[0-9]+$ ]]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is an integer.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is not an integer.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt;&amp;2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，先判断变量 <code>INT</code> 的字符串形式，是否满足 <code>^-?[0-9]+$</code> 的正则模式，如果满足就表明它是一个整数。</p>\n<h3>test 判断的逻辑运算</h3>\n<p>通过逻辑运算，可以把多个 <code>test</code> 判断表达式结合起来，创造更复杂的判断。三种逻辑运算 <code>AND</code>，<code>OR</code>，和 <code>NOT</code>，都有自己的专用符号。</p>\n<ul>\n<li><code>AND</code> 运算: 符号 <code>&amp;&amp;</code>，也可使用参数 <code>-a</code>。</li>\n<li><code>OR</code> 运算: 符号 <code>||</code>，也可使用参数 <code>-o</code>。</li>\n<li><code>NOT</code> 运算: 符号 <code>!</code>。</li>\n</ul>\n<p>下面是一个 <code>AND</code> 的例子，判断整数是否在某个范围之内。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">MIN_VAL</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">MAX_VAL</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">100</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">50</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [[ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$INT</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =~</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ^-?[0-9]+$ ]]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [[ </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -ge</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $MIN_VAL</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> &amp;&amp;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -le</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $MAX_VAL</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$INT</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is within </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$MIN_VAL</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$MAX_VAL</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$INT</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is out of range.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is not an integer.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt;&amp;2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>&amp;&amp;</code> 用来连接两个判断条件: 大于等于 <code>$MIN_VAL</code>，并且小于等于 <code>$MAX_VAL</code>。</p>\n<p>使用否定操作符 <code>!</code> 时，最好用圆括号确定转义的范围。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\(</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -ge</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $MIN_VAL</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -a</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -le</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $MAX_VAL</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$INT</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is outside </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$MIN_VAL</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$MAX_VAL</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$INT</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is in range.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>test</code> 命令内部使用的圆括号，必须使用引号或者转义，否则会被 Bash 解释。</p>\n<h3>算术判断</h3>\n<p>Bash 还提供了 <code>((...))</code> 作为算术条件，进行算术运算的判断。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ((</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> &gt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)); </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"true\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码执行后，会打印出 <code>true</code>。</p>\n<p>注意，算术判断不需要使用 <code>test</code> 命令，而是直接使用 <code>((...))</code> 结构。这个结构的返回值，决定了判断的真伪。</p>\n<p>如果算术计算的结果是非零值，则表示判断成立。这一点跟命令的返回值正好相反，需要小心。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ((1)); </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"It is true.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">It</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ((0)); </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"It is true.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"it is false.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">It</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>((1))</code> 表示判断成立，<code>((0))</code> 表示判断不成立。</p>\n<p>算术条件 <code>((...))</code> 也可以用于变量赋值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (( </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ));</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> echo </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"foo is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>(( foo = 5 ))</code> 完成了两件事情。首先把 <code>5</code> 赋值给变量 <code>foo</code>，然后根据返回值 <code>5</code>，判断条件为真。</p>\n<p>注意，赋值语句返回等号右边的值，如果返回的是 <code>0</code>，则判断为假。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (( </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ));</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> echo </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"It is true.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> echo </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"It is false.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">It</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面是用算术条件改写的数值判断脚本。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">-5</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [[ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$INT</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =~</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ^-?[0-9]+$ ]]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ((</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> ==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)); </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is zero.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ((</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> &lt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)); </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">      echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is negative.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">      echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is positive.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (( ((</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">INT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> %</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)) == 0)); </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">      echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is even.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">      echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is odd.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"INT is not an integer.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt;&amp;2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>只要是算术表达式，都能用于 <code>((...))</code> 语法，详见 <a href=\"/linux/bash/arithmetic.html\" target=\"_blank\">Bash 的算术运算</a> 一章。</p>\n<h3>普通命令的逻辑运算</h3>\n<p>如果 <code>if</code> 结构使用的不是 <code>test</code> 命令，而是普通命令，比如上一节的 <code>((...))</code> 算术运算，或者 <code>test</code> 命令与普通命令混用，那么可以使用 Bash 的命令控制操作符 <code>&amp;&amp;</code>(AND)和 <code>||</code>(OR)，进行多个命令的逻辑运算。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">command1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;&amp; </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">command2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">command1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> || </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">command2</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>对于 <code>&amp;&amp;</code> 操作符，先执行 <code>command1</code>，只有 <code>command1</code> 执行成功后， 才会执行 <code>command2</code>。对于 <code>||</code> 操作符，先执行 <code>command1</code>，只有 <code>command1</code> 执行失败后， 才会执行 <code>command2</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">mkdir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> temp</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;&amp; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> temp</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面的命令会创建一个名为 <code>temp</code> 的目录，执行成功后，才会执行第二个命令，进入这个目录。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-d</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> temp ] || </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">mkdir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> temp</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面的命令会测试目录 <code>temp</code> 是否存在，如果不存在，就会执行第二个命令，创建这个目录。这种写法非常有助于在脚本中处理错误。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -d</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> temp ] &amp;&amp; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面的命令中，如果 <code>temp</code> 子目录不存在，脚本会终止，并且返回值为 <code>1</code>。</p>\n<p>下面就是 <code>if</code> 与 <code>&amp;&amp;</code> 结合使用的写法。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ condition ] &amp;&amp; [ condition ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  command</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面是一个示例。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#! /bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filename</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$3</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> grep</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $word1</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $filename</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;&amp; </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">grep</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $word2</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $filename</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$word1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> and </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$word2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> are both in </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$filename</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子只有在指定文件里面，同时存在搜索词 <code>word1</code> 和 <code>word2</code>，就会执行 <code>if</code> 的命令部分。</p>\n<p>下面的示例演示如何将一个 <code>&amp;&amp;</code> 判断表达式，改写成对应的 <code>if</code> 结构。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[[ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$dir_name</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]] &amp;&amp; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$dir_name</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;&amp; </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">rm</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [[ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$dir_name</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"No such directory: '</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$dir_name</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt;&amp;2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ! </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$dir_name</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Cannot cd to '</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$dir_name</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt;&amp;2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ! </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">rm</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"File deletion failed. Check results\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt;&amp;2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>case 结构</h2>\n<p><code>case</code> 结构用于多值判断，可以为每个值指定对应的命令，跟包含多个 <code>elif</code> 的 <code>if</code> 结构等价，但是语义更好。它的语法如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">case</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> expression </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">in</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  pattern</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> )</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    commands</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  pattern</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> )</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    commands</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">esac</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>expression</code> 是一个表达式，<code>pattern</code> 是表达式的值或者一个模式，可以有多条，用来匹配多个值，每条以两个分号 (<code>;</code>) 结尾。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"输入一个 1 到 3 之间的数字(包含两端)&gt; \"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> character</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">case</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $character</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  * ) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 输入不符合要求</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">esac</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，最后一条匹配语句的模式是 <code>*</code>，这个通配符可以匹配其他字符和没有输入字符的情况，类似 <code>if</code> 的 <code>else</code> 部分。</p>\n<p>下面是另一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">OS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">uname</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">case</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$OS</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  FreeBSD</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"This is FreeBSD\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  Darwin</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"This is Mac OSX\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  AIX</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"This is AIX\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  Minix</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"This is Minix\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  Linux</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"This is Linux\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  *) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Failed to identify this OS\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">esac</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子判断当前是什么操作系统。</p>\n<p><code>case</code> 的匹配模式可以使用各种通配符，下面是一些例子。</p>\n<ul>\n<li><code>a)</code>: 匹配 <code>a</code>。</li>\n<li><code>a|b)</code>: 匹配 <code>a</code> 或 <code>b</code>。</li>\n<li><code>[[:alpha:]])</code>: 匹配单个字母。</li>\n<li><code>???)</code>: 匹配 3 个字符的单词。</li>\n<li><code>*.txt)</code>: 匹配 <code>.txt</code> 结尾。</li>\n<li><code>*)</code>: 匹配任意输入，通过作为 <code>case</code> 结构的最后一个模式。</li>\n</ul>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"输入一个字母或数字 &gt; \"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> character</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">case</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $character</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  [[:lower:]]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> |</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\"> [[:upper:]]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ) </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"输入了字母 </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$character</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                              ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  [0-9]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> )                     </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"输入了数字 </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$character</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                              ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  * )                         </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"输入不符合要求\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">esac</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，使用通配符 <code>[[:lower:]] | [[:upper:]]</code> 匹配字母，<code>[0-9]</code> 匹配数字。</p>\n<p>Bash 4.0 之前，<code>case</code> 结构只能匹配一个条件，然后就会退出 <code>case</code> 结构。Bash 4.0 之后，允许匹配多个条件，这时可以用 <code>;;&amp;</code> 终止每个条件块。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># test.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Type a character &gt; \"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">case</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $REPLY</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  [[:upper:]]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)    </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$REPLY</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">' is upper case.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">&amp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  [[:lower:]]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)    </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$REPLY</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">' is lower case.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">&amp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  [[:alpha:]]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)    </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$REPLY</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">' is alphabetic.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">&amp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  [[:digit:]]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)    </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$REPLY</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">' is a digit.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">&amp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  [[:graph:]]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)    </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$REPLY</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">' is a visible character.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">&amp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  [[:punct:]]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)    </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$REPLY</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">' is a punctuation symbol.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">&amp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  [[:space:]]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)    </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$REPLY</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">' is a whitespace character.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">&amp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">  [[:xdigit:]]</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)   </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$REPLY</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">' is a hexadecimal digit.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ;;</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">&amp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">esac</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行上面的脚本，会得到下面的结果。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> test.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Type</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> character</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">a</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">'a'</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lower</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> case.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">'a'</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> alphabetic.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">'a'</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> visible</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> character.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">'a'</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hexadecimal</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> digit.</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到条件语句结尾添加了 <code>;;&amp;</code> 以后，在匹配一个条件之后，并没有退出 <code>case</code> 结构，而是继续判断下一个条件。</p>\n<h2>参考链接</h2>\n<ul>\n<li><a href=\"http://linuxcommand.org/tlcl.php\" target=\"_blank\" rel=\"noopener noreferrer\">The Linux command-line</a>, William Shotts</li>\n<li><a href=\"https://www.pcwdld.com/linux-commands-cheat-sheet\" target=\"_blank\" rel=\"noopener noreferrer\">Linux Commands Cheat Sheet</a> (一个很简短的 CheatSheet)</li>\n</ul>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "脚本除错",
      "url": "https://blog.tlcsdm.com/linux/bash/debug.html",
      "id": "https://blog.tlcsdm.com/linux/bash/debug.html",
      "summary": "本章介绍如何对 Shell 脚本除错。",
      "content_html": "<p>本章介绍如何对 Shell 脚本除错。</p>\n<!-- more -->\n<h2>常见错误</h2>\n<p>编写 Shell 脚本的时候，一定要考虑到命令失败的情况，否则很容易出错。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#! /bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">dir_name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/path/not/exist</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $dir_name</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">rm</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面脚本中，如果目录 <code>$dir_name</code> 不存在，<code>cd $dir_name</code> 命令就会执行失败。这时，就不会改变当前目录，脚本会继续执行下去，导致 <code>rm *</code> 命令删光当前目录的文件。</p>\n<p>如果改成下面的样子，也会有问题。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $dir_name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;&amp; </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">rm</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面脚本中，只有 <code>cd $dir_name</code> 执行成功，才会执行 <code>rm *</code>。但是，如果变量 <code>$dir_name</code> 为空，<code>cd</code> 就会进入用户主目录，从而删光用户主目录的文件。</p>\n<p>下面的写法才是正确的。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[[ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-d</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $dir_name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]] &amp;&amp; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $dir_name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;&amp; </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">rm</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面代码中，先判断目录 <code>$dir_name</code> 是否存在，然后才执行其他操作。</p>\n<p>如果不放心删除什么文件，可以先打印出来看一下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[[ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-d</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $dir_name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]] &amp;&amp; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $dir_name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;&amp; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> rm</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令中，<code>echo rm *</code> 不会删除文件，只会打印出来要删除的文件。</p>\n<h2><code>bash</code> 的 <code>-x</code> 参数</h2>\n<p><code>bash</code> 的 <code>-x</code> 参数可以在执行每一行命令之前，打印该命令。这样就不用自己输出执行的命令，一旦出错，比较容易追查。</p>\n<p>下面是一个脚本 <code>script.sh</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># script.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>加上 <code>-x</code> 参数，执行每条命令之前，都会显示该命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，行首为 <code>+</code> 的行，显示该行是所要执行的命令，下一行才是该命令的执行结果。</p>\n<p>下面再看一个 <code>-x</code> 写在脚本内部的例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#! /bin/bash -x</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># trouble: script to demonstrate common errors</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">number</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$number</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Number is equal to 1.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Number is not equal to 1.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的脚本执行之后，会输出每一行命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> trouble</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> number=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '['</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ']'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Number is equal to 1.'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Number</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> equal</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 1.</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>输出的命令之前的 <code>+</code> 号，是由系统变量 <code>PS4</code> 决定，可以修改这个变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> export</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> PS4='$LINENO + '</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> trouble</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> number=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">7</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '['</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ']'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">8</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Number is equal to 1.'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Number</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> equal</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 1.</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>另外，<code>set</code> 命令也可以设置 Shell 的行为参数，有利于脚本除错，详见 <a href=\"/linux/bash/set.html\" target=\"_blank\">set 命令</a> 一章。</p>\n<h2>环境变量</h2>\n<p>有一些环境变量常用于除错。</p>\n<h3>LINENO</h3>\n<p>变量 <code>LINENO</code> 返回它在脚本里面的行号。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"This is line </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$LINENO</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行上面的脚本 <code>test.sh</code>，<code>$LINENO</code> 会返回 <code>3</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ./test.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">This</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> line</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3>FUNCNAME</h3>\n<p>变量 <code>FUNCNAME</code> 返回一个数组，内容是当前的函数调用堆栈。该数组的 0 号成员是当前调用的函数，1 号成员是调用当前函数的函数，以此类推。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> func1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func1: FUNCNAME0 is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">FUNCNAME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[0]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func1: FUNCNAME1 is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">FUNCNAME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[1]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func1: FUNCNAME2 is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">FUNCNAME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[2]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  func2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> func2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func2: FUNCNAME0 is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">FUNCNAME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[0]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func2: FUNCNAME1 is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">FUNCNAME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[1]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func2: FUNCNAME2 is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">FUNCNAME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[2]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行上面的脚本 <code>test.sh</code>，结果如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ./test.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func1:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> FUNCNAME0</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> func1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func1:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> FUNCNAME1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> main</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func1:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> FUNCNAME2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func2:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> FUNCNAME0</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> func2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func2:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> FUNCNAME1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> func1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func2:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> FUNCNAME2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> main</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，执行 <code>func1</code> 时，变量 <code>FUNCNAME</code> 的 0 号成员是 <code>func1</code>，1 号成员是调用 <code>func1</code> 的主脚本 <code>main</code>。执行 <code>func2</code> 时，变量 <code>FUNCNAME</code> 的 0 号成员是 <code>func2</code>，1 号成员是调用 <code>func2</code> 的 <code>func1</code>。</p>\n<h3>BASH_SOURCE</h3>\n<p>变量 <code>BASH_SOURCE</code> 返回一个数组，内容是当前的脚本调用堆栈。该数组的 0 号成员是当前执行的脚本，1 号成员是调用当前脚本的脚本，以此类推，跟变量 <code>FUNCNAME</code> 是一一对应关系。</p>\n<p>下面有两个子脚本 <code>lib1.sh</code> 和 <code>lib2.sh</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># lib1.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> func1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func1: BASH_SOURCE0 is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">BASH_SOURCE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[0]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func1: BASH_SOURCE1 is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">BASH_SOURCE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[1]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func1: BASH_SOURCE2 is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">BASH_SOURCE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[2]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  func2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># lib2.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> func2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func2: BASH_SOURCE0 is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">BASH_SOURCE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[0]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func2: BASH_SOURCE1 is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">BASH_SOURCE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[1]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func2: BASH_SOURCE2 is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">BASH_SOURCE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[2]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后，主脚本 <code>main.sh</code> 调用上面两个子脚本。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># main.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">source</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib1.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">source</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib2.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行主脚本 <code>main.sh</code>，会得到下面的结果。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ./main.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func1:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> BASH_SOURCE0</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib1.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func1:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> BASH_SOURCE1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ./main.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func1:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> BASH_SOURCE2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func2:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> BASH_SOURCE0</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib2.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func2:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> BASH_SOURCE1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib1.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func2:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> BASH_SOURCE2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ./main.sh</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，执行函数 <code>func1</code> 时，变量 <code>BASH_SOURCE</code> 的 0 号成员是 <code>func1</code> 所在的脚本 <code>lib1.sh</code>，1 号成员是主脚本 <code>main.sh</code>；执行函数 <code>func2</code> 时，变量 <code>BASH_SOURCE</code> 的 0 号成员是 <code>func2</code> 所在的脚本 <code>lib2.sh</code>，1 号成员是调用 <code>func2</code> 的脚本 <code>lib1.sh</code>。</p>\n<h3>BASH_LINENO</h3>\n<p>变量 <code>BASH_LINENO</code> 返回一个数组，内容是每一轮调用对应的行号。<code>${BASH_LINENO[$i]}</code> 跟 <code>${FUNCNAME[$i]}</code> 是一一对应关系，表示 <code>${FUNCNAME[$i]}</code> 在调用它的脚本文件 <code>${BASH_SOURCE[$i+1]}</code> 里面的行号。</p>\n<p>下面有两个子脚本 <code>lib1.sh</code> 和 <code>lib2.sh</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># lib1.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> func1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func1: BASH_LINENO is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">BASH_LINENO</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[0]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func1: FUNCNAME is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">FUNCNAME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[0]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func1: BASH_SOURCE is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">BASH_SOURCE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[1]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  func2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># lib2.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> func2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func2: BASH_LINENO is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">BASH_LINENO</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[0]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func2: FUNCNAME is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">FUNCNAME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[0]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"func2: BASH_SOURCE is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">BASH_SOURCE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">[1]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#98C379\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后，主脚本 <code>main.sh</code> 调用上面两个子脚本。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># main.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">source</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib1.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">source</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib2.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行主脚本 <code>main.sh</code>，会得到下面的结果。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ./main.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func1:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> BASH_LINENO</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 7</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func1:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> FUNCNAME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> func1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func1:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> BASH_SOURCE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> main.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func2:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> BASH_LINENO</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 8</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func2:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> FUNCNAME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> func2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">func2:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> BASH_SOURCE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib1.sh</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，函数 <code>func1</code> 是在 <code>main.sh</code> 的第 7 行调用，函数 <code>func2</code> 是在 <code>lib1.sh</code> 的第 8 行调用的。</p>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Bash 的模式扩展",
      "url": "https://blog.tlcsdm.com/linux/bash/expansion.html",
      "id": "https://blog.tlcsdm.com/linux/bash/expansion.html",
      "summary": "简介 Shell 接收到用户输入的命令以后，会根据空格将用户的输入，拆分成一个个词元(token)。然后，Shell 会扩展词元里面的特殊字符，扩展完成后才会调用相应的命令。 这种特殊字符的扩展，称为模式扩展(globbing)。其中有些用到通配符，又称为通配符扩展(wildcard expansion)。Bash 一共提供八种扩展。 波浪线扩展 ? ...",
      "content_html": "<h2>简介</h2>\n<p>Shell 接收到用户输入的命令以后，会根据空格将用户的输入，拆分成一个个词元(token)。然后，Shell 会扩展词元里面的特殊字符，扩展完成后才会调用相应的命令。</p>\n<p>这种特殊字符的扩展，称为模式扩展(globbing)。其中有些用到通配符，又称为通配符扩展(wildcard expansion)。Bash 一共提供八种扩展。</p>\n<ul>\n<li>波浪线扩展</li>\n<li><code>?</code> 字符扩展</li>\n<li><code>*</code> 字符扩展</li>\n<li>方括号扩展</li>\n<li>大括号扩展</li>\n<li>变量扩展</li>\n<li>子命令扩展</li>\n<li>算术扩展</li>\n</ul>\n<p>本章介绍这八种扩展。</p>\n<p>Bash 是先进行扩展，再执行命令。因此，扩展的结果是由 Bash 负责的，与所要执行的命令无关。命令本身并不存在参数扩展，收到什么参数就原样执行。这一点务必需要记住。</p>\n<p><code>globbing</code> 这个词，来自于早期的 Unix 系统有一个 <code>/etc/glob</code> 文件，保存扩展的模板。后来 Bash 内置了这个功能，但是这个名字就保留了下来。</p>\n<p>模式扩展与正则表达式的关系是，模式扩展早于正则表达式出现，可以看作是原始的正则表达式。它的功能没有正则那么强大灵活，但是优点是简单和方便。</p>\n<p>Bash 允许用户关闭扩展。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> noglob</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -f</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面的命令可以重新打开扩展。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> set</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> noglob</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> set</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +f</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>波浪线扩展</h2>\n<p>波浪线 <code>~</code> 会自动扩展成当前用户的主目录。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/home/me</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>~/dir</code> 表示扩展成主目录的某个子目录，<code>dir</code> 是主目录里面的一个子目录名。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 进入 /home/me/foo 目录</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~/foo</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>~user</code> 表示扩展成用户 <code>user</code> 的主目录。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/home/foo</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/root</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，Bash 会根据波浪号后面的用户名，返回该用户的主目录。</p>\n<p>如果 <code>~user</code> 的 <code>user</code> 是不存在的用户名，则波浪号扩展不起作用。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~nonExistedUser</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">~nonExistedUser</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>~+</code> 会扩展成当前所在的目录，等同于 <code>pwd</code> 命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~/foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~+</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/home/me/foo</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2><code>?</code> 字符扩展</h2>\n<p><code>?</code> 字符代表文件路径里面的任意单个字符，不包括空字符。比如，<code>Data???</code> 匹配所有 <code>Data</code> 后面跟着三个字符的文件名。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 存在文件 a.txt 和 b.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ?.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令中，<code>?</code> 表示单个字符，所以会同时匹配 <code>a.txt</code> 和 <code>b.txt</code>。</p>\n<p>如果匹配多个字符，就需要多个 <code>?</code> 连用。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 存在文件 a.txt、b.txt 和 ab.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ??.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ab.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令中，<code>??</code> 匹配了两个字符。</p>\n<p><code>?</code> 字符扩展属于文件名扩展，只有文件确实存在的前提下，才会发生扩展。如果文件不存在，扩展就不会发生。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 当前目录有 a.txt 文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ?.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a.txt</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 当前目录为空目录</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ?.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">?.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，如果 <code>?.txt</code> 可以扩展成文件名，<code>echo</code> 命令会输出扩展后的结果；如果不能扩展成文件名，<code>echo</code> 就会原样输出 <code>?.txt</code>。</p>\n<h2><code>*</code> 字符扩展</h2>\n<p><code>*</code> 字符代表文件路径里面的任意数量的任意字符，包括零个字符。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 存在文件 a.txt、b.txt 和 ab.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ab.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>*.txt</code> 代表后缀名为 <code>.txt</code> 的所有文件。</p>\n<p>如果想输出当前目录的所有文件，直接用 <code>*</code> 即可。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>*</code> 可以匹配空字符，下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 存在文件 a.txt、b.txt 和 ab.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ab.txt</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">b</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">b.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ab.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注意，<code>*</code> 不会匹配隐藏文件(以 <code>.</code> 开头的文件)，即 <code>ls *</code> 不会输出隐藏文件。</p>\n<p>如果要匹配隐藏文件，需要写成 <code>.*</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 显示所有隐藏文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果要匹配隐藏文件，同时要排除 <code>.</code> 和 <code>..</code> 这两个特殊的隐藏文件，可以与方括号扩展结合使用，写成 <code>.[!.]*</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .[!.]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>注意，<code>*</code> 字符扩展属于文件名扩展，只有文件确实存在的前提下才会扩展。如果文件不存在，就会原样输出。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 当前目录不存在 c 开头的文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">c*.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，当前目录里面没有 <code>c</code> 开头的文件，导致 <code>c*.txt</code> 会原样输出。</p>\n<p><code>*</code> 只匹配当前目录，不会匹配子目录。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 子目录有一个 a.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 无效的写法</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.txt</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 有效的写法</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子，文本文件在子目录，<code>*.txt</code> 不会产生匹配，必须写成 <code>*/*.txt</code>。有几层子目录，就必须写几层星号。</p>\n<p>Bash 4.0 引入了一个参数 <code>globstar</code>，当该参数打开时，允许 <code>**</code> 匹配零个或多个子目录。因此，<code>**/*.txt</code> 可以匹配顶层的文本文件和任意深度子目录的文本文件。详细介绍请看后面 <code>shopt</code> 命令的介绍。</p>\n<h2>方括号扩展</h2>\n<p>方括号扩展的形式是 <code>[...]</code>，只有文件确实存在的前提下才会扩展。如果文件不存在，就会原样输出。括号之中的任意一个字符。比如，<code>[aeiou]</code> 可以匹配五个元音字母中的任意一个。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 存在文件 a.txt 和 b.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ab].txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b.txt</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 只存在文件 a.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ab].txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>[ab]</code> 可以匹配 <code>a</code> 或 <code>b</code>，前提是确实存在相应的文件。</p>\n<p>方括号扩展属于文件名匹配，即扩展后的结果必须符合现有的文件路径。如果不存在匹配，就会保持原样，不进行扩展。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 不存在文件 a.txt 和 b.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ab].txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 无法访问'[ab].txt':</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 没有那个文件或目录</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，由于扩展后的文件不存在，<code>[ab].txt</code> 就原样输出了，导致 <code>ls</code> 命名报错。</p>\n<p>方括号扩展还有两种变体: <code>[^...]</code> 和 <code>[!...]</code>。它们表示匹配不在方括号里面的字符，这两种写法是等价的。比如，<code>[^abc]</code> 或 <code>[!abc]</code> 表示匹配除了 <code>a</code>、<code>b</code>、<code>c</code> 以外的字符。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 存在 aaa、bbb、aba 三个文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ?[!a]?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">aba</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bbb</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令中，<code>[!a]</code> 表示文件名第二个字符不是 <code>a</code> 的文件名，所以返回了 <code>aba</code> 和 <code>bbb</code> 两个文件。</p>\n<p>注意，如果需要匹配 <code>[</code> 字符，可以放在方括号内，比如 <code>[[aeiou]</code>。如果需要匹配连字号 <code>-</code>，只能放在方括号内部的开头或结尾，比如 <code>[-aeiou]</code> 或 <code>[aeiou-]</code>。</p>\n<h2>[start-end] 扩展</h2>\n<p>方括号扩展有一个简写形式 <code>[start-end]</code>，表示匹配一个连续的范围。比如，<code>[a-c]</code> 等同于 <code>[abc]</code>，<code>[0-9]</code> 匹配 <code>[0123456789]</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 存在文件 a.txt、b.txt 和 c.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [a-c].txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">b.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">c.txt</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 存在文件 report1.txt、report2.txt 和 report3.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> report[0-9].txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">report1.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">report2.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">report3.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">...</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面是一些常用简写的例子。</p>\n<ul>\n<li><code>[a-z]</code>: 所有小写字母。</li>\n<li><code>[a-zA-Z]</code>: 所有小写字母与大写字母。</li>\n<li><code>[a-zA-Z0-9]</code>: 所有小写字母、大写字母与数字。</li>\n<li><code>[abc]*</code>: 所有以 <code>a</code>、<code>b</code>、<code>c</code> 字符之一开头的文件名。</li>\n<li><code>program.[co]</code>: 文件 <code>program.c</code> 与文件 <code>program.o</code>。</li>\n<li><code>BACKUP.[0-9][0-9][0-9]</code>: 所有以 <code>BACKUP.</code> 开头，后面是三个数字的文件名。</li>\n</ul>\n<p>这种简写形式有一个否定形式 <code>[!start-end]</code>，表示匹配不属于这个范围的字符。比如，<code>[!a-zA-Z]</code> 表示匹配非英文字母的字符。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> report[!1–3].txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">report4.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> report5.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>[!1-3]</code> 表示排除 1、2 和 3。</p>\n<h2>大括号扩展</h2>\n<p>大括号扩展 <code>{...}</code> 表示分别扩展成大括号里面的所有值，各个值之间使用逗号分隔。比如，<code>{1,2,3}</code> 扩展成 <code>1 2 3</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {1,2,3}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d{a,e,i,u,o}g</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">dag</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> deg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dig</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dug</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dog</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Front-{A,B,C}-Back</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Front-A-Back</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Front-B-Back</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Front-C-Back</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注意，大括号扩展不是文件名扩展。它会扩展成所有给定的值，而不管是否有对应的文件存在。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {a,b,c}.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 无法访问'a.txt':</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 没有那个文件或目录</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 无法访问'b.txt':</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 没有那个文件或目录</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 无法访问'c.txt':</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 没有那个文件或目录</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，即使不存在对应的文件，<code>{a,b,c}</code> 依然扩展成三个文件名，导致 <code>ls</code> 命令报了三个错误。</p>\n<p>另一个需要注意的地方是，大括号内部的逗号前后不能有空格。否则，大括号扩展会失效。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，逗号前后有空格，Bash 就会认为这不是大括号扩展，而是三个独立的参数。</p>\n<p>逗号前面可以没有值，表示扩展的第一项为空。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cp</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a.log{,.bak}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># cp a.log a.log.bak</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>大括号可以嵌套。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {j{p,pe}g,png}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">jpg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> jpeg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> png</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a{A{1,2},B{3,4}}b</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">aA1b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> aA2b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> aB3b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> aB4b</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>大括号也可以与其他模式联用，并且总是先于其他模式进行扩展。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {cat,d</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cat</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dawg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dig</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dog</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> doug</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dug</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，会先进行大括号扩展，然后进行 <code>*</code> 扩展。</p>\n<p>大括号可以用于多字符的模式，方括号不行(只能匹配单字符)。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {cat,dog}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cat</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dog</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>由于大括号扩展 <code>{...}</code> 不是文件名扩展，所以它总是会扩展的。这与方括号扩展 <code>[...]</code> 完全不同，如果匹配的文件不存在，方括号就不会扩展。这一点要注意区分。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 不存在 a.txt 和 b.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ab].txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[ab].txt</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {a,b}.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，如果不存在 <code>a.txt</code> 和 <code>b.txt</code>，那么 <code>[ab].txt</code> 就会变成一个普通的文件名，而 <code>{a,b}.txt</code> 可以照样扩展。</p>\n<h2>{start..end} 扩展</h2>\n<p>大括号扩展有一个简写形式 <code>{start..end}</code>，表示扩展成一个连续序列。比如，<code>{a..z}</code> 可以扩展成 26 个小写英文字母。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {a..c}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d{a..d}g</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">dag</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dbg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dcg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ddg</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {1..4}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 4</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Number_{1..5}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Number_1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Number_2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Number_3</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Number_4</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Number_5</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这种简写形式支持逆序。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {c..a}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {5..1}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 4</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注意，如果遇到无法理解的简写，大括号模式就会原样输出，不会扩展。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {a1..3c}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a1..3c}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这种简写形式可以嵌套使用，形成复杂的扩展。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .{mp{3..4},m4{a,b,p,v}}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">.mp3</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .mp4</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .m4a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .m4b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .m4p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .m4v</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>大括号扩展的常见用途为新建一系列目录。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">mkdir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {2007..2009}-{01..12}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令会新建 36 个子目录，每个子目录的名字都是”年份-月份“。</p>\n<p>这个写法的另一个常见用途，是直接用于 <code>for</code> 循环。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1..4}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子会循环 4 次。</p>\n<p>如果整数前面有前导 <code>0</code>，扩展输出的每一项都有前导 <code>0</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {01..5}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">01</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 02</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 03</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 04</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 05</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {001..5}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">001</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 002</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 003</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 004</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 005</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这种简写形式还可以使用第二个双点号(<code>start..end..step</code>)，用来指定扩展的步长。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {0..8..2}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 4</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 6</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 8</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码将 <code>0</code> 扩展到 <code>8</code>，每次递增的长度为 <code>2</code>，所以一共输出 5 个数字。</p>\n<p>多个简写形式连用，会有循环处理的效果。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> {a..c}{1..3}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a3</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b3</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>变量扩展</h2>\n<p>Bash 将美元符号 <code>$</code> 开头的词元视为变量，将其扩展成变量值，详见<a href=\"/linux/bash/variable.html\" target=\"_blank\">Bash 变量</a> 一章。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $SHELL</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/bin/bash</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>变量名除了放在美元符号后面，也可以放在 <code>${}</code> 里面。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">SHELL</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/bin/bash</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>${!string*}</code> 或 <code>${!string@}</code> 返回所有匹配给定字符串 <code>string</code> 的变量名。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">S</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">SECONDS</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> SHELL</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> SHELLOPTS</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> SHLVL</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> SSH_AGENT_PID</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> SSH_AUTH_SOCK</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>${!S*}</code> 扩展成所有以 <code>S</code> 开头的变量名。</p>\n<h2>子命令扩展</h2>\n<p><code>$(...)</code> 可以扩展成另一个命令的运行结果，该命令的所有输出都会作为返回值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">date</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Tue</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Jan</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 28</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 00:01:13</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> CST</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2020</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>$(date)</code> 返回 <code>date</code> 命令的运行结果。</p>\n<p>还有另一种较老的语法，子命令放在反引号之中，也可以扩展成命令的运行结果。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> `</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">date</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">`</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Tue</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Jan</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 28</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 00:01:13</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> CST</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2020</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>$(...)</code> 可以嵌套，比如 <code>$(ls $(pwd))</code>。</p>\n<h2>算术扩展</h2>\n<p><code>$((...))</code> 可以扩展成整数运算的结果，详见 <a href=\"/linux/bash/arithmetic.html\" target=\"_blank\">Bash 的算术运算</a> 一章。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">4</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>字符类</h2>\n<p><code>[[:class:]]</code> 表示一个字符类，扩展成某一类特定字符之中的一个。常用的字符类如下。</p>\n<ul>\n<li><code>[[:alnum:]]</code>: 匹配任意英文字母与数字</li>\n<li><code>[[:alpha:]]</code>: 匹配任意英文字母</li>\n<li><code>[[:blank:]]</code>: 空格和 Tab 键。</li>\n<li><code>[[:cntrl:]]</code>: ASCII 码 0-31 的不可打印字符。</li>\n<li><code>[[:digit:]]</code>: 匹配任意数字 0-9。</li>\n<li><code>[[:graph:]]</code>: A-Z、a-z、0-9 和标点符号。</li>\n<li><code>[[:lower:]]</code>: 匹配任意小写字母 a-z。</li>\n<li><code>[[:print:]]</code>: ASCII 码 32-127 的可打印字符。</li>\n<li><code>[[:punct:]]</code>: 标点符号(除了 A-Z、a-z、0-9 的可打印字符)。</li>\n<li><code>[[:space:]]</code>: 空格、Tab、LF(10)、VT(11)、FF(12)、CR(13)。</li>\n<li><code>[[:upper:]]</code>: 匹配任意大写字母 A-Z。</li>\n<li><code>[[:xdigit:]]</code>: 16 进制字符(A-F、a-f、0-9)。</li>\n</ul>\n<p>请看下面的例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [[:upper:]]*</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令输出所有大写字母开头的文件名。</p>\n<p>字符类的第一个方括号后面，可以加上感叹号 <code>!</code>，表示否定。比如，<code>[![:digit:]]</code> 匹配所有非数字。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [![:digit:]]*</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令输出所有不以数字开头的文件名。</p>\n<p>字符类也属于文件名扩展，如果没有匹配的文件名，字符类就会原样输出。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 不存在以大写字母开头的文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [[:upper:]]*</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[[:upper:]]*</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，由于没有可匹配的文件，字符类就原样输出了。</p>\n<h2>使用注意点</h2>\n<p>通配符有一些使用注意点，不可不知。</p>\n<p>(1)<strong>通配符是先解释，再执行。</strong></p>\n<p>Bash 接收到命令以后，发现里面有通配符，会进行通配符扩展，然后再执行命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ab.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令的执行过程是，Bash 先将 <code>a*.txt</code> 扩展成 <code>ab.txt</code>，然后再执行 <code>ls ab.txt</code>。</p>\n<p>(2)<strong>文件名扩展在不匹配时，会原样输出。</strong></p>\n<p>文件名扩展在没有可匹配的文件时，会原样输出。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 不存在 r 开头的文件名</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> r</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">r*</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，由于不存在 <code>r</code> 开头的文件名，<code>r*</code> 会原样输出。</p>\n<p>下面是另一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.csv</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.csv:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> No</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> such</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> file</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> or</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> directory</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>另外，前面已经说过，大括号扩展 <code>{...}</code> 不是文件名扩展。</p>\n<p>(3)<strong>只适用于单层路径。</strong></p>\n<p>所有文件名扩展只匹配单层路径，不能跨目录匹配，即无法匹配子目录里面的文件。或者说，<code>?</code> 或 <code>*</code> 这样的通配符，不能匹配路径分隔符 (<code>/</code>)。</p>\n<p>如果要匹配子目录里面的文件，可以写成下面这样。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>Bash 4.0 新增了一个 <code>globstar</code> 参数，允许 <code>**</code> 匹配零个或多个子目录，详见后面 <code>shopt</code> 命令的介绍。</p>\n<p>(4)<strong>文件名可以使用通配符。</strong></p>\n<p>Bash 允许文件名使用通配符，即文件名包括特殊字符。这时引用文件名，需要把文件名放在单引号里面。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> touch</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'fo*'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fo*</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码创建了一个 <code>fo*</code> 文件，这时 <code>*</code> 就是文件名的一部分。</p>\n<h2>量词语法</h2>\n<p>量词语法用来控制模式匹配的次数。它只有在 Bash 的 <code>extglob</code> 参数打开的情况下才能使用，不过一般是默认打开的。下面的命令可以查询。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shopt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> extglob</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">extglob</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">         on</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>量词语法有下面几个。</p>\n<ul>\n<li><code>?(pattern-list)</code>: 匹配零个或一个模式。</li>\n<li><code>*(pattern-list)</code>: 匹配零个或多个模式。</li>\n<li><code>+(pattern-list)</code>: 匹配一个或多个模式。</li>\n<li><code>@(pattern-list)</code>: 只匹配一个模式。</li>\n<li><code>!(pattern-list)</code>: 匹配零个或一个以上的模式，但不匹配单独一个的模式。</li>\n</ul>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> abc?</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">.</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">abctxt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> abc.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>?(.)</code> 匹配零个或一个点。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> abc?</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">def</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">abc</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> abcdef</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>?(def)</code> 匹配零个或一个 <code>def</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> abc+</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">.txt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">|</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">.php</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">abc.php</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> abc.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>+(.txt|.php)</code> 匹配文件有一个 <code>.txt</code> 或 <code>.php</code> 后缀名。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> abc+</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">.txt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">abc.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> abc.txt.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>+(.txt)</code> 匹配文件有一个或多个 <code>.txt</code> 后缀名。</p>\n<p>量词语法也属于文件名扩展，如果不存在可匹配的文件，就会原样输出。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 没有 abc 开头的文件名</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> abc?</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">def</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 无法访问'abc?(def)':</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 没有那个文件或目录</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，由于没有可匹配的文件，<code>abc?(def)</code> 就原样输出，导致 <code>ls</code> 命令报错。</p>\n<h2>shopt 命令</h2>\n<p><code>shopt</code> 命令可以调整 Bash 的行为。它有好几个参数跟通配符扩展有关。</p>\n<p><code>shopt</code> 命令的使用方法如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 打开某个参数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [optionname]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 关闭某个参数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -u</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [optionname]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 查询某个参数关闭还是打开</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shopt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [optionname]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>\n<p><strong>dotglob 参数</strong></p>\n<p><code>dotglob</code> 参数可以让扩展结果包括隐藏文件(即点开头的文件)。</p>\n<p>正常情况下，扩展结果不包括隐藏文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">abc.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>打开 <code>dotglob</code>，就会包括隐藏文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dotglob</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">abc.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .config</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p><strong>nullglob 参数</strong></p>\n<p><code>nullglob</code> 参数可以让通配符不匹配任何文件名时，返回空字符。</p>\n<p>默认情况下，通配符不匹配任何文件名时，会保持不变。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> rm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">rm:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 无法删除'b*':</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 没有那个文件或目录</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，由于当前目录不包括 <code>b</code> 开头的文件名，导致 <code>b*</code> 不会发生文件名扩展，保持原样不变，所以 <code>rm</code> 命令报错没有 <code>b*</code> 这个文件。</p>\n<p>打开 <code>nullglob</code> 参数，就可以让不匹配的通配符返回空字符串。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> nullglob</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> rm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">rm:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 缺少操作数</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，由于没有 <code>b*</code> 匹配的文件名，所以 <code>rm b*</code> 扩展成了 <code>rm</code>，导致报错变成了”缺少操作数“。</p>\n</li>\n<li>\n<p><strong>failglob 参数</strong></p>\n<p><code>failglob</code> 参数使得通配符不匹配任何文件名时，Bash 会直接报错，而不是让各个命令去处理。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> failglob</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> rm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 无匹配:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，打开 <code>failglob</code> 以后，由于 <code>b*</code> 不匹配任何文件名，Bash 直接报错了，不再让 <code>rm</code> 命令去处理。</p>\n</li>\n<li>\n<p><strong>extglob 参数</strong></p>\n<p><code>extglob</code> 参数使得 Bash 支持 ksh 的一些扩展语法。它默认应该是打开的。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shopt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> extglob</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">extglob</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">         on</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>它的主要应用是支持量词语法。如果不希望支持量词语法，可以用下面的命令关闭。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -u</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> extglob</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p><strong>nocaseglob 参数</strong></p>\n<p><code>nocaseglob</code> 参数可以让通配符扩展不区分大小写。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> nocaseglob</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /windows/program</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/windows/ProgramData</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/windows/Program</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Files</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/windows/Program</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Files</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (x86)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，打开 <code>nocaseglob</code> 以后，<code>program*</code> 就不区分大小写了，可以匹配 <code>ProgramData</code> 等。</p>\n</li>\n<li>\n<p><strong>globstar 参数</strong></p>\n<p><code>globstar</code> 参数可以使得 <code>**</code> 匹配零个或多个子目录。该参数默认是关闭的。</p>\n<p>假设有下面的文件结构。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sub1/b.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sub1/sub2/c.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的文件结构中，顶层目录、第一级子目录 <code>sub1</code>、第二级子目录 <code>sub1\\sub2</code> 里面各有一个文本文件。请问怎样才能使用通配符，将它们显示出来?</p>\n<p>默认情况下，只能写成下面这样。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.txt</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.txt</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  sub1/b.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  sub1/sub2/c.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这是因为 <code>*</code> 只匹配当前目录，如果要匹配子目录，只能一层层写出来。</p>\n<p>打开 <code>globstar</code> 参数以后，<code>**</code> 匹配零个或多个子目录。因此，<code>**/*.txt</code> 就可以得到想要的结果。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> globstar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> **</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  sub1/b.txt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  sub1/sub2/c.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h2>参考链接</h2>\n<ul>\n<li><a href=\"https://medium.com/@leedowthwaite/why-most-people-only-think-they-understand-wildcards-63bb9c2024ab\" target=\"_blank\" rel=\"noopener noreferrer\">Think You Understand Wildcards? Think Again</a></li>\n<li><a href=\"https://appcodelabs.com/advanced-wildcard-patterns-most-people-dont-know\" target=\"_blank\" rel=\"noopener noreferrer\">Advanced Wildcard Patterns Most People Don’t Know</a></li>\n</ul>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Bash 函数",
      "url": "https://blog.tlcsdm.com/linux/bash/function.html",
      "id": "https://blog.tlcsdm.com/linux/bash/function.html",
      "summary": "本章介绍 Bash 函数的用法。",
      "content_html": "<p>本章介绍 Bash 函数的用法。</p>\n<!-- more -->\n<h2>简介</h2>\n<p>函数(function)是可以重复使用的代码片段，有利于代码的复用。它与别名(alias)的区别是，别名只适合封装简单的单个命令，函数则可以封装复杂的多行命令。</p>\n<p>函数总是在当前 Shell 执行，这是跟脚本的一个重大区别，Bash 会新建一个子 Shell 执行脚本。如果函数与脚本同名，函数会优先执行。但是，函数的优先级不如别名，即如果函数与别名同名，那么别名优先执行。</p>\n<p>Bash 函数定义的语法有两种。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 第一种</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">  # codes</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 第二种</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> fn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">  # codes</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>fn</code> 是自定义的函数名，函数代码就写在大括号之中。这两种写法是等价的。</p>\n<p>下面是一个简单函数的例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Hello </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，函数体里面的 <code>$1</code> 表示函数调用时的第一个参数。</p>\n<p>调用时，就直接写函数名，参数跟在函数名后面。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面是一个多行函数的例子，显示当前日期时间。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">today</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Today's date is: \"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  date</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +\"%A, %B %-d, %Y\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>删除一个函数，可以使用 <code>unset</code> 命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">unset</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -f</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> functionName</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>查看当前 Shell 已经定义的所有函数，可以使用 <code>declare</code> 命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -f</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面的 <code>declare</code> 命令不仅会输出函数名，还会输出所有定义。输出顺序是按照函数名的字母表顺序。由于会输出很多内容，最好通过管道命令配合 <code>more</code> 或 <code>less</code> 使用。</p>\n<p><code>declare</code> 命令还支持查看单个函数的定义。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -f</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> functionName</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>declare -F</code> 可以输出所有已经定义的函数名，不含函数体。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -F</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>参数变量</h2>\n<p>函数体内可以使用参数变量，获取函数参数。函数的参数变量，与脚本参数变量是一致的。</p>\n<ul>\n<li><code>$1</code> ~ <code>$9</code>: 函数的第一个到第 9 个的参数。</li>\n<li><code>$0</code>: 函数所在的脚本名。</li>\n<li><code>$#</code>: 函数的参数总数。</li>\n<li><code>$@</code>: 函数的全部参数，参数之间使用空格分隔。</li>\n<li><code>$*</code>: 函数的全部参数，参数之间使用变量 <code>$IFS</code> 值的第一个字符分隔，默认为空格，但是可以自定义。</li>\n</ul>\n<p>如果函数的参数多于 9 个，那么第 10 个参数可以用 <code>${10}</code> 的形式引用，以此类推。</p>\n<p>下面是一个示例脚本 <code>test.sh</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># test.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> alice</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"alice: </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$@</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$0</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">: </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $4</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$#</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> arguments\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">alice</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wonderland</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>运行该脚本，结果如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> test.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">alice:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wonderland</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">test</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.sh:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wonderland</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> arguments</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，由于函数 <code>alice</code> 只有第一个和第二个参数，所以第三个和第四个参数为空。</p>\n<p>下面是一个日志函数的例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> log_msg</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"[`</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">date</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '+ %F %T'` ]: </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$@</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>使用方法如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> log_msg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"This is sample log message\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[ 2018-08-16 19:56:34 ]: This is sample log message</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>return 命令</h2>\n<p><code>return</code> 命令用于从函数返回一个值。函数执行到这条命令，就不再往下执行了，直接返回了。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> func_return_value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  return</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 10</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>函数将返回值返回给调用者。如果命令行直接执行函数，下一个命令可以用 <code>$?</code> 拿到返回值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> func_return_value</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Value returned by function is: </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$?</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Value</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> returned</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> by</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> function</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 10</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>return</code> 后面不跟参数，只用于返回也是可以的。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  commands</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  return</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>全局变量和局部变量，local 命令</h2>\n<p>Bash 函数体内直接声明的变量，属于全局变量，整个脚本都可以读取。这一点需要特别小心。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 脚本 test.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> () {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"fn: foo = </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fn</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"global: foo = </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面脚本的运行结果如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> test.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fn:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">global:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，变量 <code>$foo</code> 是在函数 <code>fn</code> 内部声明的，函数体外也可以读取。</p>\n<p>函数体内不仅可以声明全局变量，还可以修改全局变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> () {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码执行后，输出的变量 <code>$foo</code> 值为 2。</p>\n<p>函数里面可以用 <code>local</code> 命令声明局部变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 脚本 test.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fn</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> () {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  local</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"fn: foo = </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fn</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"global: foo = </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面脚本的运行结果如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> test.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">fn:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">global:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> =</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>local</code> 命令声明的 <code>$foo</code> 变量，只在函数体内有效，函数体外没有定义。</p>\n<h2>参考链接</h2>\n<ul>\n<li><a href=\"https://www.linuxtechi.com/define-use-functions-linux-shell-script/\" target=\"_blank\" rel=\"noopener noreferrer\">How to define and use functions in Linux Shell Script</a>, by Pradeep Kumar</li>\n</ul>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Bash 的基本语法",
      "url": "https://blog.tlcsdm.com/linux/bash/grammar.html",
      "id": "https://blog.tlcsdm.com/linux/bash/grammar.html",
      "summary": "本章介绍 Bash 的最基本语法。",
      "content_html": "<p>本章介绍 Bash 的最基本语法。</p>\n<!-- more -->\n<h2>echo 命令</h2>\n<p>由于后面的例子会大量用到 <code>echo</code> 命令，这里先介绍这个命令。</p>\n<p><code>echo</code> 命令的作用是在屏幕输出一行文本，可以将该命令的参数原样输出。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>echo</code> 的参数是 <code>hello world</code>，可以原样输出。</p>\n<p>如果想要输出的是多行文本，即包括换行符。这时需要把多行文本放在引号里面。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"&lt;HTML&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    &lt;HEAD&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">          &lt;TITLE&gt;Page Title&lt;/TITLE&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    &lt;/HEAD&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    &lt;BODY&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">          Page body.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    &lt;/BODY&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">&lt;/HTML&gt;\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>echo</code> 可以原样输出多行文本。</p>\n<h3><code>-n</code> 参数</h3>\n<p>默认情况下，<code>echo</code> 输出的文本末尾会有一个回车符。<code>-n</code> 参数可以取消末尾的回车符，使得下一个提示符紧跟在输出内容的后面。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>world</code> 后面直接就是下一行的提示符 <code>$</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">b</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ab</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>-n</code> 参数可以让两个 <code>echo</code> 命令的输出连在一起，出现在同一行。</p>\n<h3><code>-e</code> 参数</h3>\n<p><code>-e</code> 参数会解释引号(双引号和单引号)里面的特殊字符(比如换行符 <code>\\n</code>)。如果不使用 <code>-e</code> 参数，即默认情况下，引号会让特殊字符变成普通字符，<code>echo</code> 不解释它们，原样输出。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Hello\\nWorld\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Hello\\nWorld</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 双引号的情况</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Hello\\nWorld\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Hello</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">World</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 单引号的情况</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Hello\\nWorld'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Hello</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">World</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>-e</code> 参数使得 <code>\\n</code> 解释为换行符，导致输出内容里面出现换行。</p>\n<h2>命令格式</h2>\n<p>命令行环境中，主要通过使用 Shell 命令，进行各种操作。Shell 命令基本都是下面的格式。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">command</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">arg1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ...</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">argN</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ]]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面代码中，<code>command</code> 是具体的命令或者一个可执行文件，<code>arg1 ... argN</code> 是传递给命令的参数，它们是可选的。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面这个命令中，<code>ls</code> 是命令，<code>-l</code> 是参数。</p>\n<p>有些参数是命令的配置项，这些配置项一般都以一个连词线开头，比如上面的 <code>-l</code>。同一个配置项往往有长和短两种形式，比如 <code>-l</code> 是短形式，<code>--list</code> 是长形式，它们的作用完全相同。短形式便于手动输入，长形式一般用在脚本之中，可读性更好，利于解释自身的含义。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 短形式</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -r</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 长形式</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --reverse</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令中，<code>-r</code> 是短形式，<code>--reverse</code> 是长形式，作用完全一样。前者便于输入，后者便于理解。</p>\n<p>Bash 单个命令一般都是一行，用户按下回车键，就开始执行。有些命令比较长，写成多行会有利于阅读和编辑，这时可以在每一行的结尾加上反斜杠，Bash 就会将下一行跟当前行放在一起解释。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>空格</h2>\n<p>Bash 使用空格(或 Tab 键)区分不同的参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">command</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令中，<code>foo</code> 和 <code>bar</code> 之间有一个空格，所以 Bash 认为它们是两个参数。</p>\n<p>如果参数之间有多个空格，Bash 会自动忽略多余的空格。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> this</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">     test</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">this</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> test</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令中，<code>a</code> 和 <code>test</code> 之间有多个空格，Bash 会忽略多余的空格。</p>\n<h2>分号</h2>\n<p>分号(<code>;</code>)是命令的结束符，使得一行可以放置多个命令，上一个命令执行结束后，再执行第二个命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">clear</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，Bash 先执行 <code>clear</code> 命令，执行完成后，再执行 <code>ls</code> 命令。</p>\n<p>注意，使用分号时，第二个命令总是接着第一个命令执行，不管第一个命令执行成功或失败。</p>\n<h2>命令的组合符 <code>&amp;&amp;</code> 和 <code>||</code></h2>\n<p>除了分号，Bash 还提供两个命令组合符 <code>&amp;&amp;</code> 和 <code>||</code>，允许更好地控制多个命令之间的继发关系。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Command1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;&amp; </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Command2</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令的意思是，如果 <code>Command1</code> 命令运行成功，则继续运行 <code>Command2</code> 命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Command1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> || </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Command2</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令的意思是，如果 <code>Command1</code> 命令运行失败，则继续运行 <code>Command2</code> 命令。</p>\n<p>下面是一些例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cat</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> filelist.txt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ; </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> filelist.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，只要 <code>cat</code> 命令执行结束，不管成功或失败，都会继续执行 <code>ls</code> 命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cat</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> filelist.txt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;&amp; </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> filelist.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，只有 <code>cat</code> 命令执行成功，才会继续执行 <code>ls</code> 命令。如果 <code>cat</code> 执行失败(比如不存在文件 <code>flielist.txt</code>)，那么 <code>ls</code> 命令就不会执行。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">mkdir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> || </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">mkdir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，只有 <code>mkdir foo</code> 命令执行失败(比如 <code>foo</code> 目录已经存在)，才会继续执行 <code>mkdir bar</code> 命令。如果 <code>mkdir foo</code> 命令执行成功，就不会创建 <code>bar</code> 目录了。</p>\n<h2>type 命令</h2>\n<p>Bash 本身内置了很多命令，同时也可以执行外部程序。怎么知道一个命令是内置命令，还是外部程序呢?</p>\n<p><code>type</code> 命令用来判断命令的来源。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> type</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shell</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> builtin</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> type</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hashed</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (/bin/ls)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>type</code> 命令告诉我们，<code>echo</code> 是内部命令，<code>ls</code> 是外部程序 (<code>/bin/ls</code>)。</p>\n<p><code>type</code> 命令本身也是内置命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> type</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> type</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">type</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shell</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> builtin</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果要查看一个命令的所有定义，可以使用 <code>type</code> 命令的 <code>-a</code> 参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> type</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shell</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> builtin</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /usr/bin/echo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /bin/echo</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码表示，<code>echo</code> 命令即是内置命令，也有对应的外部程序。</p>\n<p><code>type</code> 命令的 <code>-t</code> 参数，可以返回一个命令的类型: 别名(alias)，关键词(keyword)，函数(function)，内置命令(builtin)和文件(file)。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> type</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -t</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">file</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> type</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -t</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> if</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">keyword</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>bash</code> 是文件，<code>if</code> 是关键词。</p>\n<h2>快捷键</h2>\n<p>Bash 提供很多快捷键，可以大大方便操作。下面是一些最常用的快捷键，完整的介绍参见 <a href=\"/linux/bash/readline.html\" target=\"_blank\">行操作</a> 一章。</p>\n<ul>\n<li><code>Ctrl + L</code>: 清除屏幕并将当前行移到页面顶部。</li>\n<li><code>Ctrl + C</code>: 中止当前正在执行的命令。</li>\n<li><code>Shift + PageUp</code>: 向上滚动。</li>\n<li><code>Shift + PageDown</code>: 向下滚动。</li>\n<li><code>Ctrl + U</code>: 从光标位置删除到行首。</li>\n<li><code>Ctrl + K</code>: 从光标位置删除到行尾。</li>\n<li><code>Ctrl + D</code>: 关闭 Shell 会话。</li>\n<li><code>↑</code>，<code>↓</code>: 浏览已执行命令的历史记录。</li>\n</ul>\n<p>除了上面的快捷键，Bash 还具有自动补全功能。命令输入到一半的时候，可以按下 Tab 键，Bash 会自动完成剩下的部分。比如，输入 <code>pw</code>，然后按一下 Tab 键，Bash 会自动补上 <code>d</code>。</p>\n<p>除了命令的自动补全，Bash 还支持路径的自动补全。有时，需要输入很长的路径，这时只需要输入前面的部分，然后按下 Tab 键，就会自动补全后面的部分。如果有多个可能的选择，按两次 Tab 键，Bash 会显示所有选项，让您选择。</p>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Bash 简介",
      "url": "https://blog.tlcsdm.com/linux/bash/intro.html",
      "id": "https://blog.tlcsdm.com/linux/bash/intro.html",
      "summary": "Bash 是 Unix 系统和 Linux 系统的一种 Shell(命令行环境)，是目前绝大多数 Linux 发行版的默认 Shell。",
      "content_html": "<p>Bash 是 Unix 系统和 Linux 系统的一种 Shell(命令行环境)，是目前绝大多数 Linux 发行版的默认 Shell。</p>\n<!-- more -->\n<h2>Shell 的含义</h2>\n<p>学习 Bash，首先需要理解 Shell 是什么。Shell 这个单词的原意是“外壳”，跟 kernel(内核)相对应，比喻内核外面的一层，即用户跟内核交互的对话界面。</p>\n<p>具体来说，Shell 这个词有多种含义。</p>\n<p>首先，Shell 是一个程序，提供一个与用户对话的环境。这个环境只有一个命令提示符，让用户从键盘输入命令，所以又称为命令行环境(commandline，简写为 CLI)。Shell 接收到用户输入的命令，将命令送入操作系统执行，并将结果返回给用户。本书中，除非特别指明，Shell 指的就是命令行环境。</p>\n<p>其次，Shell 是一个命令解释器，解释用户输入的命令。它支持变量、条件判断、循环操作等语法，所以用户可以用 Shell 命令写出各种小程序，又称为脚本(script)。这些脚本都通过 Shell 的解释执行，而不通过编译。</p>\n<p>最后，Shell 是一个工具箱，提供了各种小工具，供用户方便地使用操作系统的功能。</p>\n<h2>Shell 的种类</h2>\n<p>Shell 有很多种，只要能给用户提供命令行环境的程序，都可以看作是 Shell。</p>\n<p>历史上，主要的 Shell 有下面这些。</p>\n<ul>\n<li>Bourne Shell(sh)</li>\n<li>Bourne Again shell(bash)</li>\n<li>C Shell(csh)</li>\n<li>TENEX C Shell(tcsh)</li>\n<li>Korn shell(ksh)</li>\n<li>Z Shell(zsh)</li>\n<li>Friendly Interactive Shell(fish)</li>\n</ul>\n<p>Bash 是目前最常用的 Shell，除非特别指明，下文的 Shell 和 Bash 当作同义词使用，可以互换。</p>\n<p>下面的命令可以查看当前运行的 Shell。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $SHELL</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/bin/bash</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面的命令可以查看当前的 Linux 系统安装的所有 Shell。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cat</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /etc/shells</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面两个命令中，<code>$</code> 是命令行环境的提示符，用户只需要输入提示符后面的内容。</p>\n<p>Linux 允许每个用户使用不同的 Shell，用户的默认 Shell 一般都是 Bash，或者与 Bash 兼容。</p>\n<h2>命令行环境</h2>\n<h3>终端模拟器</h3>\n<p>如果是不带有图形环境的 Linux 系统(比如专用于服务器的系统)，启动后就直接是命令行环境。</p>\n<p>不过，现在大部分的 Linux 发行版，尤其是针对普通用户的发行版，都是图形环境。用户登录系统后，自动进入图形环境，需要自己启动终端模拟器，才能进入命令行环境。</p>\n<p>所谓“终端模拟器”(terminal emulator)就是一个模拟命令行窗口的程序，让用户在一个窗口中使用命令行环境，并且提供各种附加功能，比如调整颜色、字体大小、行距等等。</p>\n<p>不同 Linux 发行版(准确地说是不同的桌面环境)带有的终端程序是不一样的，比如 KDE 桌面环境的终端程序是 konsole，Gnome 桌面环境的终端程序是 gnome-terminal，用户也可以安装第三方的终端程序。所有终端程序，尽管名字不同，基本功能都是一样的，就是让用户可以进入命令行环境，使用 Shell。</p>\n<h3>命令行提示符</h3>\n<p>进入命令行环境以后，用户会看到 Shell 的提示符。提示符往往是一串前缀，最后以一个美元符号 <code>$</code> 结尾，用户可以在这个符号后面输入各种命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user@hostname] $</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，完整的提示符是 <code>[user@hostname] $</code>，其中前缀是用户名(<code>user</code>)加上 <code>@</code>，再加主机名(<code>hostname</code>)。比如，用户名是 <code>bill</code>，主机名是 <code>home-machine</code>，前缀就是 <code>bill@home-machine</code>。</p>\n<p>注意，根用户(root)的提示符，不以美元符号 (<code>$</code>) 结尾，而以井号 (<code>#</code>) 结尾，用来提醒用户，现在具有根权限，可以执行各种操作，务必小心，不要出现误操作。这个符号是可以自己定义的，详见《命令提示符》一章。</p>\n<p>为了简洁，后文的命令行提示符都只使用 <code>$</code> 表示。</p>\n<h3>进入和退出方法</h3>\n<p>进入命令行环境以后，一般就已经打开 Bash 了。如果您的 Shell 不是 Bash，可以输入 <code>bash</code> 命令启动 Bash。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>退出 Bash 环境，可以使用 <code>exit</code> 命令，也可以同时按下 <code>Ctrl + d</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">exit</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>Bash 的基本用法就是在命令行输入各种命令，非常直观。作为练习，可以试着输入 <code>pwd</code> 命令。按下回车键，就会显示当前所在的目录。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pwd</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/home/me</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果不小心输入了 <code>pwe</code>，会返回一个提示，表示输入出错，没有对应的可执行程序。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pwe</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pwe:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 未找到命令</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>Shell 和 Bash 的历史</h2>\n<p>Shell 伴随着 Unix 系统的诞生而诞生。</p>\n<p>1969 年，Ken Thompson 和 Dennis Ritchie 开发了第一版的 Unix。</p>\n<p>1971 年，Ken Thompson 编写了最初的 Shell，称为 Thompson shell，程序名是 <code>sh</code>，方便用户使用 Unix。</p>\n<p>1973 年至 1975 年间，John R. Mashey 扩展了最初的 Thompson shell，添加了编程功能，使得 Shell 成为一种编程语言。这个版本的 Shell 称为 Mashey shell。</p>\n<p>1976 年，Stephen Bourne 结合 Mashey shell 的功能，重写一个新的 Shell，称为 Bourne shell。</p>\n<p>1978 年，加州大学伯克利分校的 Bill Joy 开发了 C shell，为 Shell 提供 C 语言的语法，程序名是 <code>csh</code>。它是第一个真正替代 <code>sh</code> 的 UNIX shell，被合并到 Berkeley UNIX 的 2BSD 版本中。</p>\n<p>1979 年，UNIX 第七版发布，内置了 Bourne Shell，导致它成为 Unix 的默认 Shell。注意，Thompson shell、Mashey shell 和 Bourne shell 都是贝尔实验室的产品，程序名都是 <code>sh</code>。对于用户来说，它们是同一个东西，只是底层代码不同而已。</p>\n<p>1983 年，David Korn 开发了 Korn shell，程序名是 <code>ksh</code>。</p>\n<p>1985 年，Richard Stallman 成立了自由软件基金会(FSF)，由于 Shell 的版权属于贝尔公司，所以他决定写一个自由版权的、使用 GNU 许可证的 Shell 程序，避免 Unix 的版权争议。</p>\n<p>1988 年，自由软件基金会的第一个付薪程序员 Brian Fox 写了一个 Shell，功能基本上是 Bourne shell 的克隆，叫做 Bourne-Again SHell，简称 Bash，程序名为 <code>bash</code>，任何人都可以免费使用。后来，它逐渐成为 Linux 系统的标准 Shell。</p>\n<p>1989 年，Bash 发布 1.0 版。</p>\n<p>1996 年，Bash 发布 2.0 版。</p>\n<p>2004 年，Bash 发布 3.0 版。</p>\n<p>2009 年，Bash 发布 4.0 版。</p>\n<p>2019 年，Bash 发布 5.0 版。</p>\n<p>用户可以通过 <code>bash</code> 命令的 <code>--version</code> 参数或者环境变量 <code>$BASH_VERSION</code>，查看本机的 Bash 版本。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --version</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">GNU</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash，版本</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5.0.3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">-release</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (x86_64-pc-linux-gnu)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $BASH_VERSION</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5.0.3(1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)-release</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "循环",
      "url": "https://blog.tlcsdm.com/linux/bash/loop.html",
      "id": "https://blog.tlcsdm.com/linux/bash/loop.html",
      "summary": "Bash 提供三种循环语法 for、while 和 until。",
      "content_html": "<p>Bash 提供三种循环语法 <code>for</code>、<code>while</code> 和 <code>until</code>。</p>\n<!-- more -->\n<h2>while 循环</h2>\n<p><code>while</code> 循环有一个判断条件，只要符合条件，就不断循环执行指定的语句。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> condition</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  commands</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，只要满足条件 <code>condition</code>，就会执行命令 <code>commands</code>。然后，再次判断是否满足条件 <code>condition</code>，只要满足，就会一直执行下去。只有不满足条件，才会退出循环。</p>\n<p>循环条件 <code>condition</code> 可以使用 <code>test</code> 命令，跟 <code>if</code> 结构的判断条件写法一致。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">number</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$number</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -lt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 10</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Number = </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$number</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  number</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">number</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，只要变量 <code>$number</code> 小于 10，就会不断加 1，直到 <code>$number</code> 等于 10，然后退出循环。</p>\n<p>关键字 <code>do</code> 可以跟 <code>while</code> 不在同一行，这时两者之间不需要使用分号分隔。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Hi, while looping ...'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子会无限循环，可以按下 <code>Ctrl + c</code> 停止。</p>\n<p><code>while</code> 循环写成一行，也是可以的。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Hi, while looping ...'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>while</code> 的条件部分也可以是执行一个命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'ECHO'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Hi, while looping ...'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，判断条件是 <code>echo 'ECHO'</code>。由于这个命令总是执行成功，所以上面命令会产生无限循环。</p>\n<p><code>while</code> 的条件部分可以执行任意数量的命令，但是执行结果的真伪只看最后一个命令的执行结果。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Hi, looping ...'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面代码运行后，不会有任何输出，因为 <code>while</code> 的最后一个命令是 <code>false</code>。</p>\n<h2>until 循环</h2>\n<p><code>until</code> 循环与 <code>while</code> 循环恰好相反，只要不符合判断条件(判断条件失败)，就不断循环执行指定的语句。一旦符合判断条件，就退出循环。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">until</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> condition</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  commands</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>关键字 <code>do</code> 可以与 <code>until</code> 不写在同一行，这时两者之间不需要分号分隔。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">until</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> condition</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  commands</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> until</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> false</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Hi, until looping ...'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Hi,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> until</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> looping</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Hi,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> until</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> looping</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Hi,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> until</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> looping</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">^C</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>until</code> 的部分一直为 <code>false</code>，导致命令无限运行，必须按下 <code>Ctrl + c</code> 终止。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">number</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">until</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$number</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -ge</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 10</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Number = </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$number</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  number</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">number</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，只要变量 <code>number</code> 小于 10，就会不断加 1，直到 <code>number</code> 大于等于 10，就退出循环。</p>\n<p><code>until</code> 的条件部分也可以是一个命令，表示在这个命令执行成功之前，不断重复尝试。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">until</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> cp</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Attempt to copy failed. waiting...'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  sleep</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子表示，只要 <code>cp $1 $2</code> 这个命令执行不成功，就 5 秒钟后再尝试一次，直到成功为止。</p>\n<p><code>until</code> 循环都可以转为 <code>while</code> 循环，只要把条件设为否定即可。上面这个例子可以改写如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ! </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cp</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Attempt to copy failed. waiting...'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  sleep</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>一般来说，<code>until</code> 用得比较少，完全可以统一都使用 <code>while</code>。</p>\n<h2><code>for...in</code> 循环</h2>\n<p><code>for...in</code> 循环用于遍历列表的每一项。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> variable</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> list</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  commands</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面语法中，<code>for</code> 循环会依次从 <code>list</code> 列表中取出一项，作为变量 <code>variable</code>，然后在循环体中进行处理。</p>\n<p>关键词 <code>do</code> 可以跟 <code>for</code> 写在同一行，两者使用分号分隔。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> variable</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> list</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  commands</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> word1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> word2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> word3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>word1 word2 word3</code> 是一个包含三个单词的列表，变量 <code>i</code> 依次等于 <code>word1</code>、<code>word2</code>、<code>word3</code>，命令 <code>echo $i</code> 则会相应地执行三次。</p>\n<p>列表可以由通配符产生。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> *.png</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>*.png</code> 会替换成当前目录中所有 PNG 图片文件，变量 <code>i</code> 会依次等于每一个文件。</p>\n<p>列表也可以通过子命令产生。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">count</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cat</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~/.bash_profile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  count</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">count</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Word </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$count</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">) contains $(</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> |</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> wc</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">) characters\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>cat ~/.bash_profile</code> 命令会输出 <code>~/.bash_profile</code> 文件的内容，然后通过遍历每一个词，计算该文件一共包含多少个词，以及每个词有多少个字符。</p>\n<p><code>in list</code> 的部分可以省略，这时 <code>list</code> 默认等于脚本的所有参数 <code>$@</code>。但是，为了可读性，最好还是不要省略，参考下面的例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> filename; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$filename</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> filename</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$@</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$filename</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在函数体中也是一样的，<code>for...in</code> 循环省略 <code>in list</code> 的部分，则 <code>list</code> 默认等于函数的所有参数。</p>\n<h2>for 循环</h2>\n<p><code>for</code> 循环还支持 C 语言的循环语法。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (( </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">expression1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">expression2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">expression3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> )); </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  commands</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>expression1</code> 用来初始化循环条件，<code>expression2</code> 用来决定循环结束的条件，<code>expression3</code> 在每次循环迭代的末尾执行，用于更新值。</p>\n<p>注意，循环条件放在双重圆括号之中。另外，圆括号之中使用变量，不必加上美元符号 <code>$</code>。</p>\n<p>它等同于下面的 <code>while</code> 循环。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(( </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">expression1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (( </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">expression2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> )); </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  commands</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  (( </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">expression3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (( </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">&lt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> )); </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，初始化变量 <code>i</code> 的值为 0，循环执行的条件是 <code>i</code> 小于 5。每次循环迭代结束时，<code>i</code> 的值加 1。</p>\n<p><code>for</code> 条件部分的三个语句，都可以省略。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ((;;))</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  read</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> var</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$var</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \".\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面脚本会反复读取命令行输入，直到用户输入了一个点(<code>.</code>)位为止，才会跳出循环。</p>\n<h2>break，continue</h2>\n<p>Bash 提供了两个内部命令 <code>break</code> 和 <code>continue</code>，用来在循环内部跳出循环。</p>\n<p><code>break</code> 命令立即终止循环，程序继续执行循环块之后的语句，即不再执行剩下的循环。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> number</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 3</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 4</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 5</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 6</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"number is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$number</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$number</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"3\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子只会打印 3 行结果。一旦变量 <code>$number</code> 等于 3，就会跳出循环，不再继续执行。</p>\n<p><code>continue</code> 命令立即终止本轮循环，开始执行下一轮循环。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> read</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"What file do you want to test?\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> filename</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$filename</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">    echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"The file does not exist.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    continue</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  fi</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"You entered a valid file..\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，只要用户输入的文件不存在，<code>continue</code> 命令就会生效，直接进入下一轮循环(让用户重新输入文件名)，不再执行后面的打印语句。</p>\n<h2>select 结构</h2>\n<p><code>select</code> 结构主要用来生成简单的菜单。它的语法与 <code>for...in</code> 循环基本一致。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">select</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> name</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[in list]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  commands</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Bash 会对 <code>select</code> 依次进行下面的处理。</p>\n<ol>\n<li><code>select</code> 生成一个菜单，内容是列表 <code>list</code> 的每一项，并且每一项前面还有一个数字编号。</li>\n<li>Bash 提示用户选择一项，输入它的编号。</li>\n<li>用户输入以后，Bash 会将该项的内容存在变量 <code>name</code>，该项的编号存入环境变量 <code>REPLY</code>。如果用户没有输入，就按回车键，Bash 会重新输出菜单，让用户选择。</li>\n<li>执行命令体 <code>commands</code>。</li>\n<li>执行结束后，回到第一步，重复这个过程。</li>\n</ol>\n<p>下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># select.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">select</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> brand</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> in Samsung Sony iphone symphony Walton</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"You have chosen </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$brand</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行上面的脚本，Bash 会输出一个品牌的列表，让用户选择。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ./select.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) Samsung</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) Sony</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) iphone</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) symphony</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) Walton</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#?</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果用户没有输入编号，直接按回车键。Bash 就会重新输出一遍这个菜单，直到用户按下 <code>Ctrl + c</code>，退出执行。</p>\n<p><code>select</code> 可以与 <code>case</code> 结合，针对不同项，执行不同的命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Which Operating System do you like?\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">select</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> os</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> in Ubuntu LinuxMint Windows8 Windows7 WindowsXP</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  case</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $os</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"Ubuntu\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">|</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"LinuxMint\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">      echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"I also use </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$os</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"Windows8\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> |</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Windows10\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> |</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"WindowsXP\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">      echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Why don't you try Linux?\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    *)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">      echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Invalid entry.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">      break</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  esac</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>case</code> 针对用户选择的不同项，执行不同的命令。</p>\n<h2>参考链接</h2>\n<ul>\n<li><a href=\"https://linuxhint.com/bash_select_command/\" target=\"_blank\" rel=\"noopener noreferrer\">Bash Select Command</a>, Fahmida Yesmin</li>\n</ul>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "mktemp 命令，trap 命令",
      "url": "https://blog.tlcsdm.com/linux/bash/mktemp.html",
      "id": "https://blog.tlcsdm.com/linux/bash/mktemp.html",
      "summary": "Bash 脚本有时需要创建临时文件或临时目录。常见的做法是，在 /tmp 目录里面创建文件或目录，这样做有很多弊端，使用 mktemp 命令是最安全的做法。",
      "content_html": "<p>Bash 脚本有时需要创建临时文件或临时目录。常见的做法是，在 <code>/tmp</code> 目录里面创建文件或目录，这样做有很多弊端，使用 <code>mktemp</code> 命令是最安全的做法。</p>\n<!-- more -->\n<h2>临时文件的安全问题</h2>\n<p>直接创建临时文件，尤其在 <code>/tmp</code> 目录里面，往往会导致安全问题。</p>\n<p>首先，<code>/tmp</code> 目录是所有人可读写的，任何用户都可以往该目录里面写文件。创建的临时文件也是所有人可读的。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> touch</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /tmp/info.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /tmp/info.txt</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">-rw-r--r--</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ruanyf</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ruanyf</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 12月</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 28</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 17:12</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /tmp/info.txt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令在 <code>/tmp</code> 目录直接创建文件，该文件默认是所有人可读的。</p>\n<p>其次，如果攻击者知道临时文件的文件名，他可以创建符号链接，链接到临时文件，可能导致系统运行异常。攻击者也可能向脚本提供一些恶意数据。因此，临时文件最好使用不可预测、每次都不一样的文件名，防止被利用。</p>\n<p>最后，临时文件使用完毕，应该删除。但是，脚本意外退出时，往往会忽略清理临时文件。</p>\n<p>生成临时文件应该遵循下面的规则。</p>\n<blockquote>\n<ul>\n<li>创建前检查文件是否已经存在。</li>\n<li>确保临时文件已成功创建。</li>\n<li>临时文件必须有权限的限制。</li>\n<li>临时文件要使用不可预测的文件名。</li>\n<li>脚本退出时，要删除临时文件(使用 <code>trap</code> 命令)。</li>\n</ul>\n</blockquote>\n<h2>mktemp 命令的用法</h2>\n<p><code>mktemp</code> 命令就是为安全创建临时文件而设计的。虽然在创建临时文件之前，它不会检查临时文件是否存在，但是它支持唯一文件名和清除机制，因此可以减轻安全攻击的风险。</p>\n<p>直接运行 <code>mktemp</code> 命令，就能生成一个临时文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> mktemp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/tmp/tmp.4GcsWSG4vj</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /tmp/tmp.4GcsWSG4vj</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">-rw</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "命令提示符",
      "url": "https://blog.tlcsdm.com/linux/bash/prompt.html",
      "id": "https://blog.tlcsdm.com/linux/bash/prompt.html",
      "summary": "用户进入 Bash 以后，Bash 会显示一个命令提示符，用来提示用户在该位置后面输入命令。",
      "content_html": "<p>用户进入 Bash 以后，Bash 会显示一个命令提示符，用来提示用户在该位置后面输入命令。</p>\n<!-- more -->\n<h2>环境变量 PS1</h2>\n<p>命令提示符通常是美元符号 <code>$</code>，对于根用户则是井号 <code>#</code>。这个符号是环境变量 <code>PS1</code> 决定的，执行下面的命令，可以看到当前命令提示符的定义。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $PS1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>Bash 允许用户自定义命令提示符，只要改写这个变量即可。改写后 的 <code>PS1</code>，可以放在用户的 Bash 配置文件 <code>.bashrc</code> 里面，以后新建 Bash 对话时，新的提示符就会生效。要在当前窗口看到修改后的提示符，可以执行下面的命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">source</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~/.bashrc</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>命令提示符的定义，可以包含特殊的转义字符，表示特定内容。</p>\n<ul>\n<li><code>\\a</code>: 响铃，计算机发出一记声音。</li>\n<li><code>\\d</code>: 以星期、月、日格式表示当前日期，例如“Mon May 26”。</li>\n<li><code>\\h</code>: 本机的主机名。</li>\n<li><code>\\H</code>: 完整的主机名。</li>\n<li><code>\\j</code>: 运行在当前 Shell 会话的工作数。</li>\n<li><code>\\l</code>: 当前终端设备名。</li>\n<li><code>\\n</code>: 一个换行符。</li>\n<li><code>\\r</code>: 一个回车符。</li>\n<li><code>\\s</code>: Shell 的名称。</li>\n<li><code>\\t</code>: 24 小时制的 <code>hours:minutes:seconds</code> 格式表示当前时间。</li>\n<li><code>\\T</code>: 12 小时制的当前时间。</li>\n<li><code>\\@</code>: 12 小时制的 <code>AM/PM</code> 格式表示当前时间。</li>\n<li><code>\\A</code>: 24 小时制的 <code>hours:minutes</code> 表示当前时间。</li>\n<li><code>\\u</code>: 当前用户名。</li>\n<li><code>\\v</code>: Shell 的版本号。</li>\n<li><code>\\V</code>: Shell 的版本号和发布号。</li>\n<li><code>\\w</code>: 当前的工作路径。</li>\n<li><code>\\W</code>: 当前目录名。</li>\n<li><code>\\!</code>: 当前命令在命令历史中的编号。</li>\n<li><code>\\#</code>: 当前 shell 会话中的命令数。</li>\n<li><code>\\$</code>: 普通用户显示为 <code>$</code> 字符，根用户显示为 <code>#</code> 字符。</li>\n<li><code>\\[</code>: 非打印字符序列的开始标志。</li>\n<li><code>\\]</code>: 非打印字符序列的结束标志。</li>\n</ul>\n<p>举例来说，<code>[\\u@\\h \\W]\\$</code> 这个提示符定义，显示出来就是 <code>[user@host ~]$</code> (具体的显示内容取决于您的系统)。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user@host ~]$ echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PS1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\u</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\h</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\W</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\$</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>改写 <code>PS1</code> 变量，就可以改变这个命令提示符。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> PS1=\"\\A \\h </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">17:33</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> host</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注意，<code>$</code> 后面最好跟一个空格，这样的话，用户的输入与提示符就不会连在一起。</p>\n<h2>颜色</h2>\n<p>默认情况下，命令提示符是显示终端预定义的颜色。Bash 允许自定义提示符颜色。</p>\n<p>使用下面的代码，可以设定其后文本的颜色。</p>\n<ul>\n<li><code>\\033[0;30m</code>: 黑色</li>\n<li><code>\\033[1;30m</code>: 深灰色</li>\n<li><code>\\033[0;31m</code>: 红色</li>\n<li><code>\\033[1;31m</code>: 浅红色</li>\n<li><code>\\033[0;32m</code>: 绿色</li>\n<li><code>\\033[1;32m</code>: 浅绿色</li>\n<li><code>\\033[0;33m</code>: 棕色</li>\n<li><code>\\033[1;33m</code>: 黄色</li>\n<li><code>\\033[0;34m</code>: 蓝色</li>\n<li><code>\\033[1;34m</code>: 浅蓝色</li>\n<li><code>\\033[0;35m</code>: 粉红</li>\n<li><code>\\033[1;35m</code>: 浅粉色</li>\n<li><code>\\033[0;36m</code>: 青色</li>\n<li><code>\\033[1;36m</code>: 浅青色</li>\n<li><code>\\033[0;37m</code>: 浅灰色</li>\n<li><code>\\033[1;37m</code>: 白色</li>\n</ul>\n<p>举例来说，如果要将提示符设为红色，可以将 <code>PS1</code> 设成下面的代码。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PS1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\\[\\033[0;31m\\]&lt;\\u@\\h \\W&gt;\\$'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>但是，上面这样设置以后，用户在提示符后面输入的文本也是红色的。为了解决这个问题， 可以在结尾添加另一个特殊代码 <code>\\[\\033[00m\\]</code>，表示将其后的文本恢复到默认颜色。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PS1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\\[\\033[0;31m\\]&lt;\\u@\\h \\W&gt;\\$\\[\\033[00m\\]'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>除了设置前景颜色，Bash 还允许设置背景颜色。</p>\n<ul>\n<li><code>\\033[0;40m</code>: 蓝色</li>\n<li><code>\\033[1;44m</code>: 黑色</li>\n<li><code>\\033[0;41m</code>: 红色</li>\n<li><code>\\033[1;45m</code>: 粉红</li>\n<li><code>\\033[0;42m</code>: 绿色</li>\n<li><code>\\033[1;46m</code>: 青色</li>\n<li><code>\\033[0;43m</code>: 棕色</li>\n<li><code>\\033[1;47m</code>: 浅灰色</li>\n</ul>\n<p>下面是一个带有红色背景的提示符。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PS1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\\[\\033[0;41m\\]&lt;\\u@\\h \\W&gt;\\$\\[\\033[0m\\] '</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>环境变量 PS2，PS3，PS4</h2>\n<p>除了 <code>PS1</code>，Bash 还提供了提示符相关的另外三个环境变量。</p>\n<p>环境变量 <code>PS2</code> 是命令行折行输入时系统的提示符，默认为 <code>&gt;</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"hello</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">&gt; world\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令中，输入 <code>hello</code> 以后按下回车键，系统会提示继续输入。这时，第二行显示的提示符就是 <code>PS2</code> 定义的 <code>&gt;</code>。</p>\n<p>环境变量 <code>PS3</code> 是使用 <code>select</code> 命令时，系统输入菜单的提示符。</p>\n<p>环境变量 <code>PS4</code> 默认为 <code>+</code>。它是使用 Bash 的 <code>-x</code> 参数执行脚本时，每一行命令在执行前都会先打印出来，并且在行首出现的那个提示符。</p>\n<p>比如下面是脚本 <code>test.sh</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"hello world\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>使用 <code>-x</code> 参数执行这个脚本。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> test.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'hello world'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，输出的第一行前面有一个 <code>+</code>，这就是变量 <code>PS4</code> 定义的。</p>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "引号和转义",
      "url": "https://blog.tlcsdm.com/linux/bash/quotation.html",
      "id": "https://blog.tlcsdm.com/linux/bash/quotation.html",
      "summary": "Bash 只有一种数据类型，就是字符串。不管用户输入什么数据，Bash 都视为字符串。因此，字符串相关的引号和转义，对 Bash 来说就非常重要。",
      "content_html": "<p>Bash 只有一种数据类型，就是字符串。不管用户输入什么数据，Bash 都视为字符串。因此，字符串相关的引号和转义，对 Bash 来说就非常重要。</p>\n<!-- more -->\n<h2>转义</h2>\n<p>某些字符在 Bash 里面有特殊含义(比如<code>$</code>、<code>&amp;</code>、<code>*</code>)。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $date</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，输出 <code>$date</code> 不会有任何结果，因为 <code>$</code> 是一个特殊字符。</p>\n<p>如果想要原样输出这些特殊字符，就必须在它们前面加上反斜杠，使其变成普通字符。这就叫做“转义”(escape)。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">date</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$date</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令中，只有在特殊字符 <code>$</code> 前面加反斜杠，才能原样输出。</p>\n<p>反斜杠本身也是特殊字符，如果想要原样输出反斜杠，就需要对它自身转义，连续使用两个反斜线 (<code>\\\\</code>)。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\\\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子输出了反斜杠本身。</p>\n<p>反斜杠除了用于转义，还可以表示一些不可打印的字符。</p>\n<ul>\n<li><code>\\a</code>: 响铃</li>\n<li><code>\\b</code>: 退格</li>\n<li><code>\\n</code>: 换行</li>\n<li><code>\\r</code>: 回车</li>\n<li><code>\\t</code>: 制表符</li>\n</ul>\n<p>如果想要在命令行使用这些不可打印的字符，可以把它们放在引号里面，然后使用 <code>echo</code> 命令的 <code>-e</code> 参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\t</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">b</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">atb</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"a\\tb\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">        b</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，命令行直接输出不可打印字符，Bash 不能正确解释。必须把它们放在引号之中，然后使用 <code>echo</code> 命令的 <code>-e</code> 参数。</p>\n<p>由于反斜杠可以对换行符转义，使得 Bash 认为换行符是一个普通字符，从而可以将一行命令写成多行。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> mv</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/path/to/foo </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/path/to/bar</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> mv</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /path/to/foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /path/to/bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，如果一条命令过长，就可以在行尾使用反斜杠，将其改写成多行。这是常见的多行命令的写法。</p>\n<h2>单引号</h2>\n<p>Bash 允许字符串放在单引号或双引号之中，加以引用。</p>\n<p>单引号用于保留字符的字面含义，各种特殊字符在单引号里面，都会变为普通字符，比如星号 (<code>*</code>)、美元符号( <code>$</code>)、反斜杠 (<code>\\</code>)等。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '*'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">*</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '$USER'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$USER</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '$((2+2))'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2+2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '$(echo foo)'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$(</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令中，单引号使得 Bash 扩展、变量引用、算术运算和子命令，都失效了。如果不使用单引号，它们都会被 Bash 自动扩展。</p>\n<p>由于反斜杠在单引号里面变成了普通字符，所以如果单引号之中，还要使用单引号，不能使用转义，需要在外层的单引号前面加上一个美元符号 (<code>$</code>)，然后再对里层的单引号转义。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 不正确</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> it's</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"># 不正确</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">$ echo 'it</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\'</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">s'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"># 正确</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">$ echo $'it</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\'</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">s'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>不过，更合理的方法是改在双引号之中使用单引号。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"it's\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">it</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">'s</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>双引号</h2>\n<p>双引号比单引号宽松，可以保留大部分特殊字符的本来含义，但是三个字符除外: 美元符号(<code>$</code>)、反引号(<code>`</code>)和反斜杠(<code>\\</code>)。也就是说，这三个字符在双引号之中，会被 Bash 自动扩展。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"*\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">*</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，通配符 <code>*</code> 放在双引号之中，就变成了普通字符，会原样输出。这一点需要特别留意，双引号里面不会进行文件名扩展。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$SHELL</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"`</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">date</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">`\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Mon</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Jan</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 27</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 13:33:18</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> CST</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2020</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，美元符号和反引号在双引号中，都保持特殊含义。美元符号用来引用变量，反引号则是执行子命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"I'd say: </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">hello!</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">\\\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">I</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">'d say: \"hello!\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$ echo \"\\\\\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\\</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，反斜杠在双引号之中保持特殊含义，用来转义。所以，可以使用反斜杠，在双引号之中插入双引号，或者插入反斜杠本身。</p>\n<p>由于双引号将换行符解释为普通字符，所以可以利用双引号，在命令行输入多行文本。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"hello</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">world\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">world</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令中，Bash 正常情况下会将换行符解释为命令结束，但是换行符在双引号之中就是普通字符，所以可以输入多行。<code>echo</code> 命令会将换行符原样输出，显示的时候正常解释为换行。</p>\n<p>双引号的另一个常见的使用场合是，文件名包含空格。这时就必须使用双引号，将文件名放在里面。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"two words.txt\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令中，<code>two words.txt</code> 是一个包含空格的文件名，否则就会被 Bash 当作两个文件。</p>\n<p>双引号会原样保存多余的空格。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"this is a     test\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">this</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">     test</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>双引号还有一个作用，就是保存原始命令的输出格式。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 单行输出</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">一月</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2020</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 日</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 一</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 二</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 三</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 四</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 五</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 六</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ...</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 31</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 原始格式输出</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"$(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cal</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">)\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">      一月</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2020</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">日</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 一</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 二</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 三</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 四</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 五</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 六</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">          1</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  2</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  3</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  4</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> 5</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  6</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  7</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  8</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  9</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 10</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 11</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">12</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 13</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 14</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 15</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 16</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 17</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 18</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">19</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 20</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 21</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 22</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 23</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 24</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 25</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">26</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 27</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 28</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 29</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 30</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 31</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，如果 <code>$(cal)</code> 不放在双引号之中，<code>echo</code> 就会将所有结果以单行输出，丢弃了所有原始的格式。</p>\n<h2>Here 文档</h2>\n<p>Here 文档(here document)是一种输入多行字符串的方法，格式如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&lt; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">token</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">text</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">token</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>它的格式分成开始标记(<code>&lt;&lt; token</code>)和结束标记(<code>token</code>)。开始标记是两个小于号 + Here 文档的名称，名称可以随意取，后面必须是一个换行符；结束标记是单独一行顶格写的 Here 文档名称，如果不是顶格，结束标记不起作用。两者之间就是多行字符串的内容。</p>\n<p>下面是一个通过 Here 文档输出 HTML 代码的例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cat</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;&lt; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">_EOF_</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">&lt;html&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">&lt;head&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    &lt;title&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    The title of your page</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    &lt;/title&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">&lt;/head&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">&lt;body&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    Your page content goes here.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">&lt;/body&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">&lt;/html&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">_EOF_</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Here 文档内部会发生变量替换，同时支持反斜杠转义，但是不支持通配符扩展，双引号和单引号也失去语法作用，变成了普通字符。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo='hello world'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cat</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;&lt; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">_example_</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$foo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">_example_</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"hello world\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">'hello world'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，变量 <code>$foo</code> 发生了替换，但是双引号和单引号都原样输出了，表明它们已经失去了引用的功能。</p>\n<p>如果不希望发生变量替换，可以把 Here 文档的开始标记放在单引号之中。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo='hello world'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cat</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;&lt; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">'_example_'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">$foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"$foo\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'$foo'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">_example_</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$foo</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">'$foo'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，Here 文档的开始标记(<code>_example_</code>)放在单引号之中，导致变量替换失效了。</p>\n<p>Here 文档的本质是重定向，它将字符串重定向输出给某个命令，相当于包含了 <code>echo</code> 命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> command</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;&lt; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">token</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  string</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">token</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> string</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">command</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，Here 文档相当于 <code>echo</code> 命令的重定向。</p>\n<p>所以，Here 字符串只适合那些可以接受标准输入作为参数的命令，对于其他命令无效，比如 <code>echo</code> 命令就不能用 Here 文档作为参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;&lt; </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">_example_</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">hello</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">_example_</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子不会有任何输出，因为 Here 文档对于 <code>echo</code> 命令无效。</p>\n<p>此外，Here 文档也不能作为变量的值，只能用于命令的参数。</p>\n<h2>Here 字符串</h2>\n<p>Here 文档还有一个变体，叫做 Here 字符串(Here string)，使用三个小于号(<code>&lt;&lt;&lt;</code>)表示。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;&lt;&lt; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">string</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>它的作用是将字符串通过标准输入，传递给命令。</p>\n<p>有些命令直接接受给定的参数，与通过标准输入接受参数，结果是不一样的。所以才有了这个语法，使得将字符串通过标准输入传递给命令更方便，比如 <code>cat</code> 命令只接受标准输入传入的字符串。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cat</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;&lt;&lt; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'hi there'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'hi there'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cat</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的第一种语法使用了 Here 字符串，要比第二种语法看上去语义更好，也更简洁。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> md5sum</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;&lt;&lt; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'ddd'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'ddd'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">md5sum</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>md5sum</code> 命令只能接受标准输入作为参数，不能直接将字符串放在命令后面，会被当作文件名，即 <code>md5sum ddd</code> 里面的 <code>ddd</code> 会被解释成文件名。这时就可以用 Here 字符串，将字符串传给 <code>md5sum</code> 命令。</p>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "read 命令",
      "url": "https://blog.tlcsdm.com/linux/bash/read.html",
      "id": "https://blog.tlcsdm.com/linux/bash/read.html",
      "summary": "用法 有时，脚本需要在执行过程中，由用户提供一部分数据，这时可以使用 read 命令。它将用户的输入存入一个变量，方便后面的代码使用。用户按下回车键，就表示输入结束。 read 命令的格式如下。 上面语法中，options 是参数选项，variable 是用来保存输入数值的一个或多个变量名。如果没有提供变量名，环境变量 REPLY 会包含用户输入的一整...",
      "content_html": "<h2>用法</h2>\n<p>有时，脚本需要在执行过程中，由用户提供一部分数据，这时可以使用 <code>read</code> 命令。它将用户的输入存入一个变量，方便后面的代码使用。用户按下回车键，就表示输入结束。</p>\n<p><code>read</code> 命令的格式如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [-options] [variable...]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面语法中，<code>options</code> 是参数选项，<code>variable</code> 是用来保存输入数值的一个或多个变量名。如果没有提供变量名，环境变量 <code>REPLY</code> 会包含用户输入的一整行数据。</p>\n<p>下面是一个例子 <code>demo.sh</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"输入一些文本 &gt; \"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> text</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"您的输入: </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$text</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，先显示一行提示文本，然后会等待用户输入文本。用户输入的文本，存入变量 <code>text</code>，在下一行显示出来。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> demo.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">输入一些文本</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">您好，世界</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">您的输入:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 您好，世界</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>read</code> 可以接受用户输入的多个值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Please,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> enter</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> your</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> firstname</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> and</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lastname</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> FN</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> LN</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Hi! </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$LN</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FN</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> !\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>read</code> 根据用户的输入，同时为两个变量赋值。</p>\n<p>如果用户的输入项少于 <code>read</code> 命令给出的变量数目，那么额外的变量值为空。如果用户的输入项多于定义的变量，那么多余的输入项会包含到最后一个变量中。</p>\n<p>如果 <code>read</code> 命令之后没有定义变量名，那么环境变量 <code>REPLY</code> 会包含所有的输入。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># read-single: read multiple values into default variable</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Enter one or more values &gt; \"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"REPLY = '</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$REPLY</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面脚本的运行结果如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> read-single</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Enter</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> one</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> or</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> more</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> values</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> d</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">REPLY</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'a b c d'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>read</code> 命令除了读取键盘输入，可以用来读取文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> read</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> myline</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$myline</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt; </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$filename</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子通过 <code>read</code> 命令，读取一个文件的内容。<code>done</code> 命令后面的定向符 <code>&lt;</code>，将文件导向 <code>read</code> 命令，每次读取一行，存入变量 <code>myline</code>，直到文件读取完毕。</p>\n<h2>参数</h2>\n<p><code>read</code> 命令的参数如下。</p>\n<ol>\n<li>\n<p><strong><code>-t</code> 参数</strong></p>\n<p><code>read</code> 命令的 <code>-t</code> 参数，设置了超时的秒数。如果超过了指定时间，用户仍然没有输入，脚本将放弃等待，继续向下执行。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"输入一些文本 &gt; \"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> read</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -t</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"用户已经输入了\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"用户没有输入\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，输入命令会等待 3 秒，如果用户超过这个时间没有输入，这个命令就会执行失败。<code>if</code> 根据命令的返回值，转入 <code>else</code> 代码块，继续往下执行。</p>\n<p>环境变量 <code>TMOUT</code> 也可以起到同样作用，指定 <code>read</code> 命令等待用户输入的时间(单位为秒)。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">TMOUT</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> response</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子也是等待 3 秒，如果用户还没有输入，就会超时。</p>\n</li>\n<li>\n<p><strong><code>-p</code> 参数</strong></p>\n<p><code>-p</code> 参数指定用户输入的提示信息。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Enter one or more values &gt; \"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"REPLY = '</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$REPLY</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，先显示 <code>Enter one or more values &gt;</code>，再接受用户的输入。</p>\n</li>\n<li>\n<p><strong><code>-a</code> 参数</strong></p>\n<p><code>-a</code> 参数把用户的输入赋值给一个数组，从零号位置开始。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> read</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> people</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">alice</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> duchess</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dodo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">people</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[2]</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">dodo</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，用户输入被赋值给一个数组 <code>people</code>，这个数组的 2 号成员就是 <code>dodo</code>。</p>\n</li>\n<li>\n<p><strong><code>-n</code> 参数</strong></p>\n<p><code>-n</code> 参数指定只读取若干个字符作为变量值，而不是整行读取。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> read</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> letter</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">abcdefghij</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $letter</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">abc</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，变量 <code>letter</code> 只包含 3 个字母。</p>\n</li>\n<li>\n<p><strong>-e 参数</strong></p>\n<p><code>-e</code> 参数允许用户输入的时候，使用 <code>readline</code> 库提供的快捷键，比如自动补全。具体的快捷键可以参阅《行操作》一章。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Please</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> input</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> the</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> path</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> the</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> file:</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -e</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> fileName</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $fileName</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>read</code> 命令接受用户输入的文件名。这时，用户可能想使用 Tab 键的文件名“自动补全”功能，但是 <code>read</code> 命令的输入默认不支持 <code>readline</code> 库的功能。<code>-e</code> 参数就可以允许用户使用自动补全。</p>\n</li>\n<li>\n<p><strong>其他参数</strong></p>\n<ul>\n<li><code>-d delimiter</code>: 定义字符串 <code>delimiter</code> 的第一个字符作为用户输入的结束，而不是一个换行符。</li>\n<li><code>-r</code>: raw 模式，表示不把用户输入的反斜杠字符解释为转义字符。</li>\n<li><code>-s</code>: 使得用户的输入不显示在屏幕上，这常常用于输入密码或保密信息。</li>\n<li><code>-u fd</code>: 使用文件描述符 <code>fd</code> 作为输入。</li>\n</ul>\n</li>\n</ol>\n<h2>IFS 变量</h2>\n<p><code>read</code> 命令读取的值，默认是以空格分隔。可以通过自定义环境变量 <code>IFS</code>(内部字段分隔符，Internal Field Separator 的缩写)，修改分隔标志。</p>\n<p><code>IFS</code> 的默认值是空格、Tab 符号、换行符号，通常取第一个(即空格)。</p>\n<p>如果把 <code>IFS</code> 定义成冒号(<code>:</code>)或分号(<code>;</code>)，就可以分隔以这两个符号分隔的值，这对读取文件很有用。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># read-ifs: read fields from a file</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">FILE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/etc/passwd</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Enter a username &gt; \"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> user_name</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">file_info</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"$(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">grep</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"^</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$user_name</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">:\" </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$FILE</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">)\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$file_info</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  IFS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\":\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> read</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> user</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pw</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> uid</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gid</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> name</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> home</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shell</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;&lt;&lt; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$file_info</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"User = '</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$user</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"UID = '</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$uid</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"GID = '</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$gid</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Full Name = '</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$name</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Home Dir. = '</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$home</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Shell = '</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$shell</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"No such user '</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$user_name</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt;&amp;2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>IFS</code> 设为冒号，然后用来分解 <code>/etc/passwd</code> 文件的一行。<code>IFS</code> 的赋值命令和 <code>read</code> 命令写在一行，这样的话，<code>IFS</code> 的改变仅对后面的命令生效，该命令执行后 <code>IFS</code> 会自动恢复原来的值。如果不写在一行，就要采用下面的写法。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">OLD_IFS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$IFS</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">IFS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\":\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">read</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> user</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pw</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> uid</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gid</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> name</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> home</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shell</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt;&lt;&lt; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$file_info</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">IFS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$OLD_IFS</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>另外，上面例子中，<code>&lt;&lt;&lt;</code> 是 Here 字符串，用于将变量值转为标准输入，因为 <code>read</code> 命令只能解析标准输入。</p>\n<p>如果 <code>IFS</code> 设为空字符串，就等同于将整行读入一个变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">input</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/path/to/txt/file\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> IFS</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> read</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -r</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> line</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$line</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &lt; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$input</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的命令可以逐行读取文件，每一行存入变量 <code>line</code>，打印出来以后再读取下一行。</p>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Bash 行操作",
      "url": "https://blog.tlcsdm.com/linux/bash/readline.html",
      "id": "https://blog.tlcsdm.com/linux/bash/readline.html",
      "summary": "简介 Bash 内置了 Readline 库，具有这个库提供的很多“行操作”功能，比如命令的自动补全，可以大大加快操作速度。 这个库默认采用 Emacs 快捷键，也可以改成 Vi 快捷键。 下面的命令可以改回 Emacs 快捷键。 如果想永久性更改编辑模式(Emacs / Vi)，可以将命令写在 ~/.inputrc 文件，这个文件是 Readline...",
      "content_html": "<h2>简介</h2>\n<p>Bash 内置了 Readline 库，具有这个库提供的很多“行操作”功能，比如命令的自动补全，可以大大加快操作速度。</p>\n<p>这个库默认采用 Emacs 快捷键，也可以改成 Vi 快捷键。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> vi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>下面的命令可以改回 Emacs 快捷键。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> emacs</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>如果想永久性更改编辑模式(Emacs / Vi)，可以将命令写在 <code>~/.inputrc</code> 文件，这个文件是 Readline 的配置文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> editing-mode</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> vi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>本章介绍的快捷键都属于 Emacs 模式。Vi 模式的快捷键，读者可以参考 Vi 编辑器的教程。</p>\n<p>Bash 默认开启这个库，但是允许关闭。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --noediting</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令中，<code>--noediting</code> 参数关闭了 Readline 库，启动的 Bash 就不带有行操作功能。</p>\n<h2>光标移动</h2>\n<p>Readline 提供快速移动光标的快捷键。</p>\n<ul>\n<li><code>Ctrl + a</code>: 移到行首。</li>\n<li><code>Ctrl + b</code>: 向行首移动一个字符，与左箭头作用相同。</li>\n<li><code>Ctrl + e</code>: 移到行尾。</li>\n<li><code>Ctrl + f</code>: 向行尾移动一个字符，与右箭头作用相同。</li>\n<li><code>Alt + f</code>: 移动到当前单词的词尾。</li>\n<li><code>Alt + b</code>: 移动到当前单词的词首。</li>\n</ul>\n<p>上面快捷键的 Alt 键，也可以用 ESC 键代替。</p>\n<h2>清除屏幕</h2>\n<p><code>Ctrl + l</code> 快捷键可以清除屏幕，即将当前行移到屏幕的第一行，与 <code>clear</code> 命令作用相同。</p>\n<h2>编辑操作</h2>\n<p>下面的快捷键可以编辑命令行内容。</p>\n<ul>\n<li><code>Ctrl + d</code>: 删除光标位置的字符(delete)。</li>\n<li><code>Ctrl + w</code>: 删除光标前面的单词。</li>\n<li><code>Ctrl + t</code>: 光标位置的字符与它前面一位的字符交换位置(transpose)。</li>\n<li><code>Alt + t</code>: 光标位置的词与它前面一位的词交换位置(transpose)。</li>\n<li><code>Alt + l</code>: 将光标位置至词尾转为小写(lowercase)。</li>\n<li><code>Alt + u</code>: 将光标位置至词尾转为大写(uppercase)。</li>\n</ul>\n<p>使用 <code>Ctrl + d</code> 的时候，如果当前行没有任何字符，会导致退出当前 Shell，所以要小心。</p>\n<p>剪切和粘贴快捷键如下。</p>\n<ul>\n<li><code>Ctrl + k</code>: 剪切光标位置到行尾的文本。</li>\n<li><code>Ctrl + u</code>: 剪切光标位置到行首的文本。</li>\n<li><code>Alt + d</code>: 剪切光标位置到词尾的文本。</li>\n<li><code>Alt + Backspace</code>: 剪切光标位置到词首的文本。</li>\n<li><code>Ctrl + y</code>: 在光标位置粘贴文本。</li>\n</ul>\n<p>同样地，Alt 键可以用 Esc 键代替。</p>\n<h2>自动补全</h2>\n<p>命令输入到一半的时候，可以按一下 Tab 键，Readline 会自动补全命令或路径。比如，输入 <code>cle</code>，再按下 Tab 键，Bash 会自动将这个命令补全为 <code>clear</code>。</p>\n<p>如果符合条件的命令或路径有多个，就需要连续按两次 Tab 键，Bash 会提示所有符合条件的命令或路径。</p>\n<p>除了命令或路径，Tab 还可以补全其他值。如果一个值以 <code>$</code> 开头，则按下 Tab 键会补全变量；如果以 <code>~</code> 开头，则补全用户名；如果以 <code>@</code> 开头，则补全主机名(hostname)，主机名以列在 <code>/etc/hosts</code> 文件里面的主机为准。</p>\n<p>自动补全相关的快捷键如下。</p>\n<ul>\n<li>Tab: 完成自动补全。</li>\n<li><code>Alt + ?</code>: 列出可能的补全，与连按两次 Tab 键作用相同。</li>\n<li><code>Alt + /</code>: 尝试文件路径补全。</li>\n<li><code>Ctrl + x /</code>: 先按 <code>Ctrl + x</code>，再按 <code>/</code>，等同于 <code>Alt + ?</code>，列出可能的文件路径补全。</li>\n<li><code>Alt + !</code>: 命令补全。</li>\n<li><code>Ctrl + x !</code>: 先按 <code>Ctrl + x</code>，再按 <code>!</code>，等同于 <code>Alt + !</code>，命令补全。</li>\n<li><code>Alt + ~</code>: 用户名补全。</li>\n<li><code>Ctrl + x ~</code>: 先按 <code>Ctrl + x</code>，再按 <code>~</code>，等同于 <code>Alt + ~</code>，用户名补全。</li>\n<li><code>Alt + $</code>: 变量名补全。</li>\n<li><code>Ctrl + x $</code>: 先按 <code>Ctrl + x</code>，再按 <code>$</code>，等同于 <code>Alt + $</code>，变量名补全。</li>\n<li><code>Alt + @</code>: 主机名补全。</li>\n<li><code>Ctrl + x @</code>: 先按 <code>Ctrl + x</code>，再按 <code>@</code>，等同于 <code>Alt + @</code>，主机名补全。</li>\n<li><code>Alt + *</code>: 在命令行一次性插入所有可能的补全。</li>\n<li><code>Alt + Tab</code>: 尝试用 <code>.bash_history</code> 里面以前执行命令，进行补全。</li>\n</ul>\n<p>上面的 <code>Alt</code> 键也可以用 ESC 键代替。</p>\n<h2>操作历史</h2>\n<h3>基本用法</h3>\n<p>Bash 会保留用户的操作历史，即用户输入的每一条命令都会记录。退出当前 Shell 的时候，Bash 会将用户在当前 Shell 的操作历史写入 <code>~/.bash_history</code> 文件，该文件默认储存 500 个操作。</p>\n<p>环境变量 <code>HISTFILE</code> 总是指向这个文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $HISTFILE</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/home/me/.bash_history</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>有了操作历史以后，就可以使用方向键的 <code>↑</code> 和 <code>↓</code>，快速浏览上一条和下一条命令。</p>\n<p>下面的方法可以快速执行以前执行过的命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> World</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> World</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Goodbye</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Goodbye</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> !e</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Goodbye</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Goodbye</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>!e</code> 表示找出操作历史之中，最近的那一条以 <code>e</code> 开头的命令并执行。Bash 会先输出那一条命令 <code>echo Goodbye</code>，然后直接执行。</p>\n<p>同理，<code>!echo</code> 也会执行最近一条以 <code>echo</code> 开头的命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> !echo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Goodbye</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Goodbye</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> !echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> H</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Goodbye</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> H</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Goodbye</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> H</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> !echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> H</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> G</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Goodbye</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> H</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> G</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Goodbye</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> H</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> G</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注意，<code>!string</code> 语法只会匹配命令，不会匹配参数。所以 <code>!echo H</code> 不会执行 <code>echo Hello World</code>，而是会执行 <code>echo Goodbye</code>，并把参数 <code>H</code> 附加在这条命令之后。同理，<code>!echo H G</code> 也是等同于 <code>echo Goodbye</code> 命令之后附加 <code>H G</code>。</p>\n<p>最后，按下 <code>Ctrl + r</code> 会显示操作历史，可以用方向键上下移动，选择其中要执行的命令。也可以键入命令的首字母，Shell 就会自动在历史文件中，查询并显示匹配的结果。</p>\n<h3>history 命令</h3>\n<p><code>history</code> 命令能显示操作历史，即 <code>.bash_history</code> 文件的内容。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> history</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">498</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Goodbye</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">499</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">500</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cd</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>使用该命令，而不是直接读取 <code>.bash_history</code> 文件的好处是，它会在所有的操作前加上行号，最近的操作在最后面，行号最大。</p>\n<p>通过定制环境变量 <code>HISTTIMEFORMAT</code>，可以显示每个操作的时间。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> export</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> HISTTIMEFORMAT='%F %T  '</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> history</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  2013-06-09</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 10:40:12</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">   cat</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /etc/issue</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  2013-06-09</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 10:40:12</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">   clear</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>%F</code> 相当于 <code>%Y - %m - %d</code>，<code>%T</code> 相当于 <code>%H : %M : %S</code>。</p>\n<p>只要设置 <code>HISTTIMEFORMAT</code> 这个环境变量，就会在 <code>.bash_history</code> 文件保存命令的执行时间戳。如果不设置，就不会保存时间戳。</p>\n<p>如果不希望保存本次操作的历史，可以设置环境变量 <code>HISTSIZE</code> 等于 0。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> HISTSIZE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>如果 <code>HISTSIZE=0</code> 写入用户主目录的 <code>~/.bashrc</code> 文件，那么就不会保留该用户的操作历史。如果写入 <code>/etc/profile</code>，整个系统都不会保留操作历史。</p>\n<p>如果想搜索某个以前执行的命令，可以配合 <code>grep</code> 命令搜索操作历史。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">history</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">grep</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /usr/bin</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令返回 <code>.bash_history</code> 文件里面，那些包含 <code>/usr/bin</code> 的命令。</p>\n<p>操作历史的每一条记录都有编号。知道了命令的编号以后，可以用 <code>感叹号 + 编号</code> 执行该命令。如果想要执行 <code>.bash_history</code> 里面的第 8 条命令，可以像下面这样操作。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">!</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">8</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>history</code> 命令的 <code>-c</code> 参数可以清除操作历史。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">history</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -c</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h3>相关快捷键</h3>\n<p>下面是一些与操作历史相关的快捷键。</p>\n<ul>\n<li><code>Ctrl + p</code>: 显示上一个命令，与向上箭头效果相同(previous)。</li>\n<li><code>Ctrl + n</code>: 显示下一个命令，与向下箭头效果相同(next)。</li>\n<li><code>Alt + &lt;</code>: 显示第一个命令。</li>\n<li><code>Alt + &gt;</code>: 显示最后一个命令，即当前的命令。</li>\n<li><code>Ctrl + o</code>: 执行历史文件里面的当前条目，并自动显示下一条命令。这对重复执行某个序列的命令很有帮助。</li>\n</ul>\n<p>感叹号<code>!</code>的快捷键如下。</p>\n<ul>\n<li><code>!!</code>: 执行上一个命令。</li>\n<li><code>!n</code>: 执行历史文件里面行号为 <code>n</code> 的命令。</li>\n<li><code>!-n</code>: 执行当前命令之前 <code>n</code> 条的命令。</li>\n<li><code>!string</code>: 执行最近一个以指定字符串 <code>string</code> 开头的命令。</li>\n<li><code>!?string</code>: 执行最近一条包含字符串 <code>string</code> 的命令。</li>\n<li><code>^string1^string2</code>: 执行最近一条包含 <code>string1</code> 的命令，将其替换成 <code>string2</code>。</li>\n</ul>\n<h2>其他快捷键</h2>\n<ul>\n<li><code>Ctrl + j</code>: 等同于回车键(LINEFEED)。</li>\n<li><code>Ctrl + m</code>: 等同于回车键(CARRIAGE RETURN)。</li>\n<li><code>Ctrl + o</code>: 等同于回车键，并展示操作历史的下一个命令。</li>\n<li><code>Ctrl + v</code>: 将下一个输入的特殊字符变成字面量，比如回车变成 <code>^M</code>。</li>\n<li><code>Ctrl + [</code>: 等同于 ESC。</li>\n<li><code>Alt + .</code>: 插入上一个命令的最后一个词。</li>\n<li><code>Alt + _</code>: 等同于 <code>Alt + .</code>。</li>\n</ul>\n<p>上面的 <code>Alt + .</code> 快捷键，对于很长的文件路径，有时会非常方便。因为 Unix 命令的最后一个参数通常是文件路径。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">mkdir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo_bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"> #按下 Alt + .</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，在 <code>cd</code> 命令后按下 <code>Alt + .</code>，就会自动插入 <code>foo_bar</code>。</p>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Bash 脚本入门",
      "url": "https://blog.tlcsdm.com/linux/bash/script.html",
      "id": "https://blog.tlcsdm.com/linux/bash/script.html",
      "summary": "脚本(script)就是包含一系列命令的一个文本文件。Shell 读取这个文件，依次执行里面的所有命令，就好像这些命令直接输入到命令行一样。所有能够在命令行完成的任务，都能够用脚本完成。 脚本的好处是可以重复使用，也可以指定在特定场合自动调用，比如系统启动或关闭时自动执行脚本。",
      "content_html": "<p>脚本(script)就是包含一系列命令的一个文本文件。Shell 读取这个文件，依次执行里面的所有命令，就好像这些命令直接输入到命令行一样。所有能够在命令行完成的任务，都能够用脚本完成。</p>\n<p>脚本的好处是可以重复使用，也可以指定在特定场合自动调用，比如系统启动或关闭时自动执行脚本。</p>\n<!-- more -->\n<h2>Shebang 行</h2>\n<p>脚本的第一行通常是指定解释器，即这个脚本必须通过什么解释器执行。这一行以 <code>#!</code> 字符开头，这个字符称为 Shebang，所以这一行就叫做 Shebang 行。</p>\n<p><code>#!</code> 后面就是脚本解释器的位置，Bash 脚本的解释器一般是 <code>/bin/sh</code> 或 <code>/bin/bash</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>#!</code> 与脚本解释器之间有没有空格，都是可以的。</p>\n<p>如果 Bash 解释器不放在目录 <code>/bin</code>，脚本就无法执行了。为了保险，可以写成下面这样。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/usr/bin/env bash</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令使用 <code>env</code> 命令(这个命令总是在 <code>/usr/bin</code> 目录)，返回 Bash 可执行文件的位置。<code>env</code> 命令的详细介绍，请看后文。</p>\n<p>Shebang 行不是必需的，但是建议加上这行。如果缺少该行，就需要手动将脚本传给解释器。举例来说，脚本是 <code>script.sh</code>，有 Shebang 行的时候，可以直接调用执行。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">./script.sh</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，<code>script.sh</code> 是脚本文件名。脚本通常使用 <code>.sh</code> 后缀名，不过这不是必需的。</p>\n<p>如果没有 Shebang 行，就只能手动将脚本传给解释器来执行。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /bin/sh</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ./script.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ./script.sh</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>执行权限和路径</h2>\n<p>前面说过，只要指定了 Shebang 行的脚本，可以直接执行。这有一个前提条件，就是脚本需要有执行权限。可以使用下面的命令，赋予脚本执行权限。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 给所有用户执行权限</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> chmod</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 给所有用户读权限和执行权限</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> chmod</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +rx</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> chmod</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 755</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 只给脚本拥有者读权限和执行权限</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> chmod</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> u+rx</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>脚本的权限通常设为 <code>755</code> (拥有者有所有权限，其他人有读和执行权限)或者 <code>700</code>(只有拥有者可以执行)。</p>\n<p>除了执行权限，脚本调用时，一般需要指定脚本的路径(比如 <code>path/script.sh</code>)。如果将脚本放在环境变量 <code>$PATH</code> 指定的目录中，就不需要指定路径了。因为 Bash 会自动到这些目录中，寻找是否存在同名的可执行文件。</p>\n<p>建议在主目录新建一个 <code>~/bin</code> 子目录，专门存放可执行脚本，然后把 <code>~/bin</code> 加入 <code>$PATH</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:~/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bin</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令改变环境变量 <code>$PATH</code>，将 <code>~/bin</code> 添加到 <code>$PATH</code> 的末尾。可以将这一行加到 <code>~/.bashrc</code> 文件里面，然后重新加载一次 <code>.bashrc</code>，这个配置就可以生效了。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">source</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~/.bashrc</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>以后不管在什么目录，直接输入脚本文件名，脚本就会执行。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">script.sh</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令没有指定脚本路径，因为 <code>script.sh</code> 在 <code>$PATH</code> 指定的目录中。</p>\n<h2>env 命令</h2>\n<p><code>env</code> 命令总是指向 <code>/usr/bin/env</code> 文件，或者说，这个二进制文件总是在目录 <code>/usr/bin</code>。</p>\n<p><code>#!/usr/bin/env NAME</code> 这个语法的意思是，让 Shell 查找 <code>$PATH</code> 环境变量里面第一个匹配的 <code>NAME</code>。如果您不知道某个命令的具体路径，或者希望兼容其他用户的机器，这样的写法就很有用。</p>\n<p><code>/usr/bin/env bash</code> 的意思就是，返回 <code>bash</code> 可执行文件的位置，前提是 <code>bash</code> 的路径是在 <code>$PATH</code> 里面。其他脚本文件也可以使用这个命令。比如 Node.js 脚本的 Shebang 行，可以写成下面这样。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/usr/bin/env node</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>env</code> 命令的参数如下。</p>\n<ul>\n<li><code>-i</code>, <code>--ignore-environment</code>: 不带环境变量启动。</li>\n<li><code>-u</code>, <code>--unset=NAME</code>: 从环境变量中删除一个变量。</li>\n<li><code>--help</code>: 显示帮助。</li>\n<li><code>--version</code>: 输出版本信息。</li>\n</ul>\n<p>下面是一个例子，新建一个不带任何环境变量的 Shell。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">env</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /bin/sh</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>注释</h2>\n<p>Bash 脚本中，<code>#</code> 表示注释，可以放在行首，也可以放在行尾。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 本行是注释</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Hello World!'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'Hello World!'</span><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"> # 井号后面的部分也是注释</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>建议在脚本开头，使用注释说明当前脚本的作用，这样有利于日后的维护。</p>\n<h2>脚本参数</h2>\n<p>调用脚本的时候，脚本文件名后面可以带有参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">script.sh</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> word1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> word2</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> word3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，<code>script.sh</code> 是一个脚本文件，<code>word1</code>、<code>word2</code> 和 <code>word3</code> 是三个参数。</p>\n<p>脚本文件内部，可以使用特殊变量，引用这些参数。</p>\n<ul>\n<li><code>$0</code>: 脚本文件名，即 <code>script.sh</code>。</li>\n<li><code>$1</code>~<code>$9</code>: 对应脚本的第一个参数到第九个参数。</li>\n<li><code>$#</code>: 参数的总数。</li>\n<li><code>$@</code>: 全部的参数，参数之间使用空格分隔。</li>\n<li><code>$*</code>: 全部的参数，参数之间使用变量 <code>$IFS</code> 值的第一个字符分隔，默认为空格，但是可以自定义。</li>\n</ul>\n<p>如果脚本的参数多于 9 个，那么第 10 个参数可以用 <code>${10}</code> 的形式引用，以此类推。</p>\n<p>注意，如果命令是 <code>command -o foo bar</code>，那么 <code>-o</code> 是 <code>$1</code>，<code>foo</code> 是 <code>$2</code>，<code>bar</code> 是 <code>$3</code>。</p>\n<p>下面是一个脚本内部读取命令行参数的例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># script.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"全部参数: \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $@</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"命令行参数数量: \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $#</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '$0 = '</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '$1 = '</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '$2 = '</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> '$3 = '</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行结果如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ./script.sh</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">全部参数:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> c</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">命令行参数数量:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> =  script.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> =  a</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> =  b</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> =  c</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>用户可以输入任意数量的参数，利用 <code>for</code> 循环，可以读取每一个参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">for</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> i</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$@</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $i</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>$@</code> 返回一个全部参数的列表，然后使用 <code>for</code> 循环遍历。</p>\n<p>如果多个参数放在双引号里面，视为一个参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">./script.sh</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"a b\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面例子中，Bash 会认为 <code>\"a b\"</code> 是一个参数，<code>$1</code> 会返回 <code>a b</code>。注意，返回时不包括双引号。</p>\n<h2>shift 命令</h2>\n<p><code>shift</code> 命令可以改变脚本参数，每次执行都会移除脚本当前的第一个参数 (<code>$1</code>)，使得后面的参数向前一位，即 <code>$2</code> 变成 <code>$1</code>、<code>$3</code> 变成 <code>$2</code>、<code>$4</code> 变成 <code>$3</code>，以此类推。</p>\n<p><code>while</code> 循环结合 <code>shift</code> 命令，也可以读取每一个参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"一共输入了 </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$#</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 个参数\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> !=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"剩下 </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$#</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 个参数\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"参数: </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">$1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  shift</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>shift</code> 命令每次移除当前第一个参数，从而通过 <code>while</code> 循环遍历所有参数。</p>\n<p><code>shift</code> 命令可以接受一个整数作为参数，指定所要移除的参数个数，默认为 <code>1</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">shift</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面的命令移除前三个参数，原来的 <code>$4</code> 变成 <code>$1</code>。</p>\n<h2>getopts 命令</h2>\n<p><code>getopts</code> 命令用在脚本内部，可以解析复杂的脚本命令行参数，通常与 <code>while</code> 循环一起使用，取出脚本所有的带有前置连词线 (<code>-</code>) 的参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">getopts</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> optstring</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> name</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>它带有两个参数。第一个参数 <code>optstring</code> 是字符串，给出脚本所有的连词线参数。比如，某个脚本可以有三个配置项参数 <code>-l</code>、<code>-h</code>、<code>-a</code>，其中只有 <code>-a</code> 可以带有参数值，而 <code>-l</code> 和 <code>-h</code> 是开关参数，那么 <code>getopts</code> 的第一个参数写成 <code>lha:</code>，顺序不重要。注意，<code>a</code> 后面有一个冒号，表示该参数带有参数值，<code>getopts</code> 规定带有参数值的配置项参数，后面必须带有一个冒号 (<code>:</code>)。<code>getopts</code> 的第二个参数 <code>name</code> 是一个变量名，用来保存当前取到的配置项参数，即 <code>l</code>、<code>h</code> 或 <code>a</code>。</p>\n<p>下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">while</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> getopts</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'lha:'</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> OPTION</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">do</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  case</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$OPTION</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> in</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">    l</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">      echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"linuxconfig\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      ;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">    h</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">      echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"h stands for h\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      ;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">    a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      avalue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$OPTARG</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">      echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"The value provided is </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$OPTARG</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ?</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">      echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"script usage: $(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">basename</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $0</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">) [-l] [-h] [-a somevalue]\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt;&amp;2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">      exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      ;;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  esac</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">done</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">shift</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"$((</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$OPTIND</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> - 1))\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>while</code> 循环不断执行 <code>getopts 'lha:' OPTION</code> 命令，每次执行就会读取一个连词线参数(以及对应的参数值)，然后进入循环体。变量 <code>OPTION</code> 保存的是，当前处理的那一个连词线参数(即 <code>l</code>、<code>h</code> 或 <code>a</code>)。如果用户输入了没有指定的参数(比如 <code>-x</code>)，那么 <code>OPTION</code> 等于 <code>?</code>。循环体内使用 <code>case</code> 判断，处理这四种不同的情况。</p>\n<p>如果某个连词线参数带有参数值，比如 <code>-a foo</code>，那么处理 <code>a</code> 参数的时候，环境变量 <code>$OPTARG</code> 保存的就是参数值。</p>\n<p>注意，只要遇到不带连词线的参数，<code>getopts</code> 就会执行失败，从而退出 <code>while</code> 循环。比如，<code>getopts</code> 可以解析 <code>command -l foo</code>，但不可以解析 <code>command foo -l</code>。另外，多个连词线参数写在一起的形式，比如 <code>command -lh</code>，<code>getopts</code> 也可以正确处理。</p>\n<p>变量 <code>$OPTIND</code> 在 <code>getopts</code> 开始执行前是 <code>1</code>，然后每次执行就会加 <code>1</code>。等到退出 <code>while</code> 循环，就意味着连词线参数全部处理完毕。这时，<code>$OPTIND - 1</code> 就是已经处理的连词线参数个数，使用 <code>shift</code> 命令将这些参数移除，保证后面的代码可以用 <code>$1</code>、<code>$2</code> 等处理命令的主参数。</p>\n<h2>配置项参数终止符 <code>--</code></h2>\n<p>变量当作命令的参数时，有时希望指定变量只能作为实体参数，不能当作配置项参数，这时可以使用配置项参数终止符 <code>--</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"~/docs\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $myPath</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>--</code> 强制变量 <code>$myPath</code> 只能当作实体参数(即路径名)解释。</p>\n<p>如果变量不是路径名，就会报错。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> myPath=\"-l\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $myPath</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 无法访问'-l':</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 没有那个文件或目录</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，变量 <code>myPath</code> 的值为 <code>-l</code>，不是路径。但是，<code>--</code> 强制 <code>$myPath</code> 只能作为路径解释，导致报错“不存在该路径”。</p>\n<h2>exit 命令</h2>\n<p><code>exit</code> 命令用于终止当前脚本的执行，并向 Shell 返回一个退出值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">exit</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令中止当前脚本，将最后一条命令的退出状态，作为整个脚本的退出状态。</p>\n<p><code>exit</code> 命令后面可以跟参数，该参数就是退出状态。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 退出值为0(成功)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 退出值为1(失败)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>退出时，脚本会返回一个退出值。脚本的退出值，<code>0</code> 表示正常，<code>1</code> 表示发生错误，<code>2</code> 表示用法不对，<code>126</code> 表示不是可执行脚本，<code>127</code> 表示命令没有发现。如果脚本被信号 <code>N</code> 终止，则退出值为 <code>128 + N</code>。简单来说，只要退出值非 0，就认为执行出错。</p>\n<p>下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ $(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">id</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -u</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">!=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"0\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"根用户才能执行当前脚本\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子中，<code>id -u</code> 命令返回用户的 ID，一旦用户的 ID 不等于 <code>0</code>(根用户的 ID)，脚本就会退出，并且退出码为 <code>1</code>，表示运行失败。</p>\n<p><code>exit</code> 与 <code>return</code> 命令的差别是，<code>return</code> 命令是函数的退出，并返回一个值给调用者，脚本依然执行。<code>exit</code> 是整个脚本的退出，如果在函数之中调用 <code>exit</code>，则退出函数，并终止脚本执行。</p>\n<h2>命令执行结果</h2>\n<p>命令执行结束后，会有一个返回值。<code>0</code> 表示执行成功，非 <code>0</code> (通常是 <code>1</code>)表示执行失败。环境变量 <code>$?</code> 可以读取前一个命令的返回值。</p>\n<p>利用这一点，可以在脚本中对命令执行结果进行判断。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $some_directory</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$?</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"0\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  rm</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"无法切换目录!\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> 1&gt;&amp;2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>cd $some_directory</code> 这个命令如果执行成功(返回值等于 <code>0</code>)，就删除该目录里面的文件，否则退出脚本，整个脚本的返回值变为 <code>1</code>，表示执行失败。</p>\n<p>由于 <code>if</code> 可以直接判断命令的执行结果，执行相应的操作，上面的脚本可以改写成下面的样子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> cd</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $some_directory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  rm</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Could not change directory! Aborting.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> 1&gt;&amp;2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>更简洁的写法是利用两个逻辑运算符 <code>&amp;&amp;</code>(且)和 <code>||</code>(或)。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 第一步执行成功，才会执行第二步</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $some_directory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;&amp; </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">rm</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 第一步执行失败，才会执行第二步</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $some_directory</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> || </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>source 命令</h2>\n<p><code>source</code> 命令用于执行一个脚本，通常用于重新加载一个配置文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">source</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .bashrc</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>source</code> 命令最大的特点是在当前 Shell 执行脚本，不像直接执行脚本时，会新建一个子 Shell。所以，<code>source</code> 命令执行脚本时，不需要 <code>export</code> 变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># test.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面脚本输出 <code>$foo</code> 变量的值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 当前 Shell 新建一个变量 foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 打印输出 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> source</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> test.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 打印输出空字符串</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> test.sh</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，当前 Shell 的变量 <code>foo</code> 并没有 <code>export</code>，所以直接执行无法读取，但是 <code>source</code> 执行可以读取。</p>\n<p><code>source</code> 命令的另一个用途，是在脚本内部加载外部库。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">source</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ./lib.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">function_from_lib</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面脚本在内部使用 <code>source</code> 命令加载了一个外部库，然后就可以在脚本里面，使用这个外部库定义的函数。</p>\n<p><code>source</code> 有一个简写形式，可以使用一个点 (<code>.</code>) 来表示。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .bashrc</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>别名，alias 命令</h2>\n<p><code>alias</code> 命令用来为一个命令指定别名，这样更便于记忆。下面是 <code>alias</code> 的格式。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">alias</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> NAME</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">DEFINITION</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令中，<code>NAME</code> 是别名的名称，<code>DEFINITION</code> 是别名对应的原始命令。注意，等号两侧不能有空格，否则会报错。</p>\n<p>一个常见的例子是为 <code>grep</code> 命令起一个 <code>search</code> 的别名。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">alias</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> search</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">grep</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>alias</code> 也可以用来为长命令指定一个更短的别名。下面是通过别名定义一个 <code>today</code> 的命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> alias</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> today='date +\"%A, %B %-d, %Y\"'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> today</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">星期一,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 一月</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 6,</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2020</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>有时为了防止误删除文件，可以指定 <code>rm</code> 命令的别名。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">alias</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> rm</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'rm -i'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令指定 <code>rm</code> 命令是 <code>rm -i</code>，每次删除文件之前，都会让用户确认。</p>\n<p><code>alias</code> 定义的别名也可以接受参数，参数会直接传入原始命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> alias</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo='echo It says: '</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">It</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> says:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，别名定义了 <code>echo</code> 命令的前两个参数，等同于修改了 <code>echo</code> 命令的默认行为。</p>\n<p>指定别名以后，就可以像使用其他命令一样使用别名。一般来说，都会把常用的别名写在 <code>~/.bashrc</code> 的末尾。另外，只能为命令定义别名，为其他部分(比如很长的路径)定义别名是无效的。</p>\n<p>直接调用 <code>alias</code> 命令，可以显示所有别名。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">alias</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>unalias</code> 命令可以解除别名。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">unalias</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>参考链接</h2>\n<ul>\n<li><a href=\"https://linuxconfig.org/how-to-use-getopts-to-parse-a-script-options\" target=\"_blank\" rel=\"noopener noreferrer\">How to use getopts to parse a script options</a>, Egidio Docile</li>\n</ul>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "set 命令",
      "url": "https://blog.tlcsdm.com/linux/bash/set.html",
      "id": "https://blog.tlcsdm.com/linux/bash/set.html",
      "summary": "set 命令是 Bash 脚本的重要环节，却常常被忽视，导致脚本的安全性和可维护性出问题。本章介绍 set 的基本用法，帮助您写出更安全的 Bash 脚本。",
      "content_html": "<p><code>set</code> 命令是 Bash 脚本的重要环节，却常常被忽视，导致脚本的安全性和可维护性出问题。本章介绍 <code>set</code> 的基本用法，帮助您写出更安全的 Bash 脚本。</p>\n<!-- more -->\n<h2>简介</h2>\n<p>我们知道，Bash 执行脚本时，会创建一个子 Shell。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面代码中，<code>script.sh</code> 是在一个子 Shell 里面执行。这个子 Shell 就是脚本的执行环境，Bash 默认给定了这个环境的各种参数。</p>\n<p><code>set</code> 命令用来修改子 Shell 环境的运行参数，即定制环境。一共有十几个参数可以定制，<a href=\"https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html\" target=\"_blank\" rel=\"noopener noreferrer\">官方手册</a>有完整清单，本章介绍其中最常用的几个。</p>\n<p>顺便提一下，如果命令行下不带任何参数，直接运行 <code>set</code>，会显示所有的环境变量和 Shell 函数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>set -u</h2>\n<p>执行脚本时，如果遇到不存在的变量，Bash 默认忽略它。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/usr/bin/env bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $a</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>$a</code> 是一个不存在的变量。执行结果如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，<code>echo $a</code> 输出了一个空行，Bash 忽略了不存在的 <code>$a</code>，然后继续执行 <code>echo bar</code>。大多数情况下，这不是开发者想要的行为，遇到变量不存在，脚本应该报错，而不是一声不响地往下执行。</p>\n<p><code>set -u</code> 就用来改变这种行为。脚本在头部加上它，遇到不存在的变量就会报错，并停止执行。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/usr/bin/env bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -u</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $a</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>运行结果如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh:行4:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 未绑定的变量</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，脚本报错了，并且不再执行后面的语句。</p>\n<p><code>-u</code> 还有另一种写法 <code>-o nounset</code>，两者是等价的。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> nounset</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>set -x</h2>\n<p>默认情况下，脚本执行后，只输出运行结果，没有其他内容。如果多个命令连续执行，它们的运行结果就会连续输出。有时会分不清，某一段内容是什么命令产生的。</p>\n<p><code>set -x</code> 用来在运行结果之前，先输出执行的那一行命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/usr/bin/env bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行上面的脚本，结果如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，执行 <code>echo bar</code> 之前，该命令会先打印出来，行首以 <code>+</code> 表示。这对于调试复杂的脚本是很有用的。</p>\n<p><code>-x</code> 还有另一种写法 <code>-o xtrace</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> xtrace</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>脚本当中如果要关闭命令输出，可以使用 <code>set +x</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">number</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$number</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Number equals 1\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">else</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Number does not equal 1\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +x</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子中，只对特定的代码段打开命令输出。</p>\n<h2>Bash 的错误处理</h2>\n<p>如果脚本里面有运行失败的命令(返回值非 <code>0</code>)，Bash 默认会继续执行后面的命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/usr/bin/env bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面脚本中，<code>foo</code> 是一个不存在的命令，执行时会报错。但是，Bash 会忽略这个错误，继续往下执行。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">script.sh:行3:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 未找到命令</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，Bash 只是显示有错误，并没有终止执行。</p>\n<p>这种行为很不利于脚本安全和除错。实际开发中，如果某个命令失败，往往需要脚本停止执行，防止错误累积。这时，一般采用下面的写法。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">command</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> || </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面的写法表示只要 <code>command</code> 有非零返回值，脚本就会停止执行。</p>\n<p>如果停止执行之前需要完成多个操作，就要采用下面三种写法。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 写法一</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">command</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> || { </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"command failed\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 写法二</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ! </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">command</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"command failed\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 写法三</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">command</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$?</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -ne</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"command failed\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">exit</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>另外，除了停止执行，还有一种情况。如果两个命令有继承关系，只有第一个命令成功了，才能继续执行第二个命令，那么就要采用下面的写法。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">command1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;&amp; </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">command2</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>set -e</h2>\n<p>上面这些写法多少有些麻烦，容易疏忽。<code>set -e</code> 从根本上解决了这个问题，它使得脚本只要发生错误，就终止执行。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/usr/bin/env bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -e</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行结果如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">script.sh:行4:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 未找到命令</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，第 4 行执行失败以后，脚本就终止执行了。</p>\n<p><code>set -e</code> 根据返回值来判断，一个命令是否运行失败。但是，某些命令的非零返回值可能不表示失败，或者开发者希望在命令失败的情况下，脚本继续执行下去。这时可以暂时关闭 <code>set -e</code>，该命令执行结束后，再重新打开 <code>set -e</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +e</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">command1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">command2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -e</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>set +e</code> 表示关闭 <code>-e</code> 选项，<code>set -e</code> 表示重新打开 <code>-e</code> 选项。</p>\n<p>还有一种方法是使用 <code>command || true</code>，使得该命令即使执行失败，脚本也不会终止执行。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -e</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> || </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>true</code> 使得这一行语句总是会执行成功，后面的 <code>echo bar</code> 会执行。</p>\n<p><code>-e</code> 还有另一种写法 <code>-o errexit</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> errexit</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>set -o pipefail</h2>\n<p><code>set -e</code> 有一个例外情况，就是不适用于管道命令。</p>\n<p>所谓管道命令，就是多个子命令通过管道运算符 (<code>|</code>) 组合成为一个大的命令。Bash 会把最后一个子命令的返回值，作为整个命令的返回值。也就是说，只要最后一个子命令不失败，管道命令总是会执行成功，因此它后面命令依然会执行，<code>set -e</code> 就失效了。</p>\n<p>请看下面这个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/usr/bin/env bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -e</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行结果如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">script.sh:行4:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 未找到命令</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，<code>foo</code> 是一个不存在的命令，但是 <code>foo | echo a</code> 这个管道命令会执行成功，导致后面的 <code>echo bar</code> 会继续执行。</p>\n<p><code>set -o pipefail</code> 用来解决这种情况，只要一个子命令失败，整个管道命令就失败，脚本就会终止执行。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">#!/usr/bin/env bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -eo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipefail</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>运行后，结果如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">a</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">script.sh:行4:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 未找到命令</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，<code>echo bar</code> 没有执行。</p>\n<h2>其他参数</h2>\n<p><code>set</code> 命令还有一些其他参数。</p>\n<ul>\n<li><code>set -n</code>: 等同于 <code>set -o noexec</code>，不运行命令，只检查语法是否正确。</li>\n<li><code>set -f</code>: 等同于 <code>set -o noglob</code>，表示不对通配符进行文件名扩展。</li>\n<li><code>set -v</code>: 等同于 <code>set -o verbose</code>，表示打印 Shell 接收到的每一行输入。</li>\n</ul>\n<p>上面的 <code>-f</code> 和 <code>-v</code> 参数，可以分别使用 <code>set +f</code>、<code>set +v</code> 关闭。</p>\n<h2>set 命令总结</h2>\n<p>上面重点介绍的 <code>set</code> 命令的四个参数，一般都放在一起使用。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 写法一</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -euxo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipefail</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 写法二</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -eux</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipefail</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这两种写法建议放在所有 Bash 脚本的头部。</p>\n<p>另一种办法是在执行 Bash 脚本的时候，从命令行传入这些参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -euxo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipefail</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.sh</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>shopt 命令</h2>\n<p><code>shopt</code> 命令用来调整 Shell 的参数，跟 <code>set</code> 命令的作用很类似。之所以会有这两个类似命令的主要原因是，<code>set</code> 是从 Ksh 继承的，属于 POSIX 规范的一部分，而 <code>shopt</code> 是 Bash 特有的。</p>\n<p>直接输入 <code>shopt</code> 可以查看所有参数，以及它们各自打开和关闭的状态。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">shopt</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>shopt</code> 命令后面跟着参数名，可以查询该参数是否打开。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shopt</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> globstar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">globstar</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  off</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子表示 <code>globstar</code> 参数默认是关闭的。</p>\n<ol>\n<li>\n<p><strong><code>-s</code></strong></p>\n<p><code>-s</code> 用来打开某个参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> optionNameHere</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p><strong><code>-u</code></strong></p>\n<p><code>-u</code> 用来关闭某个参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -u</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> optionNameHere</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>举例来说，<code>histappend</code> 这个参数表示退出当前 Shell 时，将操作历史追加到历史文件中。这个参数默认是打开的，如果使用下面的命令将其关闭，那么当前 Shell 的操作历史将替换掉整个历史文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -u</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> histappend</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p><strong><code>-q</code></strong></p>\n<p><code>-q</code> 的作用也是查询某个参数是否打开，但不是直接输出查询结果，而是通过命令的执行状态 (<code>$?</code>) 表示查询结果。如果状态为 <code>0</code>，表示该参数打开；如果为 <code>1</code>，表示该参数关闭。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -q</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> globstar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令查询 <code>globstar</code> 参数是否打开。返回状态为 <code>1</code>，表示该参数是关闭的。</p>\n<p>这个用法主要用于脚本，供 <code>if</code> 条件结构使用。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> shopt</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -q</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> globstar</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n<h2>参考链接</h2>\n<ul>\n<li><a href=\"https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html\" target=\"_blank\" rel=\"noopener noreferrer\">The Set built-in</a></li>\n<li><a href=\"https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/\" target=\"_blank\" rel=\"noopener noreferrer\">Safer bash scripts with 'set -euxo pipefail’</a></li>\n<li><a href=\"http://www.davidpashley.com/articles/writing-robust-shell-scripts/\" target=\"_blank\" rel=\"noopener noreferrer\">Writing Robust Bash Shell Scripts</a></li>\n</ul>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "目录堆栈",
      "url": "https://blog.tlcsdm.com/linux/bash/stack.html",
      "id": "https://blog.tlcsdm.com/linux/bash/stack.html",
      "summary": "为了方便用户在不同目录之间切换，Bash 提供了目录堆栈功能。",
      "content_html": "<p>为了方便用户在不同目录之间切换，Bash 提供了目录堆栈功能。</p>\n<!-- more -->\n<h2>cd -</h2>\n<p>Bash 可以记忆用户进入过的目录。默认情况下，只记忆前一次所在的目录，<code>cd -</code> 命令可以返回前一次的目录。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 当前目录是 /path/to/foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 重新回到 /path/to/foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> -</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，用户原来所在的目录是 <code>/path/to/foo</code>，进入子目录 <code>bar</code> 以后，使用 <code>cd -</code> 可以回到原来的目录。</p>\n<h2>pushd，popd</h2>\n<p>如果希望记忆多重目录，可以使用 <code>pushd</code> 命令和 <code>popd</code> 命令。它们用来操作目录堆栈。</p>\n<p><code>pushd</code> 命令的用法类似 <code>cd</code> 命令，可以进入指定的目录。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">pushd dirname</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令会进入目录 <code>dirname</code>，并将该目录放入堆栈。</p>\n<p>第一次使用 <code>pushd</code> 命令时，会将当前目录先放入堆栈，然后将所要进入的目录也放入堆栈，位置在前一个记录的上方。以后每次使用 <code>pushd</code> 命令，都会将所要进入的目录，放在堆栈的顶部。</p>\n<p><code>popd</code> 命令不带有参数时，会移除堆栈的顶部记录，并进入新的堆栈顶部目录(即原来的第二条目录)。</p>\n<p>下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 当前处在主目录，堆栈为空</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pwd</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/home/me</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 进入 /home/me/foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 当前堆栈为 /home/me/foo /home/me</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pushd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~/foo</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 进入 /etc</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 当前堆栈为 /etc /home/me/foo /home/me</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pushd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /etc</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 进入 /home/me/foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 当前堆栈为 /home/me/foo /home/me</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> popd</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 进入 /home/me</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 当前堆栈为 /home/me</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> popd</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 目录不变，当前堆栈为空</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> popd</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这两个命令的参数如下。</p>\n<ol>\n<li>\n<p><strong><code>-n</code> 参数</strong></p>\n<p><code>-n</code> 的参数表示仅操作堆栈，不改变目录。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">popd -n</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面的命令仅删除堆栈顶部的记录，不改变目录，执行完成后还停留在当前目录。</p>\n</li>\n<li>\n<p><strong>整数参数</strong></p>\n<p>这两个命令还可以接受一个整数作为参数，该整数表示堆栈中指定位置的记录(从 0 开始)，作为操作对象。这时不会切换目录。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 从栈顶算起的3号目录(从0开始)，移动到栈顶</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pushd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +3</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 从栈底算起的3号目录(从0开始)，移动到栈顶</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pushd</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -3</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 删除从栈顶算起的3号目录(从0开始)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> popd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> +3</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 删除从栈底算起的3号目录(从0开始)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> popd</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子的整数编号都是从 0 开始计算，<code>popd +0</code> 是删除第一个目录，<code>popd +1</code> 是删除第二个，<code>popd -0</code> 是删除最后一个目录，，<code>popd -1</code> 是删除倒数第二个。</p>\n</li>\n<li>\n<p><strong>目录参数</strong></p>\n<p><code>pushd</code> 可以接受一个目录作为参数，表示将该目录放到堆栈顶部，并进入该目录。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">pushd dir</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>popd</code> 没有这个参数。</p>\n</li>\n</ol>\n<h2>dirs 命令</h2>\n<p><code>dirs</code> 命令可以显示目录堆栈的内容，一般用来查看 <code>pushd</code> 和 <code>popd</code> 操作后的结果。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">dirs</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>它有以下参数。</p>\n<ul>\n<li><code>-c</code>: 清空目录栈。</li>\n<li><code>-l</code>: 用户主目录不显示波浪号前缀，而打印完整的目录。</li>\n<li><code>-p</code>: 每行一个条目打印目录栈，默认是打印在一行。</li>\n<li><code>-v</code>: 每行一个条目，每个条目之前显示位置编号(从 0 开始)。</li>\n<li><code>+N</code>: <code>N</code> 为整数，表示显示堆顶算起的第 N 个目录，从零开始。</li>\n<li><code>-N</code>: <code>N</code> 为整数，表示显示堆底算起的第 N 个目录，从零开始。</li>\n</ul>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Bash 启动环境",
      "url": "https://blog.tlcsdm.com/linux/bash/startup.html",
      "id": "https://blog.tlcsdm.com/linux/bash/startup.html",
      "summary": "Session 用户每次使用 Shell，都会开启一个与 Shell 的 Session(对话)。 Session 有两种类型: 登录 Session 和非登录 Session，也可以叫做 login shell 和 non-login shell。 登录 Session 登录 Session 是用户登录系统以后，系统为用户开启的原始 Session，...",
      "content_html": "<h2>Session</h2>\n<p>用户每次使用 Shell，都会开启一个与 Shell 的 Session(对话)。</p>\n<p>Session 有两种类型: 登录 Session 和非登录 Session，也可以叫做 login shell 和 non-login shell。</p>\n<h3>登录 Session</h3>\n<p>登录 Session 是用户登录系统以后，系统为用户开启的原始 Session，通常需要用户输入用户名和密码进行登录。</p>\n<p>登录 Session 一般进行整个系统环境的初始化，启动的初始化脚本依次如下。</p>\n<ul>\n<li><code>/etc/profile</code>: 所有用户的全局配置脚本。</li>\n<li><code>/etc/profile.d</code> 目录里面所有 <code>.sh</code> 文件</li>\n<li><code>~/.bash_profile</code>: 用户的个人配置脚本。如果该脚本存在，则执行完就不再往下执行。</li>\n<li><code>~/.bash_login</code>: 如果 <code>~/.bash_profile</code> 没找到，则尝试执行这个脚本(C shell 的初始化脚本)。如果该脚本存在，则执行完就不再往下执行。</li>\n<li><code>~/.profile</code>: 如果<code>~/.bash_profile</code> 和 <code>~/.bash_login</code> 都没找到，则尝试读取这个脚本(Bourne shell 和 Korn shell 的初始化脚本)。</li>\n</ul>\n<p>Linux 发行版更新的时候，会更新 <code>/etc</code> 里面的文件，比如 <code>/etc/profile</code>，因此不要直接修改这个文件。如果想修改所有用户的登陆环境，就在 <code>/etc/profile.d</code> 目录里面新建 <code>.sh</code> 脚本。</p>\n<p>如果想修改您个人的登录环境，一般是写在 <code>~/.bash_profile</code> 里面。下面是一个典型的 <code>.bash_profile</code> 文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># .bash_profile</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$HOME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/bin</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">SHELL</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">MANPATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/usr/man:/usr/X11/man</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">EDITOR</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/usr/bin/vi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PS1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\\h:\\w\\$ '</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PS2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'&gt; '</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ~/.bashrc ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~/.bashrc</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> EDITOR</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，这个脚本定义了一些最基本的环境变量，然后执行了 <code>~/.bashrc</code>。</p>\n<p><code>bash</code> 命令的 <code>--login</code> 参数，会强制执行登录 Session 会执行的脚本。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --login</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>bash</code> 命令的 <code>--noprofile</code> 参数，会跳过上面这些 Profile 脚本。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --noprofile</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h3>非登录 Session</h3>\n<p>非登录 Session 是用户进入系统以后，手动新建的 Session，这时不会进行环境初始化。比如，在命令行执行 <code>bash</code> 命令，就会新建一个非登录 Session。</p>\n<p>非登录 Session 的初始化脚本依次如下。</p>\n<ul>\n<li><code>/etc/bash.bashrc</code>: 对全体用户有效。</li>\n<li><code>~/.bashrc</code>: 仅对当前用户有效。</li>\n</ul>\n<p>对用户来说，<code>~/.bashrc</code> 通常是最重要的脚本。非登录 Session 默认会执行它，而登陆 Session 一般也会通过调用执行它。由于每次执行 Bash 脚本，都会新建一个非登录 Session，所以 <code>~/.bashrc</code> 也是每次执行脚本都会执行的。</p>\n<p><code>bash</code> 命令的 <code>--norc</code> 参数，可以禁止在非登录 Session 执行 <code>~/.bashrc</code> 脚本。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --norc</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>bash</code> 命令的 <code>--rcfile</code> 参数，指定另一个脚本代替 <code>.bashrc</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --rcfile</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> testrc</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h3>.bash_logout</h3>\n<p><code>~/.bash_logout</code> 脚本在每次退出 Session 时执行，通常用来做一些清理工作和记录工作，比如删除临时文件，记录用户在本次 Session 花费的时间。</p>\n<p>如果没有退出时要执行的命令，这个文件也可以不存在。</p>\n<h2>启动选项</h2>\n<p>为了方便 Debug，有时在启动 Bash 的时候，可以加上启动参数。</p>\n<ul>\n<li><code>-n</code>: 不运行脚本，只检查是否有语法错误。</li>\n<li><code>-v</code>: 输出每一行语句运行结果前，会先输出该行语句。</li>\n<li><code>-x</code>: 每一个命令处理完以后，先输出该命令，再进行下一个命令的处理。</li>\n</ul>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> scriptname</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -v</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> scriptname</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> scriptname</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>键盘绑定</h2>\n<p>Bash 允许用户定义自己的快捷键。全局的键盘绑定文件默认为 <code>/etc/inputrc</code>，您可以在主目录创建自己的键盘绑定文件 <code>.inputrc</code> 文件。如果定义了这个文件，需要在其中加入下面这行，保证全局绑定不会被遗漏。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$include</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /etc/inputrc</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>.inputrc</code> 文件里面的快捷键，可以像这样定义，<code>\"\\C-t\":\"pwd\\n\"</code> 表示将 <code>Ctrl + t</code> 绑定为运行 <code>pwd</code> 命令。</p>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "字符串操作",
      "url": "https://blog.tlcsdm.com/linux/bash/string.html",
      "id": "https://blog.tlcsdm.com/linux/bash/string.html",
      "summary": "本章介绍 Bash 字符串操作的语法。",
      "content_html": "<p>本章介绍 Bash 字符串操作的语法。</p>\n<!-- more -->\n<h2>字符串的长度</h2>\n<p>获取字符串长度的语法如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> myPath=/home/cam/book/long.file.name</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myPath</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">29</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>大括号 <code>{}</code> 是必需的，否则 Bash 会将 <code>$#</code> 理解成脚本的参数个数，将变量名理解成文本。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> $</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">#myvar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0myvar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，Bash 将 <code>$#</code> 和 <code>myvar</code> 分开解释了。</p>\n<h2>子字符串</h2>\n<p>字符串提取子串的语法如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">offset</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">length</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面语法的含义是返回变量 <code>$varname</code> 的子字符串，从位置 <code>offset</code> 开始(从 <code>0</code> 开始计算)，长度为 <code>length</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> count=frogfootman</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">count</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">4</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foot</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子返回字符串 <code>frogfootman</code> 从 4 号位置开始的长度为 4 的子字符串 <code>foot</code>。</p>\n<p>这种语法不能直接操作字符串，只能通过变量来读取字符串，并且不会改变原始字符串。变量前面的美元符号可以省略。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 报错</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">3</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>\"hello\"</code> 不是变量名，导致 Bash 报错。</p>\n<p>如果省略 <code>length</code>，则从位置 <code>offset</code> 开始，一直返回到字符串的结尾。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> count=frogfootman</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">count</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">4</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">footman</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子是返回变量 <code>count</code> 从 4 号位置一直到结尾的子字符串。</p>\n<p>如果 <code>offset</code> 为负值，表示从字符串的末尾开始算起。注意，负数前面必须有一个空格， 以防止与 <code>${variable:-word}</code> 的变量的设置默认值语法混淆。这时，如果还指定 <code>length</code>，则 <code>length</code> 不能小于零。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=\"This string is long.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">-5</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">long.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">-5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">2</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">lo</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>offset</code> 为 <code>-5</code>，表示从倒数第 5 个字符开始截取，所以返回 <code>long.</code>。如果指定长度为 <code>2</code>，则返回 <code>lo</code>。</p>\n<h2>搜索和替换</h2>\n<p>Bash 提供字符串搜索和替换的多种方法。</p>\n<h3>字符串头部的模式匹配</h3>\n<p>以下两种语法可以检查字符串开头，是否匹配给定的模式。如果匹配成功，就删除匹配的部分，返回剩下的部分。原始变量不会发生变化。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 如果 pattern 匹配变量 variable 的开头，</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 删除最短匹配(非贪婪匹配)的部分，返回剩余部分</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pattern</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 如果 pattern 匹配变量 variable 的开头，</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 删除最长匹配(贪婪匹配)的部分，返回剩余部分</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">##</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pattern</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面两种语法会删除变量字符串开头的匹配部分(将其替换为空)，返回剩下的部分。区别是一个是最短匹配(又称非贪婪匹配)，另一个是最长匹配(又称贪婪匹配)。</p>\n<p>匹配模式 <code>pattern</code> 可以使用 <code>*</code>、<code>?</code>、<code>[]</code> 等通配符。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> myPath=/home/cam/book/long.file.name</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#/*/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cam/book/long.file.name</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myPath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">##/*/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">long.file.name</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，匹配的模式是 <code>/*/</code>，其中 <code>*</code> 可以匹配任意数量的字符，所以最短匹配是 <code>/home/</code>，最长匹配是 <code>/home/cam/book/</code>。</p>\n<p>下面写法可以删除文件路径的目录部分，只留下文件名。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> path=/home/cam/book/long.file.name</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">##*/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">long.file.name</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，模式 <code>*/</code> 匹配目录部分，所以只返回文件名。</p>\n<p>下面再看一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> phone=\"555-456-1414\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">phone</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">-</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">456-1414</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">phone</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">##*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">-</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1414</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果匹配不成功，则返回原始字符串。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> phone=\"555-456-1414\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">phone</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">#</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">444</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">555-456-1414</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，原始字符串里面无法匹配模式 <code>444</code>，所以原样返回。</p>\n<p>如果要将头部匹配的部分，替换成其他内容，采用下面的写法。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 模式必须出现在字符串的开头</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/#</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pattern</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">string</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 示例</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=JPG.JPG</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/#</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">JPG</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">jpg</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">jpg.JPG</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，被替换的 <code>JPG</code> 必须出现在字符串头部，所以返回 <code>jpg.JPG</code>。</p>\n<h3>字符串尾部的模式匹配</h3>\n<p>以下两种语法可以检查字符串结尾，是否匹配给定的模式。如果匹配成功，就删除匹配的部分，返回剩下的部分。原始变量不会发生变化。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 如果 pattern 匹配变量 variable 的结尾，</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 删除最短匹配(非贪婪匹配)的部分，返回剩余部分</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">%</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pattern</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 如果 pattern 匹配变量 variable 的结尾，</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 删除最长匹配(贪婪匹配)的部分，返回剩余部分</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">%%</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pattern</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面两种语法会删除变量字符串结尾的匹配部分(将其替换为空)，返回剩下的部分。区别是一个是最短匹配(又称非贪婪匹配)，另一个是最长匹配(又称贪婪匹配)。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> path=/home/cam/book/long.file.name</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">%.*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/home/cam/book/long.file</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">%%.*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/home/cam/book/long</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，匹配模式是 <code>.*</code>，其中 <code>*</code> 可以匹配任意数量的字符，所以最短匹配是 <code>.name</code>，最长匹配是 <code>.file.name</code>。</p>\n<p>下面写法可以删除路径的文件名部分，只留下目录部分。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> path=/home/cam/book/long.file.name</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">%/*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/home/cam/book</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，模式 <code>/*</code> 匹配文件名部分，所以只返回目录部分。</p>\n<p>下面的写法可以替换文件的后缀名。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> file=foo.png</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">file</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">%.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">png</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.jpg</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo.jpg</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子将文件的后缀名，从 <code>.png</code> 改成了 <code>.jpg</code>。</p>\n<p>下面再看一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> phone=\"555-456-1414\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">phone</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">%</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">555-456</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">phone</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">%%</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">-</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">*</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">555</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果匹配不成功，则返回原始字符串。</p>\n<p>如果要将尾部匹配的部分，替换成其他内容，采用下面的写法。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 模式必须出现在字符串的结尾</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/%</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pattern</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">string</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 示例</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=JPG.JPG</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/%</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">JPG</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">jpg</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">JPG.jpg</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，被替换的 <code>JPG</code> 必须出现在字符串尾部，所以返回 <code>JPG.jpg</code>。</p>\n<h3>任意位置的模式匹配</h3>\n<p>以下两种语法可以检查字符串内部，是否匹配给定的模式。如果匹配成功，就删除匹配的部分，换成其他的字符串返回。原始变量不会发生变化。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 如果 pattern 匹配变量 variable 的一部分，</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 最长匹配(贪婪匹配)的那部分被 string 替换，但仅替换第一个匹配</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pattern</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">string</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 如果 pattern 匹配变量 variable 的一部分，</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 最长匹配(贪婪匹配)的那部分被 string 替换，所有匹配都替换</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">//</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pattern</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">string</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面两种语法都是最长匹配(贪婪匹配)下的替换，区别是前一个语法仅仅替换第一个匹配，后一个语法替换所有匹配。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> path=/home/cam/foo/foo.name</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bar</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/home/cam/bar/foo.name</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">//</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">bar</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/home/cam/bar/bar.name</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，前一个命令只替换了第一个 <code>foo</code>，后一个命令将两个 <code>foo</code> 都替换了。</p>\n<p>下面的例子将分隔符从 <code>:</code> 换成换行符。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -e</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">//:/</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\\n'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/usr/local/bin</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/usr/bin</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/bin</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">...</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>echo</code> 命令的 <code>-e</code> 参数，表示将替换后的字符串的 <code>\\n</code> 字符，解释为换行符。</p>\n<p>模式部分可以使用通配符。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> phone=\"555-456-1414\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">phone</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">?</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">-</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">55-56-1414</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子将 <code>5-4</code> 替换成 <code>-</code>。</p>\n<p>如果省略了 <code>string</code> 部分，那么就相当于匹配的部分替换成空字符串，即删除匹配的部分。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> path=/home/cam/foo/foo.name</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/.*/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/home/cam/foo/foo</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，第二个斜杠后面的 <code>string</code> 部分省略了，所以模式 <code>.*</code> 匹配的部分 <code>.name</code> 被删除后返回。</p>\n<p>前面提到过，这个语法还有两种扩展形式。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 模式必须出现在字符串的开头</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/#</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pattern</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">string</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 模式必须出现在字符串的结尾</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/%</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pattern</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">string</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>改变大小写</h2>\n<p>下面的语法可以改变变量的大小写。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 转为大写</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">^^</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 转为小写</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面是一个例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=heLLo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">^^</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">HELLO</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Bash 变量",
      "url": "https://blog.tlcsdm.com/linux/bash/variable.html",
      "id": "https://blog.tlcsdm.com/linux/bash/variable.html",
      "summary": "Bash 变量分成环境变量和自定义变量两类。",
      "content_html": "<p>Bash 变量分成环境变量和自定义变量两类。</p>\n<!-- more -->\n<h2>简介</h2>\n<p>环境变量是 Bash 环境自带的变量，进入 Shell 时已经定义好了，可以直接使用。它们通常是系统定义好的，也可以由用户从父 Shell 传入子 Shell。</p>\n<p><code>env</code> 命令或 <code>printenv</code> 命令，可以显示所有环境变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> env</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> printenv</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>下面是一些常见的环境变量。</p>\n<ul>\n<li><code>BASHPID</code>: Bash 进程的进程 ID。</li>\n<li><code>BASHOPTS</code>: 当前 Shell 的参数，可以用 <code>shopt</code> 命令修改。</li>\n<li><code>DISPLAY</code>: 图形环境的显示器名字，通常是 <code>:0</code>，表示 X Server 的第一个显示器。</li>\n<li><code>EDITOR</code>: 默认的文本编辑器。</li>\n<li><code>HOME</code>: 用户的主目录。</li>\n<li><code>HOST</code>: 当前主机的名称。</li>\n<li><code>IFS</code>: 词与词之间的分隔符，默认为空格。</li>\n<li><code>LANG</code>: 字符集以及语言编码，比如 <code>zh_CN.UTF-8</code>。</li>\n<li><code>PATH</code>: 由冒号分开的目录列表，当输入可执行程序名后，会搜索这个目录列表。</li>\n<li><code>PS1</code>: Shell 提示符。</li>\n<li><code>PS2</code>: 输入多行命令时，次要的 Shell 提示符。</li>\n<li><code>PWD</code>: 当前工作目录。</li>\n<li><code>RANDOM</code>: 返回一个 0 到 32767 之间的随机数。</li>\n<li><code>SHELL</code>: Shell 的名字。</li>\n<li><code>SHELLOPTS</code>: 启动当前 Shell 的 <code>set</code> 命令的参数，参见《set 命令》一章。</li>\n<li><code>TERM</code>: 终端类型名，即终端仿真器所用的协议。</li>\n<li><code>UID</code>: 当前用户的 ID 编号。</li>\n<li><code>USER</code>: 当前用户的用户名。</li>\n</ul>\n<p>很多环境变量很少发生变化，而且是只读的，可以视为常量。由于它们的变量名全部都是大写，所以传统上，如果用户要自己定义一个常量，也会使用全部大写的变量名。</p>\n<p>注意，Bash 变量名区分大小写，<code>HOME</code> 和 <code>home</code> 是两个不同的变量。</p>\n<p>查看单个环境变量的值，可以使用 <code>printenv</code> 命令或 <code>echo</code> 命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> printenv</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $PATH</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注意，<code>printenv</code> 命令后面的变量名，不用加前缀 <code>$</code>。</p>\n<p>自定义变量是用户在当前 Shell 里面自己定义的变量，必须先定义后使用，而且仅在当前 Shell 可用。一旦退出当前 Shell，该变量就不存在了。</p>\n<p><code>set</code> 命令可以显示所有变量(包括环境变量和自定义变量)，以及所有的 Bash 函数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>创建变量</h2>\n<p>用户创建变量的时候，变量名必须遵守下面的规则。</p>\n<ul>\n<li>字母、数字和下划线字符组成。</li>\n<li>第一个字符必须是一个字母或一个下划线，不能是数字。</li>\n<li>不允许出现空格和标点符号。</li>\n</ul>\n<p>变量声明的语法如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">value</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令中，等号左边是变量名，右边是变量。注意，等号两边不能有空格。</p>\n<p>如果变量的值包含空格，则必须将值放在引号中。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myvar</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello world\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>Bash 没有数据类型的概念，所有的变量值都是字符串。</p>\n<p>下面是一些自定义变量的例子。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">z</span><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">                     # 变量 a 赋值为字符串 z</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"a string\"</span><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">            # 变量值包含空格，就必须放在引号里面</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">c</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"a string and </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">     # 变量值可以引用其他变量的值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">d</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"\\t\\ta string\\n\"</span><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">      # 变量值可以使用转义字符</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo.txt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)      </span><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 变量值可以是命令的执行结果</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 7</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))            </span><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 变量值可以是数学运算的结果</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>变量可以重复赋值，后面的赋值会覆盖前面的赋值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，变量 <code>foo</code> 的第二次赋值会覆盖第一次赋值。</p>\n<h2>读取变量</h2>\n<p>读取变量的时候，直接在变量名前加上 <code>$</code> 就可以了。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>每当 Shell 看到以 <code>$</code> 开头的单词时，就会尝试读取这个变量名对应的值。</p>\n<p>如果变量不存在，Bash 不会报错，而会输出空字符。</p>\n<p>由于 <code>$</code> 在 Bash 中有特殊含义，把它当作美元符号使用时，一定要非常小心，</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $100</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.00</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 00.00</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令的原意是输入 <code>$100</code>，但是 Bash 将 <code>$1</code> 解释成了变量，该变量为空，因此输入就变成了 <code>00.00</code>。所以，如果要使用 <code>$</code> 的原义，需要在 <code>$</code> 前面放上反斜杠，进行转义。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">100.00</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $100</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.00</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>读取变量的时候，变量名也可以使用花括号 <code>{}</code> 包围，比如 <code>$a</code> 也可以写成 <code>${a}</code>。这种写法可以用于变量名与其他字符连用的情况。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a=foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $a_file</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">_file</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo_file</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，变量名 <code>a_file</code> 不会有任何输出，因为 Bash 将其整个解释为变量，而这个变量是不存在的。只有用花括号区分 <code>$a</code>，Bash 才能正确解读。</p>\n<p>事实上，读取变量的语法 <code>$foo</code>，可以看作是 <code>${foo}</code> 的简写形式。</p>\n<p>如果变量的值本身也是变量，可以使用 <code>${!varname}</code> 的语法，读取最终的值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> myvar=USER</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myvar</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ruanyf</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的例子中，变量 <code>myvar</code> 的值是 <code>USER</code>，<code>${!myvar}</code> 的写法将其展开成最终的值。</p>\n<h2>删除变量</h2>\n<p><code>unset</code> 命令用来删除一个变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">unset</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> NAME</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>这个命令不是很有用。因为不存在的 Bash 变量一律等于空字符串，所以即使 <code>unset</code> 命令删除了变量，还是可以读取这个变量，值为空字符串。</p>\n<p>所以，删除一个变量，也可以将这个变量设成空字符串。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">''</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面两种写法，都是删除了变量 <code>foo</code>。由于不存在的值默认为空字符串，所以后一种写法可以在等号右边不写任何值。</p>\n<h2>输出变量，export 命令</h2>\n<p>用户创建的变量仅可用于当前 Shell，子 Shell 默认读取不到父 Shell 定义的变量。为了把变量传递给子 Shell，需要使用 <code>export</code> 命令。这样输出的变量，对于子 Shell 来说就是环境变量。</p>\n<p><code>export</code> 命令用来向子 Shell 输出变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">NAME</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> NAME</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面命令输出了变量 <code>NAME</code>。变量的赋值和输出也可以在一个步骤中完成。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> NAME</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">value</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面命令执行后，当前 Shell 及随后新建的子 Shell，都可以读取变量 <code>$NAME</code>。</p>\n<p>子 Shell 如果修改继承的变量，不会影响父 Shell。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 输出变量 $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> export</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=bar</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 新建子 Shell</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 读取 $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 修改继承的变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=baz</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 退出子 Shell</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> exit</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 读取 $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，子 Shell 修改了继承的变量 <code>$foo</code>，对父 Shell 没有影响。</p>\n<h2>特殊变量</h2>\n<p>Bash 提供一些特殊变量。这些变量的值由 Shell 提供，用户不能进行赋值。</p>\n<p>(1) <code>$?</code></p>\n<p><code>$?</code> 为上一个命令的退出码，用来判断上一个命令是否执行成功。返回值是 <code>0</code>，表示上一个命令执行成功；如果是非零，上一个命令执行失败。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> doesnotexist</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> doesnotexist:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> No</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> such</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> file</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> or</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> directory</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>ls</code> 命令查看一个不存在的文件，导致报错。<code>$?</code> 为 1，表示上一个命令执行失败。</p>\n<p>(2) <code>$$</code></p>\n<p><code>$$</code> 为当前 Shell 的进程 ID。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $$</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">10662</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这个特殊变量可以用来命名临时文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">LOGFILE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/tmp/output_log.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$$</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>(3) <code>$_</code></p>\n<p><code>$_</code> 为上一个命令的最后一个参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> grep</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dictionary</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /usr/share/dict/words</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">dictionary</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $_</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/usr/share/dict/words</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(4) <code>$!</code></p>\n<p><code>$!</code> 为最近一个后台执行的异步命令的进程 ID。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> firefox</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[1] </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">11064</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $!</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">11064</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>firefox</code> 是后台运行的命令，<code>$!</code> 返回该命令的进程 ID。</p>\n<p>(5) <code>$0</code></p>\n<p><code>$0</code> 为当前 Shell 的名称(在命令行直接执行时)或者脚本名(在脚本中执行时)。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\"> $0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>$0</code> 返回当前运行的是 Bash。</p>\n<p>(6) <code>$-</code></p>\n<p><code>$-</code> 为当前 Shell 的启动参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $-</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">himBHs</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>(7) <code>$@</code> 和 <code>$#</code></p>\n<p><code>$@</code> 和 <code>$#</code> 表示脚本的参数数量，参见脚本一章。</p>\n<h2>变量的默认值</h2>\n<p>Bash 提供四个特殊语法，跟变量的默认值有关，目的是保证变量不为空。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:-</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面语法的含义是，如果变量 <code>varname</code> 存在且不为空，则返回它的值，否则返回 <code>word</code>。它的目的是返回一个默认值，比如 <code>${count:-0}</code> 表示变量 <code>count</code> 不存在时返回 <code>0</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面语法的含义是，如果变量 <code>varname</code> 存在且不为空，则返回它的值，否则将它设为 <code>word</code>，并且返回 <code>word</code>。它的目的是设置变量的默认值，比如 <code>${count:=0}</code> 表示变量 <code>count</code> 不存在时返回 <code>0</code>，且将 <code>count</code> 设为 <code>0</code>。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:+</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面语法的含义是，如果变量名存在且不为空，则返回 <code>word</code>，否则返回空值。它的目的是测试变量是否存在，比如 <code>${count:+1}</code> 表示变量 <code>count</code> 存在时返回 <code>1</code>(表示 <code>true</code>)，否则返回空值。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:?</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">message</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面语法的含义是，如果变量 <code>varname</code> 存在且不为空，则返回它的值，否则打印出 <code>varname: message</code>，并中断脚本的执行。如果省略了 <code>message</code>，则输出默认的信息“parameter null or not set.”。它的目的是防止变量未定义，比如 <code>${count:?\"undefined!\"}</code> 表示变量 <code>count</code> 未定义时就中断执行，抛出错误，返回给定的报错信息 <code>undefined!</code>。</p>\n<p>上面四种语法如果用在脚本中，变量名的部分可以用到数字 <code>1</code> 到 <code>9</code>，表示脚本的参数。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filename</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">${1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:?</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"filename missing.\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>上面代码出现在脚本中，<code>1</code> 表示脚本的第一个参数。如果该参数不存在，就退出脚本并报错。</p>\n<h2>declare 命令</h2>\n<p><code>declare</code> 命令可以声明一些特殊类型的变量，为变量设置一些限制，比如声明只读类型的变量和整数类型的变量。</p>\n<p>它的语法形式如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> OPTION</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> VARIABLE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">value</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>declare</code> 命令的主要参数(OPTION)如下。</p>\n<ul>\n<li><code>-a</code>: 声明数组变量。</li>\n<li><code>-f</code>: 输出所有函数定义。</li>\n<li><code>-F</code>: 输出所有函数名。</li>\n<li><code>-i</code>: 声明整数变量。</li>\n<li><code>-l</code>: 声明变量为小写字母。</li>\n<li><code>-p</code>: 查看变量信息。</li>\n<li><code>-r</code>: 声明只读变量。</li>\n<li><code>-u</code>: 声明变量为大写字母。</li>\n<li><code>-x</code>: 该变量输出为环境变量。</li>\n</ul>\n<p><code>declare</code> 命令如果用在函数中，声明的变量只在函数内部有效，等同于 <code>local</code> 命令。</p>\n<p>不带任何参数时，<code>declare</code> 命令输出当前环境的所有变量，包括函数在内，等同于不带有任何参数的 <code>set</code> 命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><strong>(1) <code>-i</code> 参数</strong></p>\n<p><code>-i</code> 参数声明整数变量以后，可以直接进行数学运算。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> val1=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">12</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> val2=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> result</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> result=val1</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">val2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $result</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">60</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，如果变量 <code>result</code> 不声明为整数，<code>val1*val2</code> 会被当作字面量，不会进行整数运算。另外，<code>val1</code> 和 <code>val2</code> 其实不需要声明为整数，因为只要 <code>result</code> 声明为整数，它的赋值就会自动解释为整数运算。</p>\n<p>注意，一个变量声明为整数以后，依然可以被改写为字符串。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> var=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">12</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> var=foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $var</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，变量 <code>var</code> 声明为整数，覆盖以后，Bash 不会报错，但会赋以不确定的值，上面的例子中可能输出 0，也可能输出的是 3。</p>\n<p><strong>(2) <code>-x</code> 参数</strong></p>\n<p><code>-x</code> 参数等同于 <code>export</code> 命令，可以输出一个变量为子 Shell 的环境变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> export</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>(3) <code>-r</code> 参数</strong></p>\n<p><code>-r</code> 参数可以声明只读变量，无法改变变量值，也不能 <code>unset</code> 变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -r</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 只读变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> unset</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 只读变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，后两个赋值语句都会报错，命令执行失败。</p>\n<p><strong>(4) <code>-u</code> 参数</strong></p>\n<p><code>-u</code> 参数声明变量为大写字母，可以自动把变量值转成大写字母。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -u</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=upper</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">UPPER</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>(5) <code>-l</code> 参数</strong></p>\n<p><code>-l</code> 参数声明变量为小写字母，可以自动把变量值转成小写字母。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar=LOWER</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">lower</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><strong>(6) <code>-p</code> 参数</strong></p>\n<p><code>-p</code> 参数输出变量信息。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=hello</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> --</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 未找到</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>declare -p</code> 可以输出已定义变量的值，对于未定义的变量，会提示找不到。</p>\n<p>如果不提供变量名，<code>declare -p</code> 输出所有变量的信息。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><strong>(7) <code>-f</code> 参数</strong></p>\n<p><code>-f</code> 参数输出当前环境的所有函数，包括它的定义。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -f</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><strong>(8) <code>-F</code> 参数</strong></p>\n<p><code>-F</code> 参数输出当前环境的所有函数名，不包含函数定义。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -F</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>readonly 命令</h2>\n<p><code>readonly</code> 命令等同于 <code>declare -r</code>，用来声明只读变量，不能改变变量值，也不能 <code>unset</code> 变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> readonly</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 只读变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，更改只读变量 <code>foo</code> 会报错，命令执行失败。</p>\n<p><code>readonly</code> 命令有三个参数。</p>\n<ul>\n<li><code>-f</code>: 声明的变量为函数名。</li>\n<li><code>-p</code>: 打印出所有的只读变量。</li>\n<li><code>-a</code>: 声明的变量为数组。</li>\n</ul>\n<h2>let 命令</h2>\n<p><code>let</code> 命令声明变量时，可以直接执行算术表达式。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> let</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=1+2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>let</code> 命令可以直接计算 <code>1 + 2</code>。</p>\n<p><code>let</code> 命令的参数表达式如果包含空格，就需要使用引号。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">let</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"foo = 1 + 2\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p><code>let</code> 可以同时对多个变量赋值，赋值表达式之间使用空格分隔。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> let</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"v1 = 1\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"v2 = v1++\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $v1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$v2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2,1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，<code>let</code> 声明了两个变量 <code>v1</code> 和 <code>v2</code>，其中 <code>v2</code> 等于 <code>v1++</code>，表示先返回 <code>v1</code> 的值，然后 <code>v1</code> 自增。</p>\n<p>这种语法支持的运算符，参考《Bash 的算术运算》一章。</p>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [
        {
          "name": "阮一峰"
        }
      ],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Linux 命令格式",
      "url": "https://blog.tlcsdm.com/linux/command/",
      "id": "https://blog.tlcsdm.com/linux/command/",
      "summary": "目录",
      "content_html": "<h2>目录</h2>\n<ul>\n<li>\n<p><a href=\"/linux/command/command.html\" target=\"_blank\">命令格式简介</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/dir.html\" target=\"_blank\">目录相关</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/file.html\" target=\"_blank\">文件相关</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/other.html\" target=\"_blank\">其他命令</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/add.html\" target=\"_blank\">命令的自动补全</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/excu.html\" target=\"_blank\">命令的执行</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/path.html\" target=\"_blank\">环境变量</a></p>\n</li>\n<li>\n<p><a href=\"/linux/command/ln.html\" target=\"_blank\">创建链接</a></p>\n</li>\n</ul>\n",
      "date_published": "2019-11-18T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "命令补全",
      "url": "https://blog.tlcsdm.com/linux/command/add.html",
      "id": "https://blog.tlcsdm.com/linux/command/add.html",
      "summary": "文件名(或者目录名)是执行 Linux 命令中最常见的参数，例如前面介绍的 cd、mkdir、cp 等命令，都涉及到了文件名。然而对初学者来说，输入完整的文件名感觉很麻烦，尤其面临文件名(目录名)特别长的时候。 考虑到这种情况，Shell (Bash) 提供了一种称为“命令行自动补全”的功能，即在输入文件名的时候，只需要输入该文件名的前几个字符，然后按...",
      "content_html": "<p>文件名(或者目录名)是执行 Linux 命令中最常见的参数，例如前面介绍的 <code>cd</code>、<code>mkdir</code>、<code>cp</code> 等命令，都涉及到了文件名。然而对初学者来说，输入完整的文件名感觉很麻烦，尤其面临文件名(目录名)特别长的时候。</p>\n<p>考虑到这种情况，Shell (Bash) 提供了一种称为“命令行自动补全”的功能，即在输入文件名的时候，只需要输入该文件名的前几个字符，然后按 Tab 键，Shell 就可以自动将文件名补全。</p>\n<!-- more -->\n<p>举个例子，在 <code>/etc</code> 目录下，执行如下命令:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# cd /etc</span></span>\n<span class=\"line\"><span>[root@localhost etc]# cd fs &lt;-- 按一次 Tab 键</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>当按下 Tab 键时，您会发现 Shell 自动将 \"fs\" 补全成了 \"fatab\"，这是因为当前 <code>/etc</code> 目录中只有 fstab 是以 \"fs\" 开头，因此 Shell 可以确定这里想要输入的文件名称为 fstab。</p>\n<p>那么，如果当前目录中含有多个以指定字符(或字符串)开头的目录或文件，Shell 还可以成功辨认吗? 答案是否定的，但它会以列表的形式给出所有以指定字符或字符串开头的文件或目录，供用户选择。</p>\n<p>例如，还是在 <code>/etc</code> 目录下，执行如下命令:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost etc]# cd b &lt;-- 连续按两次 Tab 键</span></span>\n<span class=\"line\"><span>bash_completion.d/      blkid/          bonobo-activation/</span></span>\n<span class=\"line\"><span>bashrc                  bluetooth</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，当按一次 Tab 键时，Shell 没有任何反映，原因就是当前目录下以 \"b\" 为开头的文件或目录有多个(2 个以上)，仅凭一个字符 \"b\" 无法精准判断出具体指的是哪个文件。而当再一次按下 Tab 键时，Shell 会列表的形式显示给用户当前目录下所有以 \"b\" 开头的文件或目录。</p>\n<p>事实上，Shell 提供的命令行补全功能不仅适用于补全文件名，也同样适用于所有 Linux 命令。举个例子，当输入 <code>ca</code> 并连续按下 2 次 Tab 键时，Shell 会罗列出所有以 \"ca\" 开头的 Linux 命令，如下所示:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost etc]# ca &lt;--连续按两次 Tab 键</span></span>\n<span class=\"line\"><span>cacertdir_rehash    cache_restore       capsh       catchsegv</span></span>\n<span class=\"line\"><span>cache_check         cal                 captoinfo</span></span>\n<span class=\"line\"><span>cache_dump          caller              case</span></span>\n<span class=\"line\"><span>cache_repair        canberra-gtk-play   cat</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>另外，Shell 还有一套被称作通配符的转用符号，这些通配符可以搜索并匹配文件名的一部分，从而大大简化了文件名的输入。</p>\n<ul>\n<li><code>*</code>: 匹配任意数量的字符。</li>\n<li><code>?</code>: 匹配任意一个字符。</li>\n<li><code>[]</code>: 匹配括号内的任意一个字符，甚至 <code>[]</code> 中还可以包含用 <code>-</code>(短横线)连接的字符或数字，表示一定范围内的字符或数字。</li>\n</ul>\n<p>为了学习这些通配符的用法，首先需要建立一个空目录(如 test)，并在该目录中创建一些文件(供测试用)，执行命令如下:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost etc]# makdir test</span></span>\n<span class=\"line\"><span>[root@localhost etc]# cd test</span></span>\n<span class=\"line\"><span>[root@localhost test]# touch apple banana grape grapefruit watermelon</span></span>\n<span class=\"line\"><span>[root@localhost test]# ls</span></span>\n<span class=\"line\"><span>apple banana grape grapefruit watermelon</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在此基础上，继续执行如下命令:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost test]# ls a* &lt;--匹配所有以 a 字符开头的文件名</span></span>\n<span class=\"line\"><span>apple</span></span>\n<span class=\"line\"><span>[root@localhost test]# ls g*t &lt;--匹配所有以 g 字符开头，以 t 字符结尾的文件名</span></span>\n<span class=\"line\"><span>grapefruit</span></span>\n<span class=\"line\"><span>[root@localhost test]# ls *e* &lt;--匹配所有包含 e 字符的文件名</span></span>\n<span class=\"line\"><span>apple grape grapefruit watermelon</span></span>\n<span class=\"line\"><span>[root@localhost test]# ls *n* &lt;--匹配所有包含 n 字符的文件名</span></span>\n<span class=\"line\"><span>banana watermelon</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>结合以上实例，因为 <code>*</code> 可以匹配任何数量的字符，因此可以一一实现实例中标注的功能。</p>\n<p>接下来，列举一下使用 ? 匹配文件名的示例:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost test]# ls ????e</span></span>\n<span class=\"line\"><span>apple grape</span></span>\n<span class=\"line\"><span>[root@localhost test]# ls g???e*</span></span>\n<span class=\"line\"><span>grape grapefruit</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>因为 1 个 ? 只能匹配 1 个任意字符，因此该示例中第一个例子表示的是匹配任意包含 5 个字符但以 e 结尾的文件(apple 和 grape)，第二例子表示匹配任何以 g 开头且第 5 个字符为 e 的文件(grape 和 grapefruit)。</p>\n<p>最后，列举一些使用括号 <code>[]</code> 匹配文件名的示例:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost test]# ls [abw]*</span></span>\n<span class=\"line\"><span>apple banana watermelon</span></span>\n<span class=\"line\"><span>[root@localhost test]# ls [agw]*[ne]</span></span>\n<span class=\"line\"><span>apple grape watermelon</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>此示例中，第一个例子表示匹配任何以 a、b 或 w 开头的文件；第二个例子中表示匹配任何以 a、g、w 开头，以 n 或 e 结尾的文件名。</p>\n<p>不仅如此，<code>[]</code> 中还可以通过 -(短横线)表示一定范围内的任意字符(或数字)，例如:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost test]# ls [a-g]*</span></span>\n<span class=\"line\"><span>apple banana grape grapefruit</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其中，<code>[a-g]*</code> 表示匹配以字母 a 到 g 之间任何一个字母开头的文件名。</p>\n",
      "date_published": "2019-11-20T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "基本格式",
      "url": "https://blog.tlcsdm.com/linux/command/command.html",
      "id": "https://blog.tlcsdm.com/linux/command/command.html",
      "summary": "命令提示符 登录系统后，第一眼看到的内容是: 这就是 Linux 系统的命令提示符。那么，这个提示符的含义是什么呢? []: 这是提示符的分隔符号，没有特殊含义。 root: 显示的是当前的登录用户，笔者现在使用的是 root 用户登录。 @: 分隔符号，没有特殊含义。 localhost: 当前系统的简写主机名(完整主机名是 localhost.lo...",
      "content_html": "<h2>命令提示符</h2>\n<p>登录系统后，第一眼看到的内容是:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]#</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>这就是 Linux 系统的命令提示符。那么，这个提示符的含义是什么呢?</p>\n<ul>\n<li><code>[]</code>: 这是提示符的分隔符号，没有特殊含义。</li>\n<li><code>root</code>: 显示的是当前的登录用户，笔者现在使用的是 root 用户登录。</li>\n<li><code>@</code>: 分隔符号，没有特殊含义。</li>\n<li><code>localhost</code>: 当前系统的简写主机名(完整主机名是 <code>localhost.localdomain</code>)。</li>\n<li><code>~</code>: 代表用户当前所在的目录，此例中用户当前所在的目录是家目录。</li>\n<li><code>#</code>: 命令提示符，Linux 用这个符号标识登录的用户权限等级。如果是超级用户，提示符就是 <code>#</code>；如果是普通用户，提示符就是 <code>$</code>。</li>\n</ul>\n<p>家目录(又称主目录)是什么? Linux 系统是纯字符界面，用户登录后，要有一个初始登录的位置，这个初始登录位置就称为用户的家:\n超级用户的家目录: <code>/root</code>。\n普通用户的家目录: <code>/home/用户名</code>。</p>\n<p>用户在自己的家目录中拥有完整权限，所以我们也建议操作实验可以放在家目录中进行。我们切换一下用户所在目录，看看有什么效果。</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# cd /usr/local</span></span>\n<span class=\"line\"><span>[root@localhost local]#</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>仔细看，如果切换用户所在目录，那么命令提示符中的会变成用户当前所在目录的最后一个目录(不显示完整的所在目录 <code>/usr/loca</code>l，只显示最后一个目录 <code>local</code>)。</p>\n<h2>命令的基本格式</h2>\n<p>接下来看看 Linux 命令的基本格式:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# 命令[选项][参数]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>命令格式中的 <code>[]</code> 代表可选项，也就是有些命令可以不写选项或参数，也能执行。那么，我们就用 Linux 中最常见的 <code>ls</code> 命令来解释一下命令的格式(有关 <code>ls</code> 命令的具体用法，后续章节会详细介绍)。如果按照命令的分类，那么 <code>ls</code> 命令应该属于目录操作命令。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">anaconda-ks.cfg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log.syslog</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>\n<p>选项的作用</p>\n<p>选项的作用是调整命令功能。如果没有选项，那么命令只能执行最基本的功能；而一旦有选项，则可以显示更加丰富的数据。</p>\n<p>Linux 的选项又分为短格式选项(<code>-l</code>)和长格式选项(-<code>-all</code>)。短格式选项是英文的简写，用一个减号调用，例如:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls -l</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>而长格式选项是英文完整单词，一般用两个减号调用，例如:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls --all</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>一般情况下，短格式选项是长格式选项的缩写，也就是一个短格式选项会有对应的长格式选项。当然也有例外，比如 <code>ls</code> 命令的短格式选项 <code>-l</code> 就没有对应的长格式选项。所以具体的命令选项可以通过后面我们要学习的帮助命令来进行査询。</p>\n</li>\n<li>\n<p>参数的作用</p>\n<p>参数是命令的操作对象，一般文件、目录、用户和进程等可以作为参数被命令操作。例如:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls -l anaconda-ks.cfg</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">-rw</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ol>\n",
      "date_published": "2019-11-18T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "文件夹",
      "url": "https://blog.tlcsdm.com/linux/command/dir.html",
      "id": "https://blog.tlcsdm.com/linux/command/dir.html",
      "summary": "pwd 命令 由于 Linux 文件系统中有许多目录，当用户执行一条 Linux 命令又没有指定该命令或参数所在的目录时，Linux 系统就会首先在当前目录(目前的工作目录)搜寻这个命令或它的参数。因此，用户在执行命令之前，常常需要确定目前所在的工作目录，即当前目录。 当用户登陆 Linux 系统之后，其当前目录就是它的主目录。那么，如何确定当前目录呢...",
      "content_html": "<h2>pwd 命令</h2>\n<p>由于 Linux 文件系统中有许多目录，当用户执行一条 Linux 命令又没有指定该命令或参数所在的目录时，Linux 系统就会首先在当前目录(目前的工作目录)搜寻这个命令或它的参数。因此，用户在执行命令之前，常常需要确定目前所在的工作目录，即当前目录。</p>\n<p>当用户登陆 Linux 系统之后，其当前目录就是它的主目录。那么，如何确定当前目录呢? 可以使用 Linux 系统的 pwd 命令来显示当前目录的绝对路径。</p>\n<p>pwd 命令，是 Print Working Directory (打印工作目录)的缩写，功能是显示用户当前所处的工作目录。该命令的基本格式为:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# pwd</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>cd 命令</h2>\n<p>cd 命令，是 Change Directory 的缩写，用来切换工作目录。</p>\n<p>Linux 命令按照来源方式，可分为两种，分别是 Shell 内置命令和外部命令。所谓 Shell 内置命令，就是 Shell 自带的命令，这些命令是没有执行文件的；而外部命令就是由程序员单独开发的，所以会有命令的执行文件。Linux 中的绝大多数命令是外部命令，而 cd 命令是一个典型的 Shell 内置命令，所以 cd 命令没有执行文件所在路径。</p>\n<p>cd 命令的基本格式如下:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# cd [相对路径或绝对路径]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>除此之外，cd 命令后面可以跟一些特殊符号，表达固定的含义。</p>\n<p>| 特殊符号    | 作 用                      |\n|</p>\n",
      "date_published": "2019-11-18T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "命令执行",
      "url": "https://blog.tlcsdm.com/linux/command/excu.html",
      "id": "https://blog.tlcsdm.com/linux/command/excu.html",
      "summary": "前面讲过，在 Linux 系统中“一切皆文件”，Linux 命令也不例外。那么，当编辑完成 Linux 命令并回车后，系统底层到底发生了什么事情呢? 简单来说，Linux 命令的执行过程分为如下 4 个步骤。 判断路径 判断用户是否以绝对路径或相对路径的方式输入命令(如 /bin/ls)，如果是的话直接执行。 检查别名 Linux 系统会检查用户输入的...",
      "content_html": "<p>前面讲过，在 Linux 系统中“一切皆文件”，Linux 命令也不例外。那么，当编辑完成 Linux 命令并回车后，系统底层到底发生了什么事情呢?</p>\n<p>简单来说，Linux 命令的执行过程分为如下 4 个步骤。</p>\n<ol>\n<li>\n<p>判断路径</p>\n<p>判断用户是否以绝对路径或相对路径的方式输入命令(如 <code>/bin/ls</code>)，如果是的话直接执行。</p>\n</li>\n<li>\n<p>检查别名</p>\n<p>Linux 系统会检查用户输入的命令是否为 “别名命令”。要知道，通过 alias 命令是可以给现有命令自定义别名的，即用一个自定义的命令名称来替换原本的命令名称。</p>\n<p>例如，我们经常使用的 <code>rm</code> 命令，其实就是 <code>rm -i</code> 这个整体的别名:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# alias rm</span></span>\n<span class=\"line\"><span>alias rm='rm -i'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这使得当使用 rm 命令删除指定文件时，Linux 系统会要求我们再次确认是否执行删除操作。例如:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# rm a.txt &lt;-- 假定当前目录中已经存在 a.txt 文件</span></span>\n<span class=\"line\"><span>rm: remove regular file 'a.txt'? y  &lt;-- 手动输入 y，即确定删除</span></span>\n<span class=\"line\"><span>[root@localhost ~]#</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这里可以使用 <code>unalias</code> 命令，将 Linux 系统设置的 <code>rm</code> 别名删除掉，执行命令如下:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# alias rm</span></span>\n<span class=\"line\"><span>alias rm='rm -i'</span></span>\n<span class=\"line\"><span>[root@localhost ~]# unalias rm</span></span>\n<span class=\"line\"><span>[root@localhost ~]# rm a.txt</span></span>\n<span class=\"line\"><span>[root@localhost ~]#  &lt;--直接删除，不再询问</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>判断是内部命令还是外部命令</p>\n<p>Linux 命令行解释器 (又称为 Shell) 会判断用户输入的命令是内部命令还是外部命令。其中，内部命令指的是解释器内部的命令，会被直接执行；而用户通常输入的命令都是外部命令，这些命令交给步骤四继续处理。\n内部命令由 Shell 自带，会随着系统启动，可以直接从内存中读取；而外部命令仅是在系统中有对应的可执行文件，执行时需要读取该文件。</p>\n<p>判断一个命令属于内部命令还是外部命令，可以使用 <code>type</code> 命令实现。例如:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# type pwd</span></span>\n<span class=\"line\"><span>pwd is a shell builtin  &lt;-- pwd是内部命令</span></span>\n<span class=\"line\"><span>[root@localhost ~]# type top</span></span>\n<span class=\"line\"><span>top is /usr/bin/top  &lt;-- top是外部命令</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>查找外部命令对应的可执行文件</p>\n<p>当用户执行的是外部命令时，系统会在指定的多个路径中查找该命令的可执行文件，而定义这些路径的变量，就称为 PATH 环境变量，其作用就是告诉 Shell 待执行命令的可执行文件可能存放的位置，也就是说，Shell 会在 PATH 变量包含的多个路径中逐个查找，直到找到为止(如果找不到，Shell 会提供用户“找不到此命令”)。</p>\n</li>\n</ol>\n",
      "date_published": "2019-11-20T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "文件",
      "url": "https://blog.tlcsdm.com/linux/command/file.html",
      "id": "https://blog.tlcsdm.com/linux/command/file.html",
      "summary": "touch 命令 需要注意的是，touch 命令不光可以用来创建文件(当指定操作文件不存在时，该命令会在当前位置建立一个空文件)，此命令更重要的功能是修改文件的时间参数(但当文件存在时，会修改此文件的时间参数)。 Linux 系统中，每个文件主要拥有 3 个时间参数(通过 stat 命令进行查看)，分别是文件的访问时间、数据修改时间以及状态修改时间: ...",
      "content_html": "<h2>touch 命令</h2>\n<p>需要注意的是，touch 命令不光可以用来创建文件(当指定操作文件不存在时，该命令会在当前位置建立一个空文件)，此命令更重要的功能是修改文件的时间参数(但当文件存在时，会修改此文件的时间参数)。</p>\n<p>Linux 系统中，每个文件主要拥有 3 个时间参数(通过 stat 命令进行查看)，分别是文件的访问时间、数据修改时间以及状态修改时间:</p>\n<ul>\n<li>访问时间 (Access Time，简称 atime): 只要文件的内容被读取，访问时间就会更新。例如，使用 <code>cat</code> 命令可以查看文件的内容，此时文件的访问时间就会发生改变。</li>\n<li>数据修改时间 (Modify Time，简称 mtime): 当文件的内容数据发生改变，此文件的数据修改时间就会跟着相应改变。</li>\n<li>状态修改时间 (Change Time，简称 ctime): 当文件的状态发生变化，就会相应改变这个时间。比如说，如果文件的权限或者属性发生改变，此时间就会相应改变。</li>\n</ul>\n<p>touch 命令的基本格式如下:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# touch [选项] 文件名</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>选项:</p>\n<ul>\n<li>-a: 只修改文件的访问时间；</li>\n<li>-c: 仅修改文件的时间参数(3 个时间参数都改变)，如果文件不存在，则不建立新文件。</li>\n<li>-d: 后面可以跟欲修订的日期，而不用当前的日期，即把文件的 atime 和 mtime 时间改为指定的时间。</li>\n<li>-m: 只修改文件的数据修改时间。</li>\n<li>-t: 命令后面可以跟欲修订的时间，而不用目前的时间，时间书写格式为 YYMMDDhhmm。</li>\n</ul>\n<p>可以看到，touch 命令可以只修改文件的访问时间，也可以只修改文件的数据修改时间，但是不能只修改文件的状态修改时间。因为，不论是修改访问时间，还是修改文件的数据时间，对文件来讲，状态都会发生改变，即状态修改时间会随之改变(更新为操作当前文件的真正时间)。</p>\n<h2>ln 命令</h2>\n<p>如果要想说清楚 ln 命令，则必须先解释下 ext 文件系统(Linux 文件系统)是如何工作的。我们在前面讲解了分区的格式化就是写入文件系统，而我们的 Linux 目前使用的是 ext4 文件系统。</p>\n<p>ext4 文件系统会把分区主要分为两大部分(暂时不提超级块): 小部分用于保存文件的 inode (i 节点)信息；剩余的大部分用于保存 block 信息。</p>\n<p>inode 的默认大小为 128 Byte，用来记录文件的权限(r、w、x)、文件的所有者和属组、文件的大小、文件的状态改变时间(ctime)、文件的最近一次读取时间(atime)、文件的最近一次修改时间(mtime)、文件的数据真正保存的 block 编号。每个文件需要占用一个 inode。大家如果仔细查看，就会发现 inode 中是不记录文件名的，那是因为文件名记录在文件所在目录的 block 中。</p>\n<p>block 的大小可以是 1KB、2KB、4KB，默认为 4KB。block 用于实际的数据存储，如果一个 block 放不下数据，则可以占用多个 block。例如，有一个 10KB 的文件需要存储，则会占用 3 个 block，虽然最后一个 block 不能占满，但也不能再放入其他文件的数据。这 3 个 block 有可能是连续的，也有可能是分散的。</p>\n<p>由此，我们可以知道以下 2 个重要的信息:</p>\n<ol>\n<li>每个文件都独自占用一个 inode，文件内容由 inode 的记录来指向；</li>\n<li>如果想要读取文件内容，就必须借助目录中记录的文件名找到该文件的 inode，才能成功找到文件内容所在的 block 块；</li>\n</ol>\n<p>了解了 Linux 系统底层文件的存储状态后，接下来学习 ln 命令。</p>\n<p>ln 命令用于给文件创建链接，根据 Linux 系统存储文件的特点，链接的方式分为以下 2 种:</p>\n<ul>\n<li>软链接: 类似于 Windows 系统中给文件创建快捷方式，即产生一个特殊的文件，该文件用来指向另一个文件，此链接方式同样适用于目录。</li>\n<li>硬链接: 我们知道，文件的基本信息都存储在 inode 中，而硬链接指的就是给一个文件的 inode 分配多个文件名，通过任何一个文件名，都可以找到此文件的 inode，从而读取该文件的数据信息。</li>\n</ul>\n<p>ln 命令的基本格式如下:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# ln [选项] 源文件 目标文件</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>选项:</p>\n<ul>\n<li>-s: 建立软链接文件。如果不加 <code>-s</code> 选项，则建立硬链接文件；</li>\n<li>-f: 强制。如果目标文件已经存在，则删除目标文件后再建立链接文件；</li>\n</ul>\n<h3>ln 扩展介绍</h3>\n<ul>\n<li><a href=\"/linux/command/ln.html\" target=\"_blank\">点击前往</a></li>\n</ul>\n",
      "date_published": "2019-11-19T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "链接",
      "url": "https://blog.tlcsdm.com/linux/command/ln.html",
      "id": "https://blog.tlcsdm.com/linux/command/ln.html",
      "summary": "建立硬链接和软链接非常简单，那这两种链接有什么区别? 它们都有什么作用? 这才是链接文件最不容易理解的地方，我们分别来讲讲。",
      "content_html": "<p>建立硬链接和软链接非常简单，那这两种链接有什么区别? 它们都有什么作用? 这才是链接文件最不容易理解的地方，我们分别来讲讲。</p>\n<!-- more -->\n<h2>ln 创建硬链接</h2>\n<p>我们再来建立一个硬链接文件，然后看看这两个文件的特点。</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# touch test</span></span>\n<span class=\"line\"><span>#建立源文件</span></span>\n<span class=\"line\"><span>[root@localhost ~]# ln /root/test /tmp/test-hard</span></span>\n<span class=\"line\"><span>#给源文件建立硬链接文件 /tmp/test-hard</span></span>\n<span class=\"line\"><span>[root@localhost ~]# ll -i /root/test /tmp/test-hard</span></span>\n<span class=\"line\"><span>262147 -rw-r--r-- 2 root root 0 6月 19 10:06 /root/test</span></span>\n<span class=\"line\"><span>hard</span></span>\n<span class=\"line\"><span>262147 -rw-r--r-- 2 root root 0 6月 19 10:06 /tmp/test-hard</span></span>\n<span class=\"line\"><span>#查看两个文件的详细信息，可以发现这两个文件的 inode 号是一样的，\"ll\"等同于\"ls -l\"。</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这里有一件很奇怪的事情，我们之前在讲 inode 号的时候说过，每个文件的 inode 号都应该是不一样的。inode 号就相当于文件 ID，我们在查找文件的时候，要先查找 inode 号，才能读取到文件的内容。</p>\n<p>但是这里源文件和硬链接文件的 inode 号居然是一样的，那我们在查找文件的时候，到底找到的是哪一个文件呢? 我们来画一张示意图，如图 2 所示。</p>\n<figure><figcaption>Hardlink</figcaption></figure>\n<p>在 inode 信息中，是不会记录文件名称的，而是把文件名记录在上级目录的 block 中。也就是说，目录的 block 中记录的是这个目录下所有一级子文件和子目录的文件名及 inode 的对应；而文件的 block 中记录的才是文件实际的数据。</p>\n<p>当我们查找一个文件，比如 <code>/root/test</code> 时，要经过以下步骤:</p>\n<ul>\n<li>首先找到根目录的 inode(根目录的 inode 是系统已知的，inode 号是 2)，然后判断用户是否有权限访问根目录的 block。</li>\n<li>如果有权限，则可以在根目录的 block 中访问到 <code>/root</code> 的文件名及对应的 inode 号。</li>\n<li>通过 <code>/root/</code> 目录的 inode 号，可以查找到 <code>/root/</code> 目录的 inode 信息，接着判断用户是否有权限访问 <code>/root/</code> 目录的 block。</li>\n<li>如果有权限，则可以从 <code>/root/</code> 目录的 block 中读取到 test 文件的文件名及对应的 inode 号。</li>\n<li>通过 test 文件的 inode 号，就可以找到 test 文件的 inode 信息，接着判断用户是否有权限访问 test 文件的 block。</li>\n<li>如果有权限，则可以读取 block 中的数据，这样就完成了 <code>/root/test</code> 文件的读取与访问。</li>\n</ul>\n<p>按照这个步骤，在给源文件 <code>/root/test</code> 建立了硬链接文件 <code>/tmp/test-hard</code> 之后，在 <code>/root/</code> 目录和 <code>/tmp/</code> 目录的 block 中就会建立 test 和 test-hard 的信息，这个信息主要就是文件名和对应的 inode 号。但是我们会发现 test 和 test-hard 的 inode 信息居然是一样的，那么，我们无论访问哪个文件，最终都会访问 inode 号是 262147 的文件信息。</p>\n<p>这就是硬链接的原理。硬链接的特点如下:</p>\n<ul>\n<li>不论是修改源文件(test 文件)，还是修改硬链接文件(test-hard 文件)，另一个文件中的数据都会发生改变。</li>\n<li>不论是删除源文件，还是删除硬链接文件，只要还有一个文件存在，这个文件(inode 号是 262147 的文件)都可以被访问。</li>\n<li>硬链接不会建立新的 inode 信息，也不会更改 inode 的总数。</li>\n<li>硬链接不能跨文件系统(分区)建立，因为在不同的文件系统中，inode 号是重新计算的。</li>\n<li>硬链接不能链接目录，因为如果给目录建立硬链接，那么不仅目录本身需要重新建立，目录下所有的子文件，包括子目录中的所有子文件都需要建立硬链接，这对当前的 Linux 来讲过于复杂。</li>\n</ul>\n<p>硬链接的限制比较多，既不能跨文件系统，也不能链接目录，而且源文件和硬链接文件之间除 inode 号是一样的之外，没有其他明显的特征。这些特征都使得硬链接并不常用，大家有所了解就好。</p>\n<h2>ln 创建软链接</h2>\n<p>软链接也称作符号链接，相比硬链接来讲，软链接就要常用多了。我们先建立一个软链接，再来看看软链接的特点。</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# touch check</span></span>\n<span class=\"line\"><span>#建立源文件</span></span>\n<span class=\"line\"><span>[root@localhost ~]# ln -s /root/check /tmp/check-soft</span></span>\n<span class=\"line\"><span>#建立软链接文件</span></span>\n<span class=\"line\"><span>[root@localhost ~]# ll -id /root/check /tmp/check-soft</span></span>\n<span class=\"line\"><span>262154 -rw-r--r-- 1 root root 0 6月 19 11:30 /root/check</span></span>\n<span class=\"line\"><span>917507 lrwxrwxrwx 1 root root 11 6月 19 11:31 /tmp/ check-soft -&gt; /root/check</span></span>\n<span class=\"line\"><span>#软链接和源文件的 inode 号不一致，软链接通过 -&gt; 明显地标识出源文件的位置</span></span>\n<span class=\"line\"><span>#在软链接的权限位 lrwxrwxrwx 中，l 就代表软链接文件</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>再强调一下，软链接的源文件必须写绝对路径，否则建立的软链接文件就会报错，无法正常使用。</p>\n<p>软链接的标志非常明显，首先，权限位中\"l\"表示这是一个软链接文件；其次，在文件的后面通过 \"-&gt;\" 显示出源文件的完整名字。所以软链接比硬链接的标志要明显得多，而且软链接也不像硬链接的限制那样多，比如软链接可以链接目录，也可以跨分区来建立软链接。</p>\n<p>软链接完全可以当作 Windows 的快捷方式来对待，它的特点和快捷方式一样，我们更推荐大家使用软链接，而不是硬链接。</p>\n<p>大家在学习软链接的时候会有一些疑问: Windows 的快捷方式是由于源文件放置的位置过深，不容易找到，建立一个快捷方式放在桌面，方便查找，那 Linux 的软链接的作用是什么呢?</p>\n<p>软链接主要是为了照顾管理员的使用习惯。比如，有些系统的自启动文件 <code>/etc/rc.local</code> 放置在 <code>/etc</code> 目录中，而有些系统却将其放置在 <code>/etc/rc.d/rc.local</code> 中，那么干脆对这两个文件建立软链接，不论您习惯操作哪一个文件，结果都是一样的。</p>\n<p>如果您比较细心，则应该已经发现软链接和源文件的 inode 号是不一致的，我们也画一张示意图来看看软链接的原理，如图 3 所示。</p>\n<figure><figcaption>软链接示意图</figcaption></figure>\n<p>软链接和硬链接在原理上最主要的不同在于: 硬链接不会建立自己的 inode 索引和 block(数据块)，而是直接指向源文件的 inode 信息和 block，所以硬链接和源文件的 inode 号是一致的；而软链接会真正建立自己的 inode 索引和 block，所以软链接和源文件的 inode 号是不一致的，而且在软链接的 block 中，写的不是真正的数据，而仅仅是源文件的文件名及 inode 号。</p>\n<p>我们来看看访问软链接的步骤和访问硬链接的步骤有什么不同。</p>\n<ul>\n<li>首先找到根目录的 inode 索引信息，然后判断用户是否有权限访问根目录的 block。</li>\n<li>如果有权限访问根目录的 block，就会在 block 中查找到 <code>/tmp/</code> 目录的 inode 号。</li>\n<li>接着访问 <code>/tmp/</code> 目录的 inode 信息，判断用户是否有权限访问 <code>/tmp/</code> 目录的 block。</li>\n<li>如果有权限，就会在 block 中读取到软链接文件 check-soft 的 inode 号。因为软链接文件会真正建立自己的 inode 索引和 block，所以软链接文件和源文件的 inode 号是不一样的。</li>\n<li>通过软链接文件的 inode 号，找到了 check-soft 文件 inode 信息，判断用户是否有权限访问 block。</li>\n<li>如果有权限，就会发现 check-soft 文件的 block 中没有实际数据，仅有源文件 check 的 inode 号。</li>\n<li>接着通过源文件的 inode 号，访问到源文件 check 的 inode 信息，判断用户是否有权限访问 block。</li>\n<li>如果有权限，就会在 check 文件的 block 中读取到真正的数据，从而完成数据访问。</li>\n</ul>\n<p>通过这个过程，我们就可以总结出软链接的特点(软链接的特点和 Windows 中的快捷方式完全一致)。</p>\n<ul>\n<li>不论是修改源文件(check)，还是修改硬链接文件(check-soft)，另一个文件中的数据都会发生改变。</li>\n<li>删除软链接文件，源文件不受影响。而删除原文件，软链接文件将找不到实际的数据，从而显示文件不存在。</li>\n<li>软链接会新建自己的 inode 信息和 block，只是在 block 中不存储实际文件数据，而存储的是源文件的文件名及 inode 号。</li>\n<li>软链接可以链接目录。</li>\n<li>软链接可以跨分区。</li>\n</ul>\n",
      "date_published": "2019-11-20T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "其他文件命令",
      "url": "https://blog.tlcsdm.com/linux/command/other.html",
      "id": "https://blog.tlcsdm.com/linux/command/other.html",
      "summary": "cp 命令 cp 命令，主要用来复制文件和目录，同时借助某些选项，还可以实现复制整个目录，以及比对两文件的新旧而予以升级等功能。 cp 命令的基本格式如下: 选项: -a: 相当于 -d、-p、-r 选项的集合，这几个选项我们一一介绍； -d: 如果源文件为软链接(对硬链接无效)，则复制出的目标文件也为软链接； -i: 询问，如果目标文件已经存在，则会...",
      "content_html": "<h2>cp 命令</h2>\n<p>cp 命令，主要用来复制文件和目录，同时借助某些选项，还可以实现复制整个目录，以及比对两文件的新旧而予以升级等功能。</p>\n<p>cp 命令的基本格式如下:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# cp [选项] 源文件 目标文件</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>选项:</p>\n<ul>\n<li>-a: 相当于 -d、-p、-r 选项的集合，这几个选项我们一一介绍；</li>\n<li>-d: 如果源文件为软链接(对硬链接无效)，则复制出的目标文件也为软链接；</li>\n<li>-i: 询问，如果目标文件已经存在，则会询问是否覆盖；</li>\n<li>-l: 把目标文件建立为源文件的硬链接文件，而不是复制源文件；</li>\n<li>-s: 把目标文件建立为源文件的软链接文件，而不是复制源文件；</li>\n<li>-p: 复制后目标文件保留源文件的属性(包括所有者、所属组、权限和时间)；</li>\n<li>-r: 递归复制，用于复制目录；</li>\n<li>-u: 若目标文件比源文件有差异，则使用该选项可以更新目标文件，此选项可用于对文件的升级和备用。</li>\n</ul>\n<p>需要注意的是，源文件可以有多个，但这种情况下，目标文件必须是目录才可以。</p>\n<h3>cp 命令基本用法</h3>\n<p>cp 命令既可以复制文件，也可以复制目录。我们先来看看如何复制文件，例如:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# touch cangls</span></span>\n<span class=\"line\"><span>#建立源文件</span></span>\n<span class=\"line\"><span>[root@localhost ~]# cp cangls /tmp/</span></span>\n<span class=\"line\"><span>#把源文件不改名复制到 /tmp/ 目录下</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果需要改名复制，则命令如下:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# cp cangls /tmp/bols</span></span>\n<span class=\"line\"><span>#改名复制</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果复制的目标位置已经存在同名的文件，则会提示是否覆盖，因为 cp 命令默认执行的是 <code>cp -i</code> 的别名，例如:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# cp cangls /tmp/</span></span>\n<span class=\"line\"><span>cp:是否覆盖\"/tmp/cangls\"?y</span></span>\n<span class=\"line\"><span>#目标位置有同名文件，所以会提示是否覆盖</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>接下来我们看看如何复制目录，其实复制目录只需使用 <code>-r</code> 选项即可，例如:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# mkdir movie</span></span>\n<span class=\"line\"><span>#建立测试目录</span></span>\n<span class=\"line\"><span>[root@localhost ~]# cp -r /root/movie/ /tmp/</span></span>\n<span class=\"line\"><span>#目录原名复制</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3>复制软链接文件</h3>\n<p>如果源文件不是一个普通文件，而是一个软链接文件，那么是否可以复制软链接的属性呢? 我们试试:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# ln -s /root/cangls /tmp/cangls_slink</span></span>\n<span class=\"line\"><span>#建立一个测试软链接文件/tmp/cangls_slink</span></span>\n<span class=\"line\"><span>[root@localhost ~]# ll /tmp/cangls_slink</span></span>\n<span class=\"line\"><span>lrwxrwxrwx 1 root root 12 6 月 14 05:53 /tmp/cangls_slink -&gt; /root/cangls</span></span>\n<span class=\"line\"><span>#源文件本身就是一个软链接文件</span></span>\n<span class=\"line\"><span>[root@localhost ~]# cp /tmp/cangls_slink /tmp/cangls_t1</span></span>\n<span class=\"line\"><span>#复制软链接文件，但是不加\"-d\"选项</span></span>\n<span class=\"line\"><span>[root@localhost ~]# cp -d /tmp/cangls_slink /tmp/cangls_t2</span></span>\n<span class=\"line\"><span>#复制软链接文件，加入\"-d\"选项</span></span>\n<span class=\"line\"><span>[root@localhost ~]# ll /tmp/cangls_t1 /tmp/cangls_t2</span></span>\n<span class=\"line\"><span>-rw-r--r-- 1 root root 0 6月 14 05:56 /tmp/cangls_t1</span></span>\n<span class=\"line\"><span>#会发现不加\"-d\"选项，实际复制的是软链接的源文件，而不是软链接文件</span></span>\n<span class=\"line\"><span>lrwxrwxrwx 1 root root 12 6 月 14 05:56/tmp/ cangls_t2-&gt; /root/cangls</span></span>\n<span class=\"line\"><span>#而如果加入了\"-d\"选项，则会复制软链接文件</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这个例子说明，如果在复制软链接文件时不使用 <code>-d</code> 选项，则 <code>cp</code> 命令复制的是源文件，而不是软链接文件；只有加入了 <code>-d</code> 选项，才会复制软链接文件。请大家注意，<code>-d</code> 选项对硬链接是无效的。</p>\n<h3>保留源文件属性复制</h3>\n<p>我们发现，在执行复制命令后，目标文件的时间会变成复制命令的执行时间，而不是源文件的时间。例如:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# cp /var/lib/mlocate/mlocate.db /tmp/</span></span>\n<span class=\"line\"><span>[root@localhost ~]# ll /var/lib/mlocate/mlocate.db</span></span>\n<span class=\"line\"><span>-rw-r</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>",
      "date_published": "2019-11-19T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "环境变量",
      "url": "https://blog.tlcsdm.com/linux/command/path.html",
      "id": "https://blog.tlcsdm.com/linux/command/path.html",
      "summary": "环境变量 变量 变量是计算机系统用于保存可变值的数据类型，我们可以直接通过变量名称来提取到对应的变量值。在 Linux 系统中，环境变量是用来定义系统运行环境的一些参数，比如每个用户不同的家目录 (HOME)、邮件存放位置 (MAIL)等。 值得一提的是，Linux 系统中环境变量的名称一般都是大写的，这是一种约定俗成的规范。 我们可以使用 env 命...",
      "content_html": "\n<h2>变量</h2>\n<p>变量是计算机系统用于保存可变值的数据类型，我们可以直接通过变量名称来提取到对应的变量值。在 Linux 系统中，环境变量是用来定义系统运行环境的一些参数，比如每个用户不同的家目录 (HOME)、邮件存放位置 (MAIL)等。\n值得一提的是，Linux 系统中环境变量的名称一般都是大写的，这是一种约定俗成的规范。</p>\n<p>我们可以使用 env 命令来查看到 Linux 系统中所有的环境变量，执行命令如下:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# env</span></span>\n<span class=\"line\"><span>ORBIT_SOCKETDIR=/tmp/orbit-root</span></span>\n<span class=\"line\"><span>HOSTNAME=livecd.centos</span></span>\n<span class=\"line\"><span>GIO_LAUNCHED_DESKTOP_FILE_PID=2065</span></span>\n<span class=\"line\"><span>TERM=xterm</span></span>\n<span class=\"line\"><span>SHELL=/bin/bash</span></span>\n<span class=\"line\"><span>......</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Linux 系统能够正常运行并且为用户提供服务，需要数百个环境变量来协同工作，但是，我们没有必要逐一学习每个变量。常见变量见下表:</p>\n<p>| 环境变量名称 | 作用                                   |\n|</p>\n",
      "date_published": "2019-11-20T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "其他指令",
      "url": "https://blog.tlcsdm.com/linux/command/temp.html",
      "id": "https://blog.tlcsdm.com/linux/command/temp.html",
      "summary": "其他指令 文件 创建文件 touch vi 编辑文件 vi 提示 使用 vi 命令后，默认进入浏览模式。 按 i 进入 insert 模式， 按 ESC 退出。 命令模式下，输入: / 字符串 比如搜索 user, 输入 /user 按下回车之后，可以看到 vim 已经把光标移动到该字符处和高亮了匹配的字符串 查看下一个匹配，按下 n(小写 n) 跳转...",
      "content_html": "\n<h2>文件</h2>\n<h3>创建文件</h3>\n<ul>\n<li>touch</li>\n<li>vi</li>\n</ul>\n<h3>编辑文件</h3>\n<ul>\n<li>vi</li>\n</ul>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>使用 vi 命令后，默认进入浏览模式。</p>\n<p>按 <code>i</code> 进入 insert 模式， 按 <code>ESC</code> 退出。</p>\n<ol>\n<li>\n<p>命令模式下，输入: <code>/</code> 字符串</p>\n<p>比如搜索 user, 输入 <code>/user</code></p>\n<p>按下回车之后，可以看到 vim 已经把光标移动到该字符处和高亮了匹配的字符串</p>\n</li>\n<li>\n<p>查看下一个匹配，按下 n(小写 n)</p>\n</li>\n<li>\n<p>跳转到上一个匹配，按下 N(大写 N)</p>\n</li>\n<li>\n<p>搜索后，我们打开别的文件，发现也被高亮了，怎么关闭高亮?</p>\n</li>\n</ol>\n<p>命令模式下，输入 <code>:nohlsearch</code> 也可以 <code>:set nohlsearch</code>；当然，可以简写，<code>noh</code> 或者 <code>set noh</code>。</p>\n</div>\n<h3>重命名文件</h3>\n<ul>\n<li>rename</li>\n</ul>\n<h3>移动文件</h3>\n<ul>\n<li>mv</li>\n</ul>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>该命令也可用于重命名</p>\n</div>\n<h3>文件浏览</h3>\n<ul>\n<li>pwd: 查看当前目录</li>\n<li>cd: 移动当前目录</li>\n<li>ls: 列出当前目录\n<ul>\n<li><code>-l</code>: 以表格列出当前目录详情</li>\n<li><code>-a</code>: 包括隐藏文件</li>\n</ul>\n</li>\n</ul>\n<h2>权限</h2>\n<ul>\n<li>chmod: 查看/更改文件或文件夹权限</li>\n</ul>\n<p><code>chmod</code> 是权限管理命令 <code>change the permissions mode of a file</code> 的缩写。</p>\n<p><code>u</code> 代表所有者，<code>x</code> 代表执行权限。<code>+</code> 表示增加权限。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> u+x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> file.sh</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 权限数字</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 文件名</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><ul>\n<li>\n<p>r 读权限 read 4</p>\n</li>\n<li>\n<p>w 写权限 write 2</p>\n</li>\n<li>\n<p>x 操作权限 execute 1</p>\n</li>\n</ul>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 600</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> id_rsa</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>用户组</h2>\n<h3>管理用户组</h3>\n<div class=\"language-sh line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">groupadd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> groupname</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 　　添加用户组</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">groupdel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> groupname</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 　　删除用户组</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3>添加用户到用户组</h3>\n<p>将一个用户添加到用户组中，千万不能直接用:</p>\n<div class=\"language-sh line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">usermod</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -G</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> groupA</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>这样做会使您离开其他用户组，仅仅做为 这个用户组 groupA 的成员。</p>\n<p>应该用 加上 <code>-a</code> 选项:</p>\n<div class=\"language-sh line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">usermod</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -a</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -G</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> groupA</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> user</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">FC4:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> usermod</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -G</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> groupA,groupB,groupC</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> user</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>-a</code> 代表 <code>append</code>， 也就是 将自己添加到 用户组 groupA 中，而不必离开 其他用户组。</p>\n<p>命令的所有的选项，及其含义:</p>\n<div class=\"language-text line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"text\" data-title=\"text\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>-c, –comment COMMENT new value of the GECOS field</span></span>\n<span class=\"line\"><span>-d, –home HOME_DIR new home directory for the user account</span></span>\n<span class=\"line\"><span>-e, –expiredate EXPIRE_DATE set account expiration date to EXPIRE_DATE</span></span>\n<span class=\"line\"><span>-f, –inactive INACTIVE set password inactive after expiration</span></span>\n<span class=\"line\"><span>to INACTIVE</span></span>\n<span class=\"line\"><span>-g, –gid GROUP force use GROUP as new primary group</span></span>\n<span class=\"line\"><span>-G, –groups GROUPS new list of supplementary GROUPS</span></span>\n<span class=\"line\"><span>-a, –append append the user to the supplemental GROUPS</span></span>\n<span class=\"line\"><span>mentioned by the -G option without removing</span></span>\n<span class=\"line\"><span>him/her from other groups</span></span>\n<span class=\"line\"><span>-h, –help display this help message and exit</span></span>\n<span class=\"line\"><span>-l, –login NEW_LOGIN new value of the login name</span></span>\n<span class=\"line\"><span>-L, –lock lock the user account</span></span>\n<span class=\"line\"><span>-m, –move-home move contents of the home directory to the new</span></span>\n<span class=\"line\"><span>location (use only with -d)</span></span>\n<span class=\"line\"><span>-o, –non-unique allow using duplicate (non-unique) UID</span></span>\n<span class=\"line\"><span>-p, –password PASSWORD use encrypted password for the new password</span></span>\n<span class=\"line\"><span>-s, –shell SHELL new login shell for the user account</span></span>\n<span class=\"line\"><span>-u, –uid UID new UID for the user account</span></span>\n<span class=\"line\"><span>-U, –unlock unlock the user account</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>查看用户所属的组使用命令:</p>\n<div class=\"language-sh line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">groups</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> user</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>或者查看文件:</p>\n<div class=\"language-sh line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cat</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /etc/group</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>用户</h2>\n<p><code>cat /etc/passwd</code> 查看用户列表</p>\n<h3>添加用户</h3>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> useradd</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [用户名]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>创建新用户: useradd</p>\n<p><code>-d</code> 指定目录文件夹</p>\n<p><code>-m</code> 新账号名</p>\n<p>如:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">useradd</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /www/abc</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -m</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> abc</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><ul>\n<li><code>-c</code>: comment 指定一段注释性描述。</li>\n<li><code>-d</code>: 目录 指定用户主目录，如果此目录不存在，则同时使用-m 选项，可以创建主目录。</li>\n<li><code>-g</code>: 用户组 指定用户所属的用户组。</li>\n<li><code>-G</code>: 用户组，用户组 指定用户所属的附加组。</li>\n<li><code>-s</code>: Shell 文件 指定用户的登录 Shell。</li>\n<li><code>-u</code>: 用户号 指定用户的用户号，如果同时有-o 选项，则可以重复使用其他用户的标识号。</li>\n</ul>\n<h3>设置密码</h3>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> passwd</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [用户名]</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>删除用户</h2>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">userdel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> abc</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>使用 userdel abc 命令删除该用户时，并不能删除该用户的所有信息，只是删除了/etc/passwd、/etc/shadow、/etc/group/、/etc/gshadow 四个文件里的该账户和组的信息。默认情况下创建一个用户账号，会创建一个家目录和一个用户邮箱(在/var/spool/mail 目录以用户名命名)</p>\n<p>所以建议使用 <code>userdel -r abc</code> 删除用户。</p>\n</div>\n<h2>服务管理</h2>\n<p>Linux 服务管理两种方式 service 和 systemctl</p>\n<ol>\n<li>\n<p>service 命令</p>\n<p>service 命令其实是去 <code>/etc/init.d</code> 目录下，去执行相关程序</p>\n<ul>\n<li>service 命令启动 redis 脚本</li>\n</ul>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">service</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> redis</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> start</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><ul>\n<li>直接启动 redis 脚本</li>\n</ul>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/etc/init.d/redis</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> start</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><ul>\n<li>开机自启动</li>\n</ul>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">update-rc.d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> redis</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> defaults</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>其中脚本需要我们自己编写</p>\n</li>\n<li>\n<p>systemctl 命令</p>\n<p>systemd 是 Linux 系统最新的初始化系统(init),作用是提高系统的启动速度，尽可能启动较少的进程，尽可能更多进程并发启动。</p>\n<p>systemd 对应的进程管理命令是 systemctl</p>\n</li>\n</ol>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "文件",
      "url": "https://blog.tlcsdm.com/linux/file/",
      "id": "https://blog.tlcsdm.com/linux/file/",
      "summary": "目录",
      "content_html": "<h2>目录</h2>\n<ul>\n<li>\n<p><a href=\"/linux/file/file.html\" target=\"_blank\">Linux 文件</a></p>\n</li>\n<li>\n<p><a href=\"/linux/file/dir.html\" target=\"_blank\">Linux 目录</a></p>\n</li>\n<li>\n<p><a href=\"/linux/file/mount.html\" target=\"_blank\">挂载</a></p>\n</li>\n</ul>\n",
      "date_published": "2019-11-17T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "目录",
      "url": "https://blog.tlcsdm.com/linux/file/dir.html",
      "id": "https://blog.tlcsdm.com/linux/file/dir.html",
      "summary": "Linux 文件目录结构 学习 Linux，不仅限于学习各种命令，了解整个 Linux 文件系统的目录结构以及各个目录的功能同样至关重要。 使用 Linux 时，通过命令行输入 ls -l / 可以看到，在 Linux 根目录 (/) 下包含很多的子目录(称为一级目录)，例如 bin、boot、dev 等。同时，各一级目录下还含有很多子目录(称为二级目...",
      "content_html": "<h2>Linux 文件目录结构</h2>\n<p>学习 Linux，不仅限于学习各种命令，了解整个 Linux 文件系统的目录结构以及各个目录的功能同样至关重要。</p>\n<p>使用 Linux 时，通过命令行输入 <code>ls -l /</code> 可以看到，在 Linux 根目录 (/) 下包含很多的子目录(称为一级目录)，例如 <code>bin</code>、<code>boot</code>、<code>dev</code> 等。同时，各一级目录下还含有很多子目录(称为二级目录)，比如 <code>/bin/bash</code>、<code>/bin/ed</code> 等。Linux 文件系统目录总体呈现树形结构，<code>/</code> 根目录就相当于树根。</p>\n<p>由于 Linux 系统免费开源，使得 Linux 发行版本有很多，利用 Linux 开发产品的团队也有很多，如果任由每个人都按照自己的想法来配置 Linux 系统文件目录，后期可能会产生诸多的管理问题。试想，如果您进入一家公司，所用 Linux 系统的文件目录结构与所学的完全不同，实在令人头疼。</p>\n<p>为了避免诸多使用者对 Linux 系统目录结构天马行空，Linux 基金会发布了 FHS 标准。多数 Linux 发行版系统都遵循这一标准。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>FHS(Filesystem Hierarchy Standard)，文件系统层次化标准，该标准规定了 Linux 系统中所有一级目录以及部分二级目录(<code>/usr</code> 和 <code>/var</code>)的用途。发布此标准的主要目的就是为了让用户清楚地了解每个目录应该存放什么类型的文件。</p>\n</div>\n<h2>Linux 根目录(/)</h2>\n<p>FHS 认为，Linux 系统的根目录 (/) 最为重要(没有之一)，其原因有以下 2 点:</p>\n<ul>\n<li>所有目录都是由根目录衍生出来的；</li>\n<li>根目录与系统的开机、修复、还原密切相关；</li>\n</ul>\n<p>因此，根目录必须包含开机软件、核心文件、开机所需程序、函数库、修复系统程序等文件。</p>\n<p>| 一级目录 | 功能(作用)                                                                                                                                                                                                                                                                                                                                   |\n|</p>\n",
      "date_published": "2019-11-17T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "文件",
      "url": "https://blog.tlcsdm.com/linux/file/file.html",
      "id": "https://blog.tlcsdm.com/linux/file/file.html",
      "summary": "文件系统 目录就相当于 Windows 中的文件夹，目录中存放的既可以是文件，也可以是其他的子目录，而文件中存储的是真正的信息。 文件系统的最顶层是由根目录开始的，系统使用“/”来表示根目录，在根目录之下的既可以是目录，也可以是文件，而每一个目录中又可以包含(子)目录或文件。如此反复就可以构成一个庞大的文件系统。 其实，使用这种树状、具有层次的文件结构...",
      "content_html": "<h2>文件系统</h2>\n<p>目录就相当于 Windows 中的文件夹，目录中存放的既可以是文件，也可以是其他的子目录，而文件中存储的是真正的信息。</p>\n<p>文件系统的最顶层是由根目录开始的，系统使用“<code>/</code>”来表示根目录，在根目录之下的既可以是目录，也可以是文件，而每一个目录中又可以包含(子)目录或文件。如此反复就可以构成一个庞大的文件系统。\n其实，使用这种树状、具有层次的文件结构主要目的是方便文件系统的管理和维护，想象一下，如果所有的文件都放在一个目录下，其文件系统的管理和维护将变成一场噩梦。</p>\n<p>现实中也有许多类似的例子，例如在整个行政管理体制中，村民就相当于文件，他们住在一个村庄中，村庄就是存储村民的目录。许多村又组成了个乡，这个乡就相当于存储村的目录，依此类推，最终就构建出了一个庞大的行政区域管理结构图。</p>\n<p>注意，目录名或文件名都是区分大小写的，如 dog、DOG 和 Dog 为 3 个不同的目录或文件。完整的目录或文件路径是由一连串的目录名所组成的，其中每一个目录由“/”来分隔。如 cat 的完整路径是 <code>/home/cat</code>。</p>\n<p>在文件系统中，有两个特殊的目录，一个是用户所在的工作目录，即当前目录，可用一个点“<code>.</code>”表示；另一个是当前目录的上一层目录，也叫父目录，用两个点“<code>..</code>”表示。</p>\n<p>如果一个目录或文件名是以一个点开始，就表示这个目录或文件是一个隐藏目录或文件。即以默认方式査找(后续会讲查找命令)时，不显示该目录或文件。</p>\n<p>为了方便管理和维护，Linux 系统采用了文件系统层次标准，也称为 FHS 标准，它规定了根目录下各个目录应该存在哪些类型的文件(或子目录)，比如说，在 <code>/bin</code> 和 <code>/sbin</code> 目录中存放的应该是可执行文件，有关各个目录存放文件的类型，已在《Linux 文件目录结构一览表》一节中作了详解介绍，这里不再过多赘述。</p>\n<h2>文件</h2>\n<p>虽然从名称上不容易分辨，但是可以从颜色上进行区分。一般情况下，Linux 用蓝色代表目录，其他颜色则表示是文件。</p>\n<p>和 Linux 不同，Windows 下带有 <code>&lt;DIR&gt;</code> 标记的行或使用中括号 <code>[]</code> 括起来的名称就是目录，其他的则是文件。</p>\n<p>不仅如此，Linux 中还可以用不同的颜色来区分不同种类的文件，例如绿色代表可执行文件、红色代表压缩文件、浅绿色代表链接文件、白色代表其他文件、黄色代表设备文件等。</p>\n<p>但是，不同颜色所代表的文件类型不一定是这样，更准确的对应方式还取决于配置文件 <code>/etc/DIR_COLORS</code> 中的规定。因此，如果想详细了解不同文件类型所对应的颜色，可以使用 <code>man</code> 命令，例如:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# man dir_colors</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>注意，有些 Linux 发行版单独使用 <code>ls</code> 命令，无法显示出带有不同颜色的文件和目录，此时就需要使用 <code>ls --color=auto</code> 命令，明确令其使用颜色来区分文件类型。</p>\n<p>在此基础上，如果不想每次使用 <code>ls</code> 命令时，都显式附带 <code>--color=auto</code>，可以执行如下命令:</p>\n<div class=\"language-shell-session line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell-session\" data-title=\"shell-session\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>[root@localhost ~]# alias ls = 'ls --color=auto'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>通过给 <code>ls --color==auto</code> 这个整体设置一个别名 <code>ls</code>，这样当后续使用 <code>ls</code> 命令时，就等同于执行 <code>ls --color=auto</code> 命令。</p>\n<p>同时，如果想使这个设置永远生效，还需要将其添加到 <code>/etc/bashrc</code> 或 <code>/home/&lt;user&gt;/.bashrc</code> 文件中，前者对所有用户有效，而后者仅对用户 <code>&lt;user&gt;</code> 有效。</p>\n<p>其实，那些默认提供颜色功能的 Linux 发行版，也是通过这个方法开启的功能。</p>\n<p>当然，通过颜色来区分文件类型，难免有些牵强，对于颜色不太敏感的读者来说，很容易搞错。Linux 中精确判断文件类型的方法，是通过文件本身所具有的属性进行判断。</p>\n<p>通过 <code>ls -l</code> 命令，我们就可以查看当前目录下所有文件和目录各自的属性</p>\n<h2>命名规则</h2>\n<ul>\n<li>除了字符“/”之外，所有的字符都可以使用，但是要注意，在目录名或文件名中，使用某些特殊字符并不是明智之举。例如，在命名时应避免使用 <code>&lt;</code>、<code>&gt;</code>、<code>?</code>、<code>*</code> 和非打印字符等。如果一个文件名中包含了特殊字符，例如空格，那么在访问这个文件时就需要使用引号将文件名括起来。</li>\n<li>目录名或文件名的长度不能超过 255 个字符。</li>\n<li>目录名或文件名是区分大小写的。如 DOG、dog、Dog 和 DOg ，是互不相同的目录名或文件名，但使用字符大小写来区分不同的文件或目录，也是不明智的。</li>\n</ul>\n<h2>不同字符对应的文件类型</h2>\n<p>| 第一个字符 | 文件类型                                                                                             |\n|</p>\n",
      "date_published": "2019-11-17T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Linux 挂载",
      "url": "https://blog.tlcsdm.com/linux/file/mount.html",
      "id": "https://blog.tlcsdm.com/linux/file/mount.html",
      "summary": "Linux 挂载 前面讲过，Linux 系统中“一切皆文件”，所有文件都放置在以根目录为树根的树形目录结构中。在 Linux 看来，任何硬件设备也都是文件，它们各有自己的一套文件系统(文件目录结构)。 因此产生的问题是，当在 Linux 系统中使用这些硬件设备时，只有将 Linux 本身的文件目录与硬件设备的文件目录合二为一，硬件设备才能为我们所用。合...",
      "content_html": "\n<p>前面讲过，Linux 系统中“一切皆文件”，所有文件都放置在以根目录为树根的树形目录结构中。在 Linux 看来，任何硬件设备也都是文件，它们各有自己的一套文件系统(文件目录结构)。</p>\n<p>因此产生的问题是，当在 Linux 系统中使用这些硬件设备时，只有将 Linux 本身的文件目录与硬件设备的文件目录合二为一，硬件设备才能为我们所用。合二为一的过程称为“挂载”。</p>\n<p>如果不挂载，通过 Linux 系统中的图形界面系统可以查看找到硬件设备，但命令行方式无法找到。</p>\n<p>挂载，指的就是将设备文件中的顶级目录连接到 Linux 根目录下的某一目录(最好是空目录)，访问此目录就等同于访问设备文件。</p>\n<p>纠正一个误区，并不是根目录下任何一个目录都可以作为挂载点，由于挂载操作会使得原有目录中文件被隐藏，因此根目录以及系统原有目录都不要作为挂载点，会造成系统异常甚至崩溃，挂载点最好是新建的空目录。</p>\n<p>举个例子，我们想通过命令行访问某个 U 盘中的数据，我们要在根目录下新建一个目录 <code>/sdb-u</code>，通过挂载命令将 U 盘文件系统挂载到此目录，</p>\n<p>前面讲过，根目录下的 <code>/dev/</code> 目录文件负责所有的硬件设备文件，事实上，当 U 盘插入 Linux 后，系统也确实会给 U 盘分配一个目录文件(比如 sdb1)，就位于 <code>/dev/</code> 目录下 (<code>/dev/sdb1</code>)，但无法通过 <code>/dev/sdb1/</code> 直接访问 U 盘数据，访问此目录只会提供给您此设备的一些基本信息(比如容量)。</p>\n<p>总之，Linux 系统使用任何硬件设备，都必须将设备文件与已有目录文件进行挂载。</p>\n<h2>Linux 硬件设备文件名称</h2>\n<p>| 硬件设备           | 文件名称                                                                              |\n|</p>\n",
      "date_published": "2019-11-17T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Linux 简介",
      "url": "https://blog.tlcsdm.com/linux/intro/",
      "id": "https://blog.tlcsdm.com/linux/intro/",
      "summary": "Linux 简介",
      "content_html": "\n<ul>\n<li>\n<p><a href=\"/linux/intro/intro.html\" target=\"_blank\">Linux 介绍</a></p>\n</li>\n<li>\n<p><a href=\"/linux/intro/history.html\" target=\"_blank\">Linux 历史</a></p>\n</li>\n<li>\n<p><a href=\"/linux/intro/language.html\" target=\"_blank\">Linux 编写语言</a></p>\n</li>\n<li>\n<p><a href=\"/linux/intro/advantage.html\" target=\"_blank\">Linux 优势</a></p>\n</li>\n<li>\n<p><a href=\"/linux/intro/desktop.html\" target=\"_blank\">Linux 桌面环境</a></p>\n</li>\n</ul>\n",
      "date_published": "2019-11-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Linux 的优点",
      "url": "https://blog.tlcsdm.com/linux/intro/advantage.html",
      "id": "https://blog.tlcsdm.com/linux/intro/advantage.html",
      "summary": "Linux 的优点 相比 Windows 系统，Linux 系统有更好的稳定性。此外，Linux 还有如下优点: 大量的可用软件及免费软件 Linux 系统上有着大量的可用软件，且绝大多数是免费的，比如声名赫赫的 Apache、Samba、PHP、MySQL 等，构建成本低廉，是 Linux 被众多企业青睐的原因之一。当然，这和 Linux 出色的性能...",
      "content_html": "\n<p>相比 Windows 系统，Linux 系统有更好的稳定性。此外，Linux 还有如下优点:</p>\n<ol>\n<li>\n<p>大量的可用软件及免费软件</p>\n<p>Linux 系统上有着大量的可用软件，且绝大多数是免费的，比如声名赫赫的 Apache、Samba、PHP、MySQL 等，构建成本低廉，是 Linux 被众多企业青睐的原因之一。当然，这和 Linux 出色的性能是分不开的，否则，节约成本就没有任何意义。</p>\n<p>但不可否认的是，Linux 在办公应用和游戏娱乐方面的软件相比 Windows 系统还很匮乏，所以，即便打游戏、看影片用的也是 Windows，至于 Linux，就把它用在擅长的服务器领域吧。</p>\n</li>\n<li>\n<p>良好的可移植性及灵活注\nLinux 系统有良好的可移植性，它几乎支持所有的 CPU 平台，这使得它便于裁剪和定制。我们可以把 Linux 放在 U 盘、光盘等存储介质中，也可以在嵌入式领域广泛应用。</p>\n<p>如果读者希望不进行安装就体验 Linux 系统，则可以在网上下载一个 Live DVD 版的 Linux 镜像，刻成光盘放入光驱或者用虚拟机软件直接载入镜像文件，设置 CMOS/BIOS 为光盘启动，系统就会自动载入光盘文件，启动进入 Linux 系统。</p>\n</li>\n<li>\n<p>优良的稳定性和安全性</p>\n<p>著名的黑客埃里克•雷蒙德(EricS.Raymond)有一句名言: “足够多的眼睛，就可让所有问题浮现”。举个例子，假如笔者在演讲，台下人山人海，明哥中午吃饭不小心，有几个饭粒粘在衣领上了，分分钟就会被大家发现，因为看的人太多了；如果台下就稀稀落落两三个人且离得很远，那就算明哥衣领上有一大块油渍也不会被发现。</p>\n<p>Linux 开放源代码，将所有代码放在网上，全世界的程序员都看得到，有什么缺陷和漏洞，很快就会被发现，从而成就了它的稳定性和安全注。</p>\n</li>\n<li>\n<p>支持几乎所有的网络协议及开发语言</p>\n<p>经常有初学的朋友问我，Linux 是不是对 TCP/IP 协议支持不好、是不是 Java 开发环境不灵之类的问题。前面在 UNIX 发展史中已经介绍了，UNIX 系统是与 C 语言、TCP/IP 协议一同发展起来的，而 Linux 是 UNIX 的一种，C 语言又衍生出了现今主流的语言 PHP、Java、C++ 等，而哪一个网络协议与 TCP/IP 无关呢? 所以，Linux 对网络协议和开发语言的支持很好。</p>\n</li>\n</ol>\n",
      "date_published": "2019-11-16T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "桌面系统",
      "url": "https://blog.tlcsdm.com/linux/intro/desktop.html",
      "id": "https://blog.tlcsdm.com/linux/intro/desktop.html",
      "summary": "桌面系统 KDE 桌面系统 KDE 是 K Desktop Environment 的缩写，中文译为“K 桌面环境”。 KDE 是基于大名鼎鼎的 Qt 的，最初于 1996 年作为开源项目公布，并在 1998 年发布了第一个版本，现在 KDE 几乎是排名第一的桌面环境了。 许多流行的 Linux 发行版都提供了 KDE 桌面环境，比如 Ubuntu、L...",
      "content_html": "\n<h2>KDE 桌面系统</h2>\n<p>KDE 是 K Desktop Environment 的缩写，中文译为“K 桌面环境”。</p>\n<p>KDE 是基于大名鼎鼎的 Qt 的，最初于 1996 年作为开源项目公布，并在 1998 年发布了第一个版本，现在 KDE 几乎是排名第一的桌面环境了。</p>\n<p>许多流行的 Linux 发行版都提供了 KDE 桌面环境，比如 Ubuntu、Linux Mint、OpenSUSE、Fedora、Kubuntu、PC Linux OS 等。</p>\n<p>KDE 和 Windows 比较类似，各位初学者相信都是 Windows 的用户，所以切换到 KDE 也不会有太大的障碍。</p>\n<p>KDE 允许您把应用程序图标和文件图标放置在桌面的特定位置上。单击应用程序图标，Linux 系统就会运行该应用程序。单击文件图标，KDE 桌面就会确定使用哪种应用程序来处理该文件。</p>\n<p>KDE 是所有桌面环境中最容易定制的。在其他桌面环境中，您需要几个插件、窗口组件和调整工具才可以定制环境，KDE 将所有工具和窗口组件都塞入到系统设置中。借助先进的设置管理器，可以控制一切，不需要任何第三方工具，就可以根据用户的喜好和要求来美化及调整桌面。</p>\n<p>KDE 项目组还还发了大量的可运行在 KDE 环境中的应用程序，包括 Dolphin(文件管理工具)、Konsole(终端)、Kate(文本编辑工具)、Gwenview(图片查看工具)、Okular(文档及 PDF 查看工具)、Digikam(照片编辑和整理工具)、KMail(电子邮件客户软件)、Quassel(IRC 客户软件)、K3b(DVD 刻录程序)、Krunner(启动器)等，它们都是默认安装的。</p>\n<p>对 KDE 优缺点的总结:</p>\n<ul>\n<li>优点: KDE 几乎是最先进最强大的桌面环境，它外观优美、高度可定制、兼容比较旧的硬件设备</li>\n<li>缺点: Kmail 等一些组件的配置对新手来说过于复杂。</li>\n</ul>\n<h2>GNOME 桌面环境</h2>\n<p>GNOME 是 the GNU Network Object Model Environment 的缩写，中文译为“GNU 网络对象模型环境”。</p>\n<p>GNOME 于 1999 年首次发布，现已成为许多 Linux 发行版默认的桌面环境(不过用得最多的是 Red Hat Linux)。</p>\n<p>GNOME 的特点是简洁、运行速度快，但是没有太多的定制选项，用户需要安装第三方工具来实现。</p>\n<p>GNOME 甚至不包括一些简单的调整选项，比如更改主题、更改字体等，就这两种基本的调整而言，用户都需要安装第三方工具。所以，GONME 适合那些不需要高度定制界面的用户。</p>\n<p>GNOME 被用作 Fedora 中的默认桌面环境，提供在几款流行的 Linux 发行版中，比如 Ubuntu、Debian、OpenSUSE 等。</p>\n<p>2011 年，GNOME 3 进行了重大更新，不再采用传统的 Windows 风格的界面，而是进行了全新的设计，惊艳了很多用户。GNOME 3 的这种行为也导致部分用户和开发人员不满，他们又开发了多款其他的桌面环境，比如 MATE 和 Cinnamon。</p>\n<p>对 GNOME 优缺点的总结:</p>\n<ul>\n<li>优点: 简单易用，可通过插件来扩展功能。</li>\n<li>缺点: 对插件的管理能力比较差，也缺少其它桌面环境拥有的许多功能。</li>\n</ul>\n<h2>Unity</h2>\n<p>Unity 是由 Ubuntu 的母公司 Canonical 开发的一款外壳。之所以说它是外壳，是因为 Unity 运行在 GNOME 桌面环境之上，使用了所有 GNOME 的核心应用程序。</p>\n<p>2010 年，Unity 第一个版本发布，此后经过数次改进，如今和其它的桌面环境一样，也可以安装到其它的 Linux 发行版上了。</p>\n<p>Unity 使用了不同的界面风格，如果您用的是 Ubuntu Linux 发行版，您会注意到 Unity 与 KDE 和 GNOME 桌面环境有些不一样。</p>\n<p>Unity 在左边有一个启动器，位于启动器顶部的是搜索图标，又叫“Dash”。在 Dash 上搜索文件时，不仅会给出来自硬盘的搜索结果，还会给出来自在线来源的搜索结果，比如 Google Drive、Facebook、Picasa、Flick 及其他。</p>\n<p>Unity 还提供了隐藏启动器、触摸侧边栏就显示的选项，用户还可以调高/调低显示启动器菜单的灵敏度。</p>\n<p>Unity 很简单、运行速度快，但 Unity 在系统设置下却没有定制桌面的太多选项，要想安装主题或者定制另外不同的选项，比如系统菜单是否应该总是可见，或者“从启动器图标一次点击最小化”，用户需要安装第三方工具。</p>\n<p>CCSM 和 Unity Tweak Tool 是面向 Unity 桌面环境的非常流行的定制工具。</p>\n<p>对 Unity 优缺点的总结:</p>\n<ul>\n<li>优点: 界面简洁直观，可以通过第三方工具来深度定制，而且使用了平视显示器(HUD)等新技术。</li>\n<li>缺点: 默认的定制功能比较差劲，通知机制一般。</li>\n</ul>\n<h2>MATE</h2>\n<p>上面我们提到，GNOME 3 进行了全新的界面设计，这招致一些用户的不满，他们推出了其它的桌面环境，MATE 就是其中之一。</p>\n<p>MATE 是一种从现在无人维护的 GNOME 2 代码库派生出来的桌面环境。</p>\n<p>MATE 让人觉得在使用旧的桌面环境，但是结合了历年来界面方面的诸多改进。MATE 还非常适用于低配计算机，所以如果您有一台旧的或速度较慢的计算机，可以使用 MATE。</p>\n<p>MATE 还是许多流行的 Linux 发行版随带的，比如 Ubuntu、Linux Mint、Mageia、Debian 及另外更多发行版。Ubuntu MATE 头一回是官方版本。</p>\n<p>“欢迎首次发布的 Ubuntu MATE 官方版本。现在，用户将更容易更新软件，因为所有组件现在都在 Ubuntu 软件库中。”</p>\n<p>MATE 自带的应用程序包括 Caja(文件管理工具)、Pluma(文本编辑工具)、Atril(文档查看工具)、Eye of MATE(图像查看工具)等，如果用户不需要其他功能完备的桌面环境的所有额外功能，那么 MATE 对他们来说是一款简单的轻量级桌面环境。</p>\n<p>对 META 优缺点的总结:</p>\n<ul>\n<li>优点: 轻量级的桌面环境，能够兼容教旧的硬件设备。</li>\n<li>缺点: 我也不知道有什么明显的缺点，欢迎读者留言告知。</li>\n</ul>\n<h2>Cinnamon</h2>\n<p>与 MATE 类似，Cinnamon 是由 Linux Mint 团队因为不满 Gnome 3 的改进而开发的另一种桌面环境。但 Cinnamon 与 MATE 不同之处在于，Cinnamon 建立在 Gnome 3 的基础上。Cinnamon 是新的，而且在积极开发之中，但这款出色的桌面环境没有因新颖而在功能方面有所减弱。</p>\n<p>Cinnamon 拥有 GNOME 和 Unity 等其它桌面环境所没有的种种功能。Cinnamon 是高度可定制的桌面环境，不需要任何外部插件、窗口组件和调整工具来定制桌面。Cinnamon 甚至可以通过设置管理器本身来下载并安装主题，甚至不需要打开互联网浏览器。</p>\n<p>由于种种出色的所需功能，Cinnamon 对任何刚接触 Linux 的新用户来说都非常方便。许多用户放弃使用 Linux，是因为他们并不了解 Linux 的工作方式，但是我强烈建议新手应从 Cinnamon 桌面环境开始入手。</p>\n<p>许多流行的 Linux 发行版提供了各自版本的 Cinnamon，比如 Ubuntu、Fedora、OpenSUSE、Gentoo、Arch Linux 等。Cinnamon 还是 Linux Mint 的默认桌面环境。</p>\n<p>对 Cinnamon 优缺点的总结:</p>\n<ul>\n<li>优点: 成熟完美，高度可性质，适合 Linux 新手。</li>\n<li>缺点: 有时候可能会有软件错误。</li>\n</ul>\n",
      "date_published": "2019-11-16T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Linux 和 UNIX",
      "url": "https://blog.tlcsdm.com/linux/intro/history.html",
      "id": "https://blog.tlcsdm.com/linux/intro/history.html",
      "summary": "Linux 和 UNIX UNIX 与 Linux 之间的关系是一个很有意思的话题。在目前主流的服务器端操作系统中，UNIX 诞生于 20 世纪 60 年代末，Windows 诞生于 20 世纪 80 年代中期，Linux 诞生于 20 世纪 90 年代初，可以说 UNIX 是操作系统中的\"老大哥\"，后来的 Windows 和 Linux 都参考了 U...",
      "content_html": "\n<p>UNIX 与 Linux 之间的关系是一个很有意思的话题。在目前主流的服务器端操作系统中，UNIX 诞生于 20 世纪 60 年代末，Windows 诞生于 20 世纪 80 年代中期，Linux 诞生于 20 世纪 90 年代初，可以说 UNIX 是操作系统中的\"老大哥\"，后来的 Windows 和 Linux 都参考了 UNIX。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>现代的 Windows 系统已经朝着“图形界面”的方向发展了，和 UNIX 系统有了巨大的差异，从表面上甚至看不出两者的关联。</p>\n</div>\n<h2>UNIX 的坎坷历史</h2>\n<p>UNIX 操作系统由肯·汤普森(Ken Thompson)和丹尼斯·里奇(Dennis Ritchie)发明。它的部分技术来源可追溯到从 1965 年开始的 Multics 工程计划，该计划由贝尔实验室、美国麻省理工学院和通用电气公司联合发起，目标是开发一种交互式的、具有多道程序处理能力的分时操作系统，以取代当时广泛使用的批处理操作系统。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>分时操作系统使一台计算机可以同时为多个用户服务，连接计算机的终端用户交互式发出命令，操作系统采用时间片轮转的方式处理用户的服务请求并在终端上显示结果(操作系统将 CPU 的时间划分成若干个片段，称为时间片)。操作系统以时间片为单位，轮流为每个终端用户服务，每次服务一个时间片。</p>\n</div>\n<p>可惜，由于 Multics 工程计划所追求的目标太庞大、太复杂，以至于它的开发人员都不知道要做成什么样子，最终以失败收场。</p>\n<p>以肯•汤普森为首的贝尔实验室研究人员吸取了 Multics 工程计划失败的经验教训，于 1969 年实现了一种分时操作系统的雏形，1970 年该系统正式取名为 UNIX。</p>\n<p>想一下英文中的前缀 Multi 和 Uni，就明白了 UNIX 的隐意。Multi 是大的意思，大而且繁；而 Uni 是小的意思，小而且巧。这是 UNIX 开发者的设计初衷，这个理念一直影响至今。</p>\n<p>有意思的是，肯•汤普森当年开发 UNIX 的初衷是运行他编写的一款计算机游戏 Space Travel，这款游戏模拟太阳系天体运动，由玩家驾驶飞船，观赏景色并尝试在各种行星和月亮上登陆。他先后在多个系统上试验，但运行效果不甚理想，于是决定自己开发操作系统，就这样，UNIX 诞生了。</p>\n<p>自 1970 年后，UNIX 系统在贝尔实验室内部的程序员之间逐渐流行起来。1971-1972 年，肯•汤普森的同事丹尼斯•里奇发明了传说中的 C 语言，这是一种适合编写系统软件的高级语言，它的诞生是 UNIX 系统发展过程中的一个重要里程碑，它宣告了在操作系统的开发中，汇编语言不再是主宰。</p>\n<p>到了 1973 年，UNIX 系统的绝大部分源代码都用 C 语言进行了重写，这为提高 UNIX 系统的可移植性打下了基础(之前操作系统多采用汇编语言，对硬件依赖性强)，也为提高系统软件的开发效率创造了条件。可以说，UNIX 系统与 C 语言是一对孪生兄弟，具有密不可分的关系。</p>\n<p>20 世纪 70 年代初，计算机界还有一项伟大的发明——TCP/IP 协议，这是当年美国国防部接手 ARPAnet 后所开发的网络协议。美国国防部把 TCP/IP 协议与 UNIX 系统、C 语言捆绑在一起，由 AT&amp;T 发行给美国各个大学非商业的许可证，这为 UNIX 系统、C 语言、TCP/IP 协议的发展拉开了序幕，它们分别在操作系统、编程语言、网络协议这三个领域影响至今。肯•汤普森和丹尼斯•里奇因在计算机领域做出的杰出贡献，于 1983 年获得了计算机科学的最高奖——图灵奖。</p>\n<p>随后出现了各种版本的 UNIX 系统，目前常见的有 Sun Solaris、FreeBSD、IBM AIX、HP-UX 等。</p>\n<h2>Solaris 和 FreeBSD</h2>\n<p>我们重点介绍一下 Solaris，它是 UNIX 系统的一个重要分支。Solaris 除可以运行在 SPARC CPU 平台上外，还可以运行在 x86 CPU 平台上。在服务器市场上，Sun 的硬件平台具有高可用性和高可靠性，是市场上处于支配地位的 UNIX 系统。</p>\n<p>对于难以接触到 Sun SPARC 架构计算机的用户来说，可以通过使用 Solaris x86 来体验世界知名大厂的商业 UNIX 风采。当然，Solaris x86 也可以用于实际生产应用的服务器，在遵守 Sun 的有关许可条款的情况下，Solaris x86 可以免费用于学习研究或商业应用。</p>\n<p>FreeBSD 源于美国加利福尼亚大学伯克利分校开发的 UNIX 版本，它由来自世界各地的志愿者开发和维护，为不同架构的计算机系统提供了不同程度的支持。FreeBSD 在 BSD 许可协议下发布，允许任何人在保留版权和许可协议信息的前提下随意使用和发行，并不限制将 FreeBSD 的代码在另一协议下发行，因此商业公司可以自由地将 FreeBSD 代码融入它们的产品中。苹果公司的 macOS 就是基于 FreeBSD 的操作系统。</p>\n<p>FreeBSD 与 Linux 的用户群有相当一部分是重合的，二者支持的硬件环境也比较一致，所采用的软件也比较类似。FreeBSD 的最大特点就是稳定和高效，是作为服务器操作系统的不错选择；但其对硬件的支持没有 Linux 完备，所以并不适合作为桌面系统。</p>\n<p>其他 UNIX 版本因应用范围相对有限，在此不做过多介绍。</p>\n<h2>Linux 的那些往事</h2>\n<p>Linux 内核最初是由李纳斯•托瓦兹(Linus Torvalds)在赫尔辛基大学读书时出于个人爱好而编写的，当时他觉得教学用的迷您版 UNIX 操作系统 Minix 太难用了，于是决定自己开发一个操作系统。第 1 版本于 1991 年 9 月发布，当时仅有 10 000 行代码。</p>\n<p>李纳斯•托瓦兹没有保留 Linux 源代码的版权，公开了代码，并邀请他人一起完善 Linux。与 Windows 及其他有专利权的操作系统不同，Linux 开放源代码，任何人都可以免费使用它。</p>\n<p>据估计，现在只有 2% 的 Linux 核心代码是由李纳斯•托瓦兹自己编写的，虽然他仍然拥有 Linux 内核(操作系统的核心部分)，并且保留了选择新代码和需要合并的新方法的最终裁定权。现在大家所使用的 Linux，我更倾向于说是由李纳斯•托瓦兹和后来陆续加入的众多 Linux 好者共同开发完成的。</p>\n<p>李纳斯•托瓦兹无疑是这个世界上最伟大的程序员之一，何况，他还搞出了全世界最大的程序员交友社区 GitHub (开源代码库及版本控制系统)。</p>\n<p>关于 Linux Logo 的由来是一个很有意思的话题，它是一只企鹅。企鹅是南极洲的标志性动物，根据国际公约，南极洲为全人类共同所有，不属于世界上的任何国家，任何国家都无权将南极洲纳入其版图。Linux 选择企鹅图案作为 Logo，其含义是: 开放源代码的 Linux 为全人类共同所有，任何公司无权将其私有。</p>\n<h2>UNIX 与 Linux 的关系</h2>\n<p>二者的关系，不是大哥和小弟，\"UNIX 是 Linux 的父亲\"这个说法更怡当。之所以要介绍它们的关系，是因为要告诉读者，在学习的时候，其实 Linux 与 UNIX 有很多的共通之处，简单地说，如果您已经熟练掌握了 Linux，那么再上手使用 UNIX 会非常容易。</p>\n<p>二者也有两个大的区别:</p>\n<ul>\n<li>\n<p>UNIX 系统大多是与硬件配套的，也就是说，大多数 UNIX 系统如 AIX、HP-UX 等是无法安装在 x86 服务器和个人计算机上的，而 Linux 则可以运行在多种硬件平台上；</p>\n</li>\n<li>\n<p>UNIX 是商业软件，而 Linux 是开源软件，是免费、公开源代码的。</p>\n</li>\n</ul>\n<p>Linux 受至旷大计算机爱好者的喜爱，主要原因也有两个:</p>\n<ul>\n<li>\n<p>它属于开源软件，用户不用支付可费用就可以获得它和它的源代码，并且可以根据自己的需要对它进行必要的修改，无偿使用，无约束地继续传播；</p>\n</li>\n<li>\n<p>它具有 UNIX 的全部功能，任何使用 UNIX 操作系统或想要学习 UNIX 操作系统的人都可以从 Linux 中获益。</p>\n</li>\n</ul>\n<p>开源软件是不同于商业软件的一种模式，从字面上理解，就是开放源代码，大家不用担心里面会搞什么猫腻，这会带来软件的革新和安全。</p>\n<p>另外，开源其实并不等同于免费，而是一种新的软件盈利模式。目前很多软件都是开源软件，对计算机行业与互联网影响深远。</p>\n<p>近年来，Linux 已经青出于蓝而胜于蓝，以超常的速度发展，从一个丑小鸭变成了一个拥有庞大用户群的真正优秀的、值得信赖的操作系统。历史的车轮让 Linux 成为 UNIX 最优秀的传承者。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">总结</p>\n<p>Linux 是一个类似 Unix 的操作系统，Unix 要早于 Linux，Linux 的初衷就是要替代 UNIX，并在功能和用户体验上进行优化，所以 Linux 模仿了 UNIX(但并没有抄袭 UNIX 的源码)，使得 Linux 在外观和交互上与 UNIX 非常类似。</p>\n</div>\n<p>相比于 UNIX，Linux 最大的创新是开源免费，这是它能够蓬勃发展的最重要原因；而目前的 UNIX 大部分都是收费的，小公司和个人都难以承受。</p>\n<p>正是由于 Linux 和 UNIX 有着千丝万缕的联系，所以人们把 Linux 叫做“类 UNIX 系统”。</p>\n<h2>UNIX/Linux 系统结构</h2>\n<p>UNIX/Linux 系统可以粗糙地抽象为 3 个层次(所谓粗糙，就是不够细致、精准，但是便于初学者抓住重点理解)，如图 3 所示。底层是 UNIX/Linux 操作系统，即系统内核(Kernel)；中间层是 Shell 层，即命令解释层；高层则是应用层。</p>\n<figure><figcaption>Structrure</figcaption></figure>\n<ol>\n<li>\n<p>内核层</p>\n<p>内核层是 UNIX/Linux 系统的核心和基础，它直接附着在硬件平台之上，控制和管理系统内各种资源(硬件资源和软件资源)，有效地组织进程的运行，从而扩展硬件的功能，提高资源的利用效率，为用户提供方便、高效、安全、可靠的应用环境。</p>\n</li>\n<li>\n<p>Shell 层</p>\n<p>Shell 层是与用户直接交互的界面。用户可以在提示符下输入命令行，由 Shell 解释执行并输出相应结果或者有关信息，所以我们也把 Shell 称作命令解释器，利用系统提供的丰富命令可以快捷而简便地完成许多工作。</p>\n</li>\n<li>\n<p>应用层</p>\n<p>应用层提供基于 X Window 协议的图形环境。X Window 协议定义了一个系统所必须具备的功能(就如同 TCP/IP 是一个协议，定义软件所应具备的功能)，可系统能满足此协议及符合 X 协会其他的规范，便可称为 X Window。</p>\n</li>\n</ol>\n<p>现在大多数的 UNIX 系统上(包括 Solaris、HP-UX、AIX 等)都可以运行 CDE (Common Desktop Environment，通用桌面环境，是运行于 UNIX 的商业桌面环境) 的用户界面；而在 Linux 上广泛应用的有 Gnome、KDE 等。</p>\n<h2>协议</h2>\n<p>早在 20 世纪 70 年代，UNIX 系统是开源而且免费的，但是在 1979 年时，AT&amp;T 公司宣布了对 UNIX 系统的商业化计划，随之开源软件业转变成了版权式软件产业，源代码被当作商业机密，成为专利产品，人们再也不能自由地享受科技成果。</p>\n<p>于是在 1984 年，Richard Stallman 面对于如此封闭的软件创作环境，发起了 GNU 源代码开放计划并制定了著名的 GPL 许可协议。</p>\n<p>1987 年时，GNU 计划获得了一项重大突破，即发布了 gcc 编译器，这使得程序员可以基于该编译器编写出属于自己的开源软件。随之，在 1991 年 10 月，芬兰赫尔辛基大学的在校生 Linus Torvalds 编写了一款名为 Linux 的操作系统，该系统因其较高的代码质量且基于 GNU GPL 许可协议的开放源代码特性，迅速得到了 GNU 计划和一大批黑客程序员的支持，随后 Linux 系统便进入了如火如荼的发展阶段。</p>\n<p>1994 年 1 月，Bob Young(红帽创始人)在 Linux 系统内核的基础之上，集成了众多的源代码和程序软件，发布了红帽系统并开始出售技术服务，这进一步推动了 Linux 系统的普及。</p>\n<p>1998 年以后，随着 GNU 源代码开放计划和 Linux 系统的继续火热，以 IBM 和 Intel 为首的多家 IT 企业巨头开始大力推动开放源代码软件的发展。</p>\n<p>到了 2017 年年底，Linux 内核已经发展到了 4.13 版本，并且 Linux 系统版本也有数百个之多，但它们依然都使用 Linus Torvalds 开发、维护的 Linux 系统内核。RedHat 公司也成为了开源行业及 Linux 系统的带头公司。</p>\n<p>初步接触 Linux 的读者，或者有这样一个疑问，Windows 系统也很好用，也能满足日常工作需求，为什么要学习 Linux 系统呢?</p>\n<p>有些初学者会将“Linxu 系统是开源的”作为这个问题的答案，其实不然。开源的操作系统少说有 100 个，开源的软件至少也有十万个，为什么不去逐个学习? Linux 的开源特性只是一部分优势，并不是学习 Linux 的主要原因。</p>\n<p>对于用户来讲，开源精神仅具备锦上添花的效果，真正的原因在于，Linux 系统是一款优秀的软件产品，具有类似 UNIX 的程序界面，而且继承了 UNIX 的稳定性，能够较好地满足工作需求。</p>\n",
      "date_published": "2019-11-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Linux 简介",
      "url": "https://blog.tlcsdm.com/linux/intro/intro.html",
      "id": "https://blog.tlcsdm.com/linux/intro/intro.html",
      "summary": "Linux 简介 Linux 内核最初只是由芬兰人林纳斯·托瓦兹 (Linus Torvalds) 在赫尔辛基大学上学时出于个人爱好而编写的。 Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。 Linux 能运行主要的 UNIX 工具软件、应用程序...",
      "content_html": "\n<p>Linux 内核最初只是由芬兰人林纳斯·托瓦兹 (Linus Torvalds) 在赫尔辛基大学上学时出于个人爱好而编写的。</p>\n<p>Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。</p>\n<p>Linux 能运行主要的 UNIX 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。Linux 继承了 Unix 以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p>\n<p>Linux 让开展各种实际有用且具有创造性的事情成为可能。例如，您可以在一个 U 盘上装载 Linux 的自生系统引导映像 (live boot image)，启动一台硬盘已经崩溃的计算机，之后査找并解决该问题。或者，因为 Linux 是一个真正的多用户操作系统，它具有非常好的私密性和稳定性，整个团队可以同时从本地或远程登录进行工作。</p>\n<p>Linux 的构建采用了一些与 UNIX 操作系统相同的技术，并带有大多数与深度成熟的 UNIX 操作系统相一致的工具，这极大地增加了稳定性与安全性。</p>\n<p>Linux 的发行版还提供了复杂的软件包管理系统，可以可靠地安装和维护每一个在线资源库中成千上万的免费软件应用。</p>\n<p>Linux 不仅是免费的，更是开源的(open source)，这意味着任何人都可以获得其代码并根据自己的需求进行修改。</p>\n<h2>Linux 的发行版</h2>\n<p>Linux 的发行版说简单点就是将 Linux 内核与应用软件做一个打包。</p>\n<figure><figcaption>intro</figcaption></figure>\n<p>事实上，已经孵化出专属 Linux 各发行版的巨大生态系统。一个发行版(distribution ，有时缩写为 distro)是一个定制的软件包，它将 Linux 内核以及用户计算机 Linux 运行版的安装工具一起发布。</p>\n<p>在 Linux 内核的发展过程中，各种 Linux 发行版本起了巨大的作用，正是它们推动了 Linux 的应用，从而让更多的人开始关注 Linux。因此，把 Red Hat、Ubuntu、SUSE 等直接说成 Linux 其实是不确切的，它们是 Linux 的发行版本，更确切地说，应该叫作“以 Linux 为核心的操作系统软件包”。</p>\n<p>Linux 的各个发行版本使用的是同一个 Linux 内核，因此在内核层不存在什么兼容性问题，每个版本有不一样的感觉，只是在发行版本的最外层(由发行商整合开发的应用)才有所体现。</p>\n<p>目前市面上较知名的发行版有: Ubuntu、RedHat、CentOS、Debian、Fedora、SuSE、OpenSUSE、Arch Linux、SolusOS 等。</p>\n<p>Linux 的发行版本可以大体分为两类:</p>\n<ul>\n<li>商业公司维护的发行版本，以著名的 Red Hat 为代表；</li>\n<li>社区组织维护的发行版本，以 Debian 为代表。</li>\n</ul>\n<p>很难说大量 Linux 版本中哪一款更好，每个版本都有自己的特点。</p>\n<h3>Red Hat Linux</h3>\n<p>Red Hat(红帽公司)创建于 1993 年，是目前世界上资深的 Linux 厂商，也是最获认可的 Linux 品牌。</p>\n<p>Red Hat 公司的产品主要包括 RHEL(Red Hat Enterprise Linux，收费版本)和 CentOS(RHEL 的社区克隆版本，免费版本)、Fedora Core(由 Red Hat 桌面版发展而来，免费版本)。</p>\n<p>Red Hat 是在我国国内使用人群最多的 Linux 版本，资料丰富，如果您有什么不明白的地方，则容易找到人来请教，而且大多数 Linux 教程是以 Red Hat 为例来讲解的(包括本教程)。</p>\n<p>CentOS 是基于 Red Hat Enterprise Linux 源代码重新编译、去除 Red Hat 商标的产物，各种操作使用和付费版本没有区别，且完全免费。缺点是不向用户提供技术支持，也不负任何商业责任。</p>\n<h3>Ubuntu Linux</h3>\n<p>Ubuntu 基于知名的 Debian Linux 发展而来，界面友好，容易上手，对硬件的支持非常全面，是目前最适合做桌面系统的 Linux 发行版本，而且 Ubuntu 的所有发行版本都免费提供。</p>\n<p>Ubuntu 的创始人 Mark Shuttleworth 是非常具有传奇色彩的人物。他在大学毕业后创建了一家安全咨询公司，1999 年以 5.75 亿美元被收购，由此一跃成为南非最年轻有为的本土富翁。作为一名狂热的天文爱好者，Mark Shuttleworth 于 2002 年自费乘坐俄罗斯联盟号飞船，在国际空间站中度过了 8 天的时光。之后，Mark Shuttleworth 创立了 Ubuntu 社区，2005 年 7 月 1 日建立了 Ubuntu 基金会，并为该基金会投资 1000 万美元。他说，太空的所见正是他创立 Ubuntu 的精神之所在。如今，他最热衷的事情就是到处为自由开源的 Ubuntu 进行宣传演讲。</p>\n<h3>SuSE Linux</h3>\n<p>SuSE Linux 以 Slackware Linux 为基础，原来是德国的 SuSE Linux AG 公司发布的 Linux 版本，1994 年发行了第一版，早期只有商业版本，2004 年被 Novell 公司收购后，成立了 OpenSUSE 社区，推出了自己的社区版本 OpenSUSE。</p>\n<p>SuSE Linux 在欧洲较为流行，在我国国内也有较多应用。值得一提的是，它吸取了 Red Hat Linux 的很多特质。</p>\n<p>SuSE Linux 可以非常方便地实现与 Windows 的交互，硬件检测非常优秀，拥有界面友好的安装过程、图形管理工具，对于终端用户和管理员来说使用非常方便。</p>\n<h3>Gentoo</h3>\n<p>Gentoo 最初由 Daniel Robbins(FreeBSD 的开发者之一)创建，首个稳定版本发布于 2002 年。Gentoo 是所有 Linux 发行版本里安装最复杂的，到目前为止仍采用源码包编译安装操作系统。</p>\n<p>不过，它是安装完成后最便于管理的版本，也是在相同硬件环境下运行最快的版本。自从 Gentoo 1.0 面世后，它就像一场风暴，给 Linux 世界带来了巨大的惊喜，同时也吸引了大量的用户和开发者投入 Gentoo Linux 的怀抱。</p>\n<p>有人这样评价 Gentoo: 快速、设计干净而有弹性，它的出名是因为其高度的自定制性(基于源代码的发行版)。尽管安装时可以选择预先编译好的软件包，但是大部分使用 Gentoo 的用户都选择自己手动编译。这也是为什么 Gentoo 适合比较有 Linux 使用经验的老手使用。</p>\n<h3>发行版选择</h3>\n<p>Linux 的发行版本众多，在此不逐一介绍，下面给选择 Linux 发行版本犯愁的朋友一点建议:</p>\n<ul>\n<li>\n<p>如果您需要的是一个服务器系统，而且已经厌烦了各种 Linux 的配置，只是想要一个比较稳定的服务器系统，那么建议您选择 CentOS 或 RHEL。</p>\n</li>\n<li>\n<p>如果您只是需要一个桌面系统，而且既不想使用盗版，又不想花大价钱购买商业软件，不想自己定制，也不想在系统上浪费太多时间，则可以选择 Ubuntu。</p>\n</li>\n<li>\n<p>如果您想深入摸索一下 Linux 各个方面的知识，而且还想非常灵活地定制自己的 Linux 系统，那就选择 Gentoo 吧，尽情享受 Gentoo 带来的自由快感。</p>\n</li>\n<li>\n<p>如果您对系统稳定性要求很高，则可以考虑 FreeBSD。</p>\n</li>\n<li>\n<p>如果您需要使用数据库高级服务和电子邮件网络应用，则可以选择 SuSE。</p>\n</li>\n</ul>\n",
      "date_published": "2019-11-15T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "语言",
      "url": "https://blog.tlcsdm.com/linux/intro/language.html",
      "id": "https://blog.tlcsdm.com/linux/intro/language.html",
      "summary": "Linux 中大量使用脚本语言，而不是 C 语言!",
      "content_html": "<p>Linux 中大量使用脚本语言，而不是 C 语言!</p>\n<!-- more -->\n<p>说到在 Linux 下的编程，很多人会想到用 C 语言，Linux 的内核、shell、基础命令程序，也的确是用 C 语言编写的，这首先证明了一点，C 语言很强很通用。</p>\n<p>到目前为止，C 语言依然垄断着计算机工业中几乎所有的系统编程，而且也正因为是 C 语言，才使得 Unix 以及后来的 Linux 能够这么广泛地被人们去研究、去改进、去制作自己的分支，以至于我们能在各种硬件平台上使用它们。</p>\n<p>但是细心的人会发现，Linux 启动过程中所涉及的各种程序，很少有 C 语言的痕迹。它们大多是脚本程序。不单单在启动过程中是这样，那些用于安装软件的工具 yum、apt-get，甚至是 configure 和 Makefile 也都是脚本程序。而且您可能还没注意到，那些用于系统管理的工具，如配置 ADSL 拨号上网的工具、配置守护进程的工具等，很多也都是脚本程序。</p>\n<p>大量使用脚本程序，是所有类 Unix 系统不同于其他系统的一个显著特征，催生人们在 Linux 中大量使用脚本来编写程序，并不仅仅是因为脚本对人直观、容易修改这种显著特性所决定的。另外一个主要的原因就是 Linux 所支持的脚本语言种类十分丰富。</p>\n<p>所有类 Unix 系统所必备的 shell，其本身就是一个强大的脚本解释器。所以从 shell 诞生的那一天起，shell 就是那些不懂 C 语言，又必须在 Unix 上编写程序的用户们的首选工具。</p>\n<p>这就给了人们一种新的选择，使用 shell 编程不用去理会让人头晕的指针；shell 程序可以直接利用系统命令来完成一些需要用大量 C 代码的功能；shell 编程不用去理会数据类型，不用考虑烦人的数值和字符数据的转换问题；shell 程序同样提供顺序、选择分支和循环这三种能够构建任意算法的基础设施。因此，shell 很快就能够被非专业用户所接受、掌握，并编写出非常实用的程序。</p>\n<p>随着时间的推移，这些非专业用户想往更高的方向发展，遇到了一些 shell 处理起来会很“蹩脚”的问题，比如分析文本和修改文本(别忘了“万般皆文本”)。这个时候他们会发现 有 awk 和 sed。也只需要写几行脚本就能将这些问题处理得很好。而且它们也跟 shell 配合得天衣无缝。或许这个时候会觉得加入了 awk 和 sed 的 shell 脚本有些难看，不过没关系，还有 Perl 和 TCL。Perl 天生就是为处理文本而存在的，TCL 也不含糊。</p>\n<p>如果觉得这些语言都太老气了，有些过时了，不要紧，还有 Python、Ruby 等这些现代脚本语言，它们除了不能写操作系统内核之外，几乎什么都能干，而且还是面向对象的。</p>\n<p>不管怎样，在 Linux 下能够选择的脚本语言都是极其丰富的。它们最大的特点就是简单、好学且资料丰富。简单就意味着容易维护，好学就容易吸引用户，资料丰富就不会在解决 bug 上出现障碍。即便是专业的程序员，也会因为这些特点而特别偏好脚本语言，导致的一个结果就是脚本程序在 Linux 中的大爆发。</p>\n<p>为什么不选择 C 语言呢?</p>\n<h2>C 语言并不是最佳选择</h2>\n<p>C 语言是 Unix 的母语，这是毋庸罝疑的。前面也说过，正是因为有了 C 语言，才使得 Unix 有了今天的成就。但为什么在 Linux 中有这么多程序，甚至是关键程序，不用 C 语言编写呢?</p>\n<p>脚本程序由于是解释执行的，在执行效率上自然是会有很大损失的。并且大家都知道，C 语言所编写的程序又是以效率著称的。但是 C 语言是一种编译型语言，要想让 C 语言的程序能够运行，必须经过编译和链接这两个步骤。</p>\n<p>要知道，能够将由几十个源代码文件构成的 C 语言程序，有条不紊地编译完成并能最终链接成一个可执行程序，本身就是一件费时又费力的事情，如果一旦程序有问题，还必须使用专门的调试工具一点点地去跟踪判断，修正之后再重复那些复杂的编译和链接步骤，这又是一个极需技巧的事情。积累并掌握技巧又是一件费时又费力的事情。</p>\n<p>在早些年，计算机性能不佳的时候，这些付出或许是值得的。但是放到现在，处理器的速度至少快了几千倍，内存大了几千倍，硬盘甚至大了几万倍，而价格却更低了。从经济角度分析，机器的时间成本早己远远低于人的时间成本了。那么 C 语言在机器效率上的优势根本没有任何意义。脚本程序能够给人节省下来的时间成本，则更具经济效益。\n要论机器效率，汇编语言比 C 语言要好上几十倍，但是目前还有谁在用汇编语言编程呢?</p>\n<p>C 语言在设计的时候，最主要的一个目标就是能够让程序员自己处理内存管理的问题。这使得 C 语言很强大但又太过于灵活，导致了很多陷阱的出现。稍微一不注意，程序中就会存在难以发觉的 Bug，甚至是严重的安全漏洞。程序员们大多是要以时间或失败为代价去积累经验，才能尽量避免这些问题的发生。而且效率在大多数应用中根本就不是问题，首要的是正确。脚本程序的简单和直观正是正确的起点，C 语言的灵活却是错误的根源。</p>\n<p>但是，C 语言并不是一无是处，也是 Unix 的精华。C 语言作为通用程序设计语言是所向无敌的。C 语言本身也非常简洁和紧凑，资料丰富且容易学习。C 语言之后的少数语言设计，为了不被 C 语言所吞并，不得不进行大的改动，比如引进垃圾回收机制等，以和 C 语言能够在功能上保持足够距离。也正是因为这样，C 语言始终没有消失，只是它的光辉在 Linux 中稍稍地被脚本程序所遮挡了一下。</p>\n<h2>脚本语言也有不足</h2>\n<p>虽然效率并不是脚本程序的缺点，但是种类过于丰富却是一个极大不足。编写一个复杂的应用，往往很难使用一种脚本语言包杆到底，因为脚本语言都有自己适用的场景，为了能够快速有效地完成某个应用，就需扬长避短，利用多种脚本语言混合编程。</p>\n<p>多脚本语言的混合编程是一种知识密集型的编程方法，但不是编码密集型的(这是能够被普遍接受的原因)。为了能够良好地使用这种方法，就要求程序员不仅仅要具备相当数量的多种语言知识，还必须具备能够判断这些语言的适用场景、以及如何将它们有效地组合在一起的经验。</p>\n<p>实际上，混合编程并不是脚本语言的专利，任何编程语言都行，只要您能找准那些语言的特点。比如笔者就曾经使用过 Basic 和 C 进行混合编程，去完成一个 DOS 版万年历程序。为了支持鼠标点击操作，用 C 完成了鼠标中断的处理。余下的部分都用 Basic 来完成。</p>\n<p>在 Linux 中大量应用脚本程序的场景，好多都是这种混合编程的典范。比如 Linux 的启动过程，主程序 init 是用 C 语言写的，具体到启动流程的各个环节则是 shell 脚本程序。</p>\n",
      "date_published": "2019-11-16T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "Linux 系统启动过程",
      "url": "https://blog.tlcsdm.com/linux/intro/startup.html",
      "id": "https://blog.tlcsdm.com/linux/intro/startup.html",
      "summary": "提示 本篇教程以 CentOS 为例介绍系统的启动过程。 Linux 启动时我们会看到许多启动信息。 Linux 系统的启动过程并不是大家想象中的那么复杂，其过程可以分为 5 个阶段: 内核的引导。 运行 init。 系统初始化。 建立终端 。 用户登录系统。 提示 init 程序的类型: SysV: init, CentOS 5 之前, 配置文件: ...",
      "content_html": "<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>本篇教程以 CentOS 为例介绍系统的启动过程。</p>\n</div>\n<p>Linux 启动时我们会看到许多启动信息。</p>\n<p>Linux 系统的启动过程并不是大家想象中的那么复杂，其过程可以分为 5 个阶段:</p>\n<ul>\n<li>内核的引导。</li>\n<li>运行 init。</li>\n<li>系统初始化。</li>\n<li>建立终端 。</li>\n<li>用户登录系统。</li>\n</ul>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>init 程序的类型:</p>\n<ul>\n<li>SysV: init, CentOS 5 之前, 配置文件: /etc/inittab。</li>\n<li>Upstart: init,CentOS 6, 配置文件: /etc/inittab, /etc/init/*.conf。</li>\n<li>Systemd: systemd, CentOS 7,配置文件: /usr/lib/systemd/system、 /etc/systemd/system。</li>\n</ul>\n</div>\n<h2>内核引导</h2>\n<p>当计算机打开电源后，首先是 BIOS 开机自检，按照 BIOS 中设置的启动设备(通常是硬盘)来启动。</p>\n<p>操作系统接管硬件以后，首先读入 <code>/boot</code> 目录下的内核文件。</p>\n<figure><figcaption>boot</figcaption></figure>\n<h2>运行 init</h2>\n<p>init 进程是系统所有进程的起点，您可以把它比拟成系统所有进程的老祖宗，没有这个进程，系统中任何进程都不会启动。</p>\n<p>init 程序首先是需要读取配置文件 <code>/etc/inittab</code>。</p>\n<figure><figcaption>init</figcaption></figure>\n<h3>运行级别</h3>\n<p>许多程序需要开机启动。它们在 Windows 叫做\"服务\"(service)，在 Linux 就叫做\"守护进程\"(daemon)。</p>\n<p>init 进程的一大任务，就是去运行这些开机启动的程序。</p>\n<p>但是，不同的场合需要启动不同的程序，比如用作服务器时，需要启动 Apache，用作桌面就不需要。</p>\n<p>Linux 允许为不同的场合，分配不同的开机启动程序，这就叫做\"运行级别\"(runlevel)。也就是说，启动时根据\"运行级别\"，确定要运行哪些程序。</p>\n<figure><figcaption>runlevel</figcaption></figure>\n<p>Linux 系统有 7 个运行级别(runlevel):</p>\n<ul>\n<li>运行级别 0: 系统停机状态，系统默认运行级别不能设为 0，否则不能正常启动</li>\n<li>运行级别 1: 单用户工作状态，root 权限，用于系统维护，禁止远程登陆</li>\n<li>运行级别 2: 多用户状态(没有 NFS)</li>\n<li>运行级别 3: 完全的多用户状态(有 NFS)，登陆后进入控制台命令行模式</li>\n<li>运行级别 4: 系统未使用，保留</li>\n<li>运行级别 5: X11 控制台，登陆后进入图形 GUI 模式</li>\n<li>运行级别 6: 系统正常关闭并重启，默认运行级别不能设为 6，否则不能正常启动</li>\n</ul>\n<h2>系统初始化</h2>\n<p>在 init 的配置文件中有这么一行: <code>si::sysinit:/etc/rc.d/rc.sysinit</code>　它调用执行了 <code>/etc/rc.d/rc.sysinit</code>，而 <code>rc.sysinit</code> 是一个 bash shell 的脚本，它主要是完成一些系统初始化的工作，rc.sysinit 是每一个运行级别都要首先运行的重要脚本。</p>\n<p>它主要完成的工作有: 激活交换分区，检查磁盘，加载硬件模块以及其它一些需要优先执行任务。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">l5:5:wait:/etc/rc.d/rc</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>这一行表示以 5 为参数运行 <code>/etc/rc.d/rc</code>，<code>/etc/rc.d/rc</code> 是一个 Shell 脚本，它接受 5 作为参数，去执行 <code>/etc/rc.d/rc5.d/</code> 目录下的所有的 rc 启动脚本，<code>/etc/rc.d/rc5.d/</code> 目录中的这些启动脚本实际上都是一些连接文件，而不是真正的 rc 启动脚本，真正的 rc 启动脚本实际上都是放在 <code>/etc/rc.d/init.d/</code>目录下。</p>\n<p>而这些 rc 启动脚本有着类似的用法，它们一般能接受 start、stop、restart、status 等参数。</p>\n<p><code>/etc/rc.d/rc5.d/</code> 中的 rc 启动脚本通常是 K 或 S 开头的连接文件，对于以 S 开头的启动脚本，将以 start 参数来运行。</p>\n<p>而如果发现存在相应的脚本也存在 K 打头的连接，而且已经处于运行态了(以 <code>/var/lock/subsys/</code> 下的文件作为标志)，则将首先以 stop 为参数停止这些已经启动了的守护进程，然后再重新运行。</p>\n<p>这样做是为了保证是当 init 改变运行级别时，所有相关的守护进程都将重启。</p>\n<p>至于在每个运行级中将运行哪些守护进程，用户可以通过 chkconfig 或 setup 中的 \"System Services\" 来自行设定。</p>\n",
      "date_published": "2020-05-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "ubuntu",
      "url": "https://blog.tlcsdm.com/linux/ubuntu/",
      "id": "https://blog.tlcsdm.com/linux/ubuntu/",
      "summary": "ubuntu",
      "content_html": "\n<ul>\n<li>\n<p><a href=\"/linux/ubuntu/manage.html\" target=\"_blank\">管理包</a></p>\n</li>\n<li>\n<p><a href=\"/linux/ubuntu/debug.html\" target=\"_blank\">开发软件</a></p>\n</li>\n<li>\n<p><a href=\"/linux/ubuntu/webserver.html\" target=\"_blank\">网络服务器相关</a></p>\n</li>\n<li>\n<p><a href=\"/linux/ubuntu/lang.html\" target=\"_blank\">语言切换</a></p>\n</li>\n</ul>\n",
      "date_published": "2019-11-21T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "开发软件",
      "url": "https://blog.tlcsdm.com/linux/ubuntu/debug.html",
      "id": "https://blog.tlcsdm.com/linux/ubuntu/debug.html",
      "summary": "开发软件 安装 VS Code 使用 snap 在 WSL 环境下 snap 无法使用，则使用以下命令安装 code 库。 然后正常安装: 可能还需要安装 remote 插件安装 nvm 在 Linux 上可能需要重新链接终端，命令才可用。 测试命令，输入 nvm 即安装成功: 安装命令: 切换命令: 安装 Git yarn 测试是否安装成功:",
      "content_html": "\n<h2>安装 VS Code</h2>\n<ul>\n<li>\n<p>使用 snap</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> snap</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --classic</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> code</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>在 WSL 环境下 snap 无法使用，则使用以下命令安装 code 库。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">curl</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> https://packages.microsoft.com/keys/microsoft.asc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">gpg</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --dearmor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &gt; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">packages.microsoft.gpg</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> root</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -g</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> root</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -m</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 644</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> packages.microsoft.gpg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /usr/share/keyrings/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> sh</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -c</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main\" &gt; /etc/apt/sources.list.d/vscode.list'</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后正常安装:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-transport-https</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> update</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> code</span><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"> # or code-insiders</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ul>\n<p>可能还需要安装</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> libx11-xcb1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> libasound2</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h3>remote 插件安装</h3>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">code</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --install-extension</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ms-vscode-remote.vscode-remote-extensionpack</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>nvm</h2>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">curl</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o-</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>在 Linux 上可能需要重新链接终端，命令才可用。</p>\n<p>测试命令，输入 <code>nvm</code> 即安装成功:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">command</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -v</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> nvm</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>安装命令:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nvm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 10</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>切换命令:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">nvm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> use</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 10</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><h2>安装 Git</h2>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> add-apt-repository</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ppa:git-core/ppa</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> update</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>yarn</h2>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">curl</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -sS</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> https://dl.yarnpkg.com/debian/pubkey.gpg</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-key</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> add</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> -</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"deb https://dl.yarnpkg.com/debian/ stable main\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> tee</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /etc/apt/sources.list.d/yarn.list</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> update</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &amp;&amp; </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> yarn</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>测试是否安装成功:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">yarn</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --version</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>",
      "date_published": "2019-11-21T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "语言切换",
      "url": "https://blog.tlcsdm.com/linux/ubuntu/lang.html",
      "id": "https://blog.tlcsdm.com/linux/ubuntu/lang.html",
      "summary": "语言切换 查看当前语言包: locale -a 中文语言是: zh_CN.utf8 安装中文语言包 之后修改 /etc/default/locale，将 LANG 改为 zh_CN.utf8",
      "content_html": "\n<p>查看当前语言包: <code>locale -a</code></p>\n<p>中文语言是: <code>zh_CN.utf8</code></p>\n<h2>安装中文语言包</h2>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> language-pack-zh-hans</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>之后修改 <code>/etc/default/locale</code>，将 <code>LANG</code> 改为 <code>zh_CN.utf8</code></p>\n",
      "date_published": "2019-11-22T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "管理工具",
      "url": "https://blog.tlcsdm.com/linux/ubuntu/manage.html",
      "id": "https://blog.tlcsdm.com/linux/ubuntu/manage.html",
      "summary": "管理工具 apt-get apt-get 命令默认的源在国内访问很慢，可以考虑换源。 获取软件包更新: 更新软件包: 其他命令[1] Snap 已经预装。 在中国大陆不建议使用 Snap 其他命令 ↩︎",
      "content_html": "\n<h2>apt-get</h2>\n<p><code>apt-get</code> 命令默认的源在国内访问很慢，可以考虑换源。</p>\n<ul>\n<li>\n<p>获取软件包更新:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> update</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>更新软件包:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> update</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>其他命令<sup class=\"footnote-ref\"><a href=\"#footnote1\">[1]</a><a class=\"footnote-anchor\" id=\"footnote-ref1\"></a></sup></p><a class=\"footnote-anchor\" id=\"footnote-ref1\">\n</a></li><a class=\"footnote-anchor\" id=\"footnote-ref1\">\n</a></ul><a class=\"footnote-anchor\" id=\"footnote-ref1\">\n<hr class=\"footnotes-sep\">\n</a><section class=\"footnotes\"><a class=\"footnote-anchor\" id=\"footnote-ref1\">\n</a><ol class=\"footnotes-list\"><a class=\"footnote-anchor\" id=\"footnote-ref1\">\n</a><li id=\"footnote1\" class=\"footnote-item\"><a class=\"footnote-anchor\" id=\"footnote-ref1\"><p>其他命令</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">apt-cache</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> search</span><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"> #</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div> </a><a href=\"#footnote-ref1\" class=\"footnote-backref\">↩︎</a></li>\n</ol>\n</section>\n",
      "date_published": "2019-11-21T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "Linux"
      ]
    },
    {
      "title": "网络服务器相关",
      "url": "https://blog.tlcsdm.com/linux/ubuntu/webserver.html",
      "id": "https://blog.tlcsdm.com/linux/ubuntu/webserver.html",
      "summary": "网络服务器相关 ftp vsftpd 安装 配置 至少要更改: Nginx 安装 Nginx 默认安装在 /etc/nginx 目录下 配置 配置文件为 nginx.conf。 默认站点配置文件在 /etc/nginx/sites-available/default 为了使得 Nginx 能使用 PHP，需要配置 PHP MySQL 安装 配置版本(一...",
      "content_html": "\n<h2>ftp</h2>\n<h3>vsftpd</h3>\n<ul>\n<li>\n<p>安装</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> vsftpd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ftp</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>配置</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">vim</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /etc/vsftpd.conf</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>至少要更改:</p>\n<div class=\"language-ini line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"ini\" data-title=\"ini\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#C678DD\">write_enable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#98C379\">YES</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#C678DD\">utf8_filesystem</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#98C379\">YES</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ul>\n<h2>Nginx</h2>\n<ul>\n<li>\n<p>安装</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> nginx</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>Nginx 默认安装在 <code>/etc/nginx</code> 目录下</p>\n</li>\n<li>\n<p>配置</p>\n<p>配置文件为 <code>nginx.conf</code>。</p>\n<p>默认站点配置文件在 <code>/etc/nginx/sites-available/default</code></p>\n<p>为了使得 Nginx 能使用 PHP，需要配置</p>\n<div class=\"language-nginx line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"nginx\" data-title=\"nginx\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">location</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ~ </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#E06C75\">\\.php$ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    root </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">          /var/www/html;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\">    # 配置给 socks 应该可行，还在研究中</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    fastcgi_pass </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  127.0.0.1:9000;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    fastcgi_index </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> index.php;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    fastcgi_param </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> SCRIPT_FILENAME  $</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">document_root</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">fastcgi_script_name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    include </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">       fastcgi_params;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ul>\n<h2>PHP</h2>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># Apache</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> php</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># Ngnix</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> php-fpm</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\"># MySQL</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> php-mysql</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>MySQL</h2>\n<h3>安装</h3>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">wget</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> https://dev.mysql.com/get/mysql-apt-config_0.8.14-1_all.deb</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dpkg</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> mysql-apt-config_0.8.14-1_all.deb</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>配置版本(一般是 5.7)后安装</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> mysql-server</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>之后重启，完成配置</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> service</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> mysql</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> restart</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">mysql</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -u</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> root</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2>NMP</h2>\n<p>需要对 Nginx 的配置文件进行修改: 主要改动的目标是把 Nginx 代理端口转发给 php-fpm。</p>\n<p>首先配置 index:</p>\n<div class=\"language-nginx line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"nginx\" data-title=\"nginx\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">index </span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">index.php index.html;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>需要注意的是，Nginx 将端口转发给 php 默认的 9000 端口。而通过 apt-get 安装的 php 默认使用本地 sock 文件通信，需要对 php 的配置进行修改。要修改的文件位于: <code>/etc/php/7.2/fpm/pool.d/www.conf</code>，将</p>\n<div class=\"language-ini line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"ini\" data-title=\"ini\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#C678DD\">listen</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#98C379\"> /run/php/php7.0-fpm.sock</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><p>改成:</p>\n<div class=\"language-ini line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"ini\" data-title=\"ini\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#C678DD\">listen</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#98C379\"> 127.0.0.1:9000</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>如果报了 permission limitted 的错误，说明 php 没法访问 html 文件夹，修改配置的 html 文件夹权限即可。</p>\n</div>\n",
      "date_published": "2019-11-22T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "秋之思【一】",
      "url": "https://blog.tlcsdm.com/note/fall/1.html",
      "id": "https://blog.tlcsdm.com/note/fall/1.html",
      "summary": "毕竟已是秋了，早晚有了些许凉意， 但正午的阳光还有些强烈， 仿佛夏的余热还没有散去。 八月桂花香馨远， 那丝丝缕缕的香沁人心脾， 那浅浅淡雅能瞬间饱满单薄的心， 让内心喜悦如莲。 燥热了一夏， 时光终于慢了下来， 慢得仿佛能抓住岁月的脚步; 日子终于静了下来， 静的仿佛能听见花开的声音。 喜欢这样安恬的静好， 可以坐下来喝一杯茶， 品一些文字， 让一颗...",
      "content_html": "<div style=\"text-align:center\">\n<p>毕竟已是秋了，早晚有了些许凉意，</p>\n<p>但正午的阳光还有些强烈，</p>\n<p>仿佛夏的余热还没有散去。</p>\n<p>八月桂花香馨远，</p>\n<p>那丝丝缕缕的香沁人心脾，</p>\n<p>那浅浅淡雅能瞬间饱满单薄的心，</p>\n<p>让内心喜悦如莲。</p>\n<p>燥热了一夏，</p>\n<p>时光终于慢了下来，</p>\n<p>慢得仿佛能抓住岁月的脚步;</p>\n<p>日子终于静了下来，</p>\n<p>静的仿佛能听见花开的声音。</p>\n<p>喜欢这样安恬的静好，</p>\n<p>可以坐下来喝一杯茶，</p>\n<p>品一些文字，</p>\n<p>让一颗浮躁的心在喧嚣中沉淀，</p>\n<p>回眸，凝视，闭眼，</p>\n<p>纵有万千思绪，</p>\n<p>都已风轻云淡。</p>\n</div>\n",
      "date_published": "2014-08-18T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "随笔"
      ]
    },
    {
      "title": "秋之思【十】",
      "url": "https://blog.tlcsdm.com/note/fall/10.html",
      "id": "https://blog.tlcsdm.com/note/fall/10.html",
      "summary": "秋之思【十】 我曾假如 我是一片落叶， 但我不会停留 于你的窗前， 我会落于月下 你常走的曲径， 凝视你的容颜， 记下你的足迹， 数着你的流年， 伴着阵阵夜风， 紧跟你的影子， 流离于你的梦， 释一季情怀， 解一程寂寞， 诗意地迷恋于 你的红尘。",
      "content_html": "\n<div style=\"text-align:center\">\n<p>我曾假如</p>\n<p>我是一片落叶，</p>\n<p>但我不会停留</p>\n<p>于你的窗前，</p>\n<p>我会落于月下</p>\n<p>你常走的曲径，</p>\n<p>凝视你的容颜，</p>\n<p>记下你的足迹，</p>\n<p>数着你的流年，</p>\n<p>伴着阵阵夜风，</p>\n<p>紧跟你的影子，</p>\n<p>流离于你的梦，</p>\n<p>释一季情怀，</p>\n<p>解一程寂寞，</p>\n<p>诗意地迷恋于</p>\n<p>你的红尘。</p>\n</div>\n",
      "date_published": "2014-08-30T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "随笔"
      ]
    },
    {
      "title": "秋之思【十一】",
      "url": "https://blog.tlcsdm.com/note/fall/11.html",
      "id": "https://blog.tlcsdm.com/note/fall/11.html",
      "summary": "秋之思【十一】 寂寂芸窗， 魂系南天流芳。 记初见怡情烂漫且将忧忘， 浮萍随去，落叶纷飞数斜阳。 ♢ 露湿衣裳， 香彻惹乱柔肠。 玉阶前暗渡冰心魂画琳琅， 独行云间，漫舞风情韵幽香。 ♢ 青山苍茫， 无非阡繁道长。 看今朝恬淡从容背起行囊， 抽丝破茧，化蝶方能见阳光。",
      "content_html": "\n<div style=\"text-align:center\">\n<p>寂寂芸窗，</p>\n<p>魂系南天流芳。</p>\n<p>记初见怡情烂漫且将忧忘，</p>\n<p>浮萍随去，落叶纷飞数斜阳。</p>\n<p>♢</p>\n<p>露湿衣裳，</p>\n<p>香彻惹乱柔肠。</p>\n<p>玉阶前暗渡冰心魂画琳琅，</p>\n<p>独行云间，漫舞风情韵幽香。</p>\n<p>♢</p>\n<p>青山苍茫，</p>\n<p>无非阡繁道长。</p>\n<p>看今朝恬淡从容背起行囊，</p>\n<p>抽丝破茧，化蝶方能见阳光。</p>\n</div>\n",
      "date_published": "2014-08-31T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "随笔"
      ]
    },
    {
      "title": "秋之思【十二】",
      "url": "https://blog.tlcsdm.com/note/fall/12.html",
      "id": "https://blog.tlcsdm.com/note/fall/12.html",
      "summary": "秋之思【十二】 月满西楼，几多愁? 苍穹无语，谁解心曲? 几多相思染双眉，年华无悔! ♢ 孤月清冷，群山失色，望银河，相思成灾。 罢，罢，罢! 空留佳话，冷落芳华! ♢ 闲依小窗，对月独酌。 万种心事，千种相思，都付与花草树木。",
      "content_html": "\n<p>月满西楼，几多愁? 苍穹无语，谁解心曲?</p>\n<p>几多相思染双眉，年华无悔!</p>\n<div style=\"text-align:center\">\n<p>♢</p>\n</div>\n<p>孤月清冷，群山失色，望银河，相思成灾。</p>\n<p>罢，罢，罢! 空留佳话，冷落芳华!</p>\n<div style=\"text-align:center\">\n<p>♢</p>\n</div>\n<p>闲依小窗，对月独酌。</p>\n<p>万种心事，千种相思，都付与花草树木。</p>\n",
      "date_published": "2014-09-01T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "随笔"
      ]
    },
    {
      "title": "秋之思【十三】",
      "url": "https://blog.tlcsdm.com/note/fall/13.html",
      "id": "https://blog.tlcsdm.com/note/fall/13.html",
      "summary": "秋之思【十三】 桃园恋，山水相依遥相盼，余恨绵绵。 ♢ 常相思，空负，桃花堪折枝，情待何时? ♢ 碧云天，苍穹高远，今昔别梦寒，琵琶私语泪涟涟，往事随云烟!",
      "content_html": "\n<p>桃园恋，山水相依遥相盼，余恨绵绵。</p>\n<div style=\"text-align:center\">\n<p>♢</p>\n</div>\n<p>常相思，空负，桃花堪折枝，情待何时?</p>\n<div style=\"text-align:center\">\n<p>♢</p>\n</div>\n<p>碧云天，苍穹高远，今昔别梦寒，琵琶私语泪涟涟，往事随云烟!</p>\n",
      "date_published": "2014-09-02T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "随笔"
      ]
    },
    {
      "title": "秋之思【十四】",
      "url": "https://blog.tlcsdm.com/note/fall/14.html",
      "id": "https://blog.tlcsdm.com/note/fall/14.html",
      "summary": "秋之思【十四】 肩上蝶，袖底清风，如烟归去，散落天涯。 ♢ 碧波亭，繁花似锦，翘首天涯何为暖? 羽翼化蝶，衣袂飘飘，怎能红尘恋? ♢ 惜别，痴念，月残上弦!",
      "content_html": "\n<p>肩上蝶，袖底清风，如烟归去，散落天涯。</p>\n<div style=\"text-align:center\">\n<p>♢</p>\n</div>\n<p>碧波亭，繁花似锦，翘首天涯何为暖?</p>\n<p>羽翼化蝶，衣袂飘飘，怎能红尘恋?</p>\n<div style=\"text-align:center\">\n<p>♢</p>\n</div>\n<p>惜别，痴念，月残上弦!</p>\n",
      "date_published": "2014-09-03T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "随笔"
      ]
    },
    {
      "title": "秋之思【十五】",
      "url": "https://blog.tlcsdm.com/note/fall/15.html",
      "id": "https://blog.tlcsdm.com/note/fall/15.html",
      "summary": "秋之思【十五】 红尘恋，清欢浅浅，梦不相连。转朱阁，低绮户，风尘无路。 ♢ 淡相思，深深怨，浮华尽散，何处觅尘缘? ♢ 春花秋月，几度寒暑。 关山万座情难阻，一片冰心在玉壶。",
      "content_html": "\n<p>红尘恋，清欢浅浅，梦不相连。转朱阁，低绮户，风尘无路。</p>\n<div style=\"text-align:center\">\n<p>♢</p>\n</div>\n<p>淡相思，深深怨，浮华尽散，何处觅尘缘?</p>\n<div style=\"text-align:center\">\n<p>♢</p>\n</div>\n<p>春花秋月，几度寒暑。</p>\n<p>关山万座情难阻，一片冰心在玉壶。</p>\n",
      "date_published": "2014-09-04T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "随笔"
      ]
    },
    {
      "title": "秋之思【十六】",
      "url": "https://blog.tlcsdm.com/note/fall/16.html",
      "id": "https://blog.tlcsdm.com/note/fall/16.html",
      "summary": "秋之思【十六】 萧瑟的风穿过枝头累累硕果 把秋渲染， 飘零的落叶夹着一笺心语 悠然地呢喃， 惆怅的心裹着一种情愫 静静地缠绵， 是谁触动了那根相思的心弦， 让感动滚烫的泪泛滥， 让紧锁的黛眉舒展? 每当秋叶飘零前， 我便抽出那长长的牵念， 拾起一地相思， 染尽枫红菊黄苍天蓝； 铺开一张秋笺 书尽绕指柔情， 让你我的心语共舞， 让你我的心灵永远缠绵。 一...",
      "content_html": "\n<div style=\"text-align:center\">\n<p>萧瑟的风穿过枝头累累硕果</p>\n<p>把秋渲染，</p>\n<p>飘零的落叶夹着一笺心语</p>\n<p>悠然地呢喃，</p>\n<p>惆怅的心裹着一种情愫</p>\n<p>静静地缠绵，</p>\n<p>是谁触动了那根相思的心弦，</p>\n<p>让感动滚烫的泪泛滥，</p>\n<p>让紧锁的黛眉舒展?</p>\n<p>每当秋叶飘零前，</p>\n<p>我便抽出那长长的牵念，</p>\n<p>拾起一地相思，</p>\n<p>染尽枫红菊黄苍天蓝；</p>\n<p>铺开一张秋笺</p>\n<p>书尽绕指柔情，</p>\n<p>让你我的心语共舞，</p>\n<p>让你我的心灵永远缠绵。</p>\n<p>一笺一语一飘香，</p>\n<p>两心一意话情长，</p>\n<p>即使望断天涯又何妨?</p>\n<p>♢</p>\n<p>一笺一悠扬，</p>\n<p>一砚一寒凉，</p>\n<p>一墨一凝香，</p>\n<p>一笔一牵肠，</p>\n<p>一言一语寄相思，</p>\n<p>一字一句荡心房。</p>\n<p>你给我的心空带来了一片敞亮，</p>\n<p>给我的生命带来了永久的芬芳。</p>\n<p>无论世态怎么炎凉，</p>\n<p>我都会沉醉于秋阳</p>\n<p>坐看云起，嫣然浅唱，</p>\n<p>让美好永驻，让情感激昂。</p>\n</div>\n",
      "date_published": "2014-09-06T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "随笔"
      ]
    },
    {
      "title": "秋之思【十七】",
      "url": "https://blog.tlcsdm.com/note/fall/17.html",
      "id": "https://blog.tlcsdm.com/note/fall/17.html",
      "summary": "秋之思【十七】 喜欢独自一人， 去收集那一朵朵云的白， 去采集秋日阳光的融暖。 沿着这一份青翠找来。 安放了光阴的青藤， 听那风铃的细微声响， 看那正合时宜的花草。 如果可以， 我想牵着岁月的手， 一起走过安之若素的浅秋。 或许，会多了些烟火的味道。 然而，琐碎的时光， 终寻不到些许烟火存留的气息， 只有寸寸重叠的光阴， 在岁月的花篮中繁花锦簇， 唯美...",
      "content_html": "\n<div style=\"text-align:center\">\n<p>喜欢独自一人，</p>\n<p>去收集那一朵朵云的白，</p>\n<p>去采集秋日阳光的融暖。</p>\n<p>沿着这一份青翠找来。</p>\n<p>安放了光阴的青藤，</p>\n<p>听那风铃的细微声响，</p>\n<p>看那正合时宜的花草。</p>\n<p>如果可以，</p>\n<p>我想牵着岁月的手，</p>\n<p>一起走过安之若素的浅秋。</p>\n<p>或许，会多了些烟火的味道。</p>\n<p>然而，琐碎的时光，</p>\n<p>终寻不到些许烟火存留的气息，</p>\n<p>只有寸寸重叠的光阴，</p>\n<p>在岁月的花篮中繁花锦簇，</p>\n<p>唯美，而忧伤。</p>\n</div>\n",
      "date_published": "2014-09-09T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "随笔"
      ]
    },
    {
      "title": "秋之思【十八】",
      "url": "https://blog.tlcsdm.com/note/fall/18.html",
      "id": "https://blog.tlcsdm.com/note/fall/18.html",
      "summary": "秋之思【十八】 又是一年匆匆， 走过了春的明媚， 走过了夏的繁盛， 还没来得及多想， 刚一转身， 便又与秋不期而遇。 不知不觉间， 时光婉转，岁月安然； 与高二分别，和高三见面。 是的， 累了，忙了，压力也大了， 但仍我仍然渴望， 那些在学习的空余间， 用自己的笔尖， 将生活的诗意书写于纸面， 寄托对逝去的同窗时光的思念。 面对婉约的春，活泼的夏， 也...",
      "content_html": "\n<div style=\"text-align:center\">\n<p>又是一年匆匆，</p>\n<p>走过了春的明媚，</p>\n<p>走过了夏的繁盛，</p>\n<p>还没来得及多想，</p>\n<p>刚一转身，</p>\n<p>便又与秋不期而遇。</p>\n<p>不知不觉间，</p>\n<p>时光婉转，岁月安然；</p>\n<p>与高二分别，和高三见面。</p>\n<p>是的，</p>\n<p>累了，忙了，压力也大了，</p>\n<p>但仍我仍然渴望，</p>\n<p>那些在学习的空余间，</p>\n<p>用自己的笔尖，</p>\n<p>将生活的诗意书写于纸面，</p>\n<p>寄托对逝去的同窗时光的思念。</p>\n<p>面对婉约的春，活泼的夏，</p>\n<p>也许我并没有太多感触，</p>\n<p>笔，总是拿起而又放下。</p>\n<p>而每每遇见秋，</p>\n<p>就犹如故人归，</p>\n<p>不需要过多的寒喧，</p>\n<p>而就像有些喜欢，</p>\n<p>只是一眼，便会妥帖在心里。</p>\n<p>静静端坐于时光的门槛，</p>\n<p>看一片落叶点缀了秋色，</p>\n<p>见一畦清露渲染了秋凉，</p>\n<p>一季落花飘进秋的门扉，</p>\n<p>那被吹散在风中的落叶，</p>\n<p>还在与何人，喃喃私语?</p>\n<p>终是沉寂了，</p>\n<p>经过了夏的盛放，</p>\n<p>走进了秋的萧索，</p>\n<p>有些遇见是繁华的，</p>\n<p>而有些碰面亦会有寂寥。</p>\n<p>时光给予我们一个姹紫嫣红的相逢，</p>\n<p>却为我们留下一个风轻云淡的背影，</p>\n<p>也许唯有那些花开的记忆，</p>\n<p>才是永恒不变的芬芳。</p>\n<p>以前写文，</p>\n<p>喜欢用些华丽的词语，</p>\n<p>来装饰要写的人或事，</p>\n<p>注重美感与诗意。</p>\n<p>而现在，</p>\n<p>我只想用平实的语言，</p>\n<p>去书写一份简单。</p>\n<p>其实生活也是同样，</p>\n<p>无论曾经多么繁华，</p>\n<p>都会回归简单的，</p>\n<p>就如这安静的秋，</p>\n<p>虽没有了姹紫嫣红的艳丽，</p>\n<p>却有着成熟的况味和美感。</p>\n</div>\n",
      "date_published": "2015-09-08T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "随笔"
      ]
    },
    {
      "title": "秋之思【十九】",
      "url": "https://blog.tlcsdm.com/note/fall/19.html",
      "id": "https://blog.tlcsdm.com/note/fall/19.html",
      "summary": "秋之思【十九】 我爱秋的明媚， 也爱秋的静美， 秋是温婉的， 如院子里桂花的芬芳； 秋是明净的， 如白云悠悠的天空； 秋是深邃的， 如清晨波光淡影的湖面。 抬头， 于秋阳中仰望天空， 一朵悄然而过的流云， 遮住暖暖的光线， 远处，山，水，云，树 仿佛重叠在视线中， 天高，云淡， 伴着我一颗纯净无尘的秋心。 秋风中， 校园里银杏树的叶子 在秋风中刚刚泛黄...",
      "content_html": "\n<div style=\"text-align:center\">\n<p>我爱秋的明媚，</p>\n<p>也爱秋的静美，</p>\n<p>秋是温婉的，</p>\n<p>如院子里桂花的芬芳；</p>\n<p>秋是明净的，</p>\n<p>如白云悠悠的天空；</p>\n<p>秋是深邃的，</p>\n<p>如清晨波光淡影的湖面。</p>\n<p>抬头，</p>\n<p>于秋阳中仰望天空，</p>\n<p>一朵悄然而过的流云，</p>\n<p>遮住暖暖的光线，</p>\n<p>远处，山，水，云，树</p>\n<p>仿佛重叠在视线中，</p>\n<p>天高，云淡，</p>\n<p>伴着我一颗纯净无尘的秋心。</p>\n<p>秋风中，</p>\n<p>校园里银杏树的叶子</p>\n<p>在秋风中刚刚泛黄，</p>\n<p>比起那些枝繁叶茂的深绿，</p>\n<p>更显得有韵味。</p>\n<p>其实我觉得，</p>\n<p>一树风景足以影映四季，</p>\n<p>从萌芽到初绽，</p>\n<p>再到繁盛和枯落，</p>\n<p>途经的是从荣到枯的过程，</p>\n<p>也是一种生命沉淀的美丽。</p>\n<p>喜欢那句:</p>\n<p>生活不是浮在纸上的华丽，而是沉在书中的寂静，谁能数载春风不落? 终是要收敛的，相信能够隐忍的种种都是生命的花朵，给花一份温柔，又何尝不是给自己一\n缕明媚?</p>\n<p>一直以低温的姿态，</p>\n<p>前行于尘世间，</p>\n<p>听风轻吟，</p>\n<p>观雨潇潇，</p>\n<p>不求热烈，</p>\n<p>只求安恬。</p>\n<p>读书，</p>\n<p>书里含香，</p>\n<p>字里有情，</p>\n<p>喝茶，</p>\n<p>半杯是安暖，</p>\n<p>半杯是清凉。</p>\n<p>总是以为，</p>\n<p>最好的懂得会在文字间，</p>\n<p>于是喜欢将那些</p>\n<p>打马而过的往事，</p>\n<p>曾经的山长水阔，</p>\n<p>于文字中倾诉。</p>\n<p>可终有一天，</p>\n<p>素笺上的小字会旧，</p>\n<p>豆蒄上的相思会开老，</p>\n<p>唯剩下一朵寂寞的字符，</p>\n<p>就如经过一场盛大的狂欢之后，</p>\n<p>便是长长的寂廖。</p>\n</div>\n",
      "date_published": "2015-09-09T00:00:00.000Z",
      "date_modified": "2024-02-03T05:28:44.000Z",
      "authors": [],
      "tags": [
        "随笔"
      ]
    }
  ]
}